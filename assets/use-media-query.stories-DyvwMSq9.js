import{j as n}from"./jsx-runtime-BpbtHYHY.js";import{r as x}from"./index-BwPxMuoB.js";import{ai as D,ab as f,Q as g}from"./factory-B_KMcXyW.js";import{T as u}from"./text-clsxocLN.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./forward-ref-Ukjd1cIW.js";import"./use-component-style-65RA3nVD.js";import"./theme-provider-DGyR61Aa.js";const v=(t,{fallback:a,ssr:w=!0}={})=>{const{getWindow:m}=D(),l=g(t)?t:[t];let d=g(a)?a:[a];d=d.filter(r=>r!=null);const[Q,h]=x.useState(()=>l.map((r,o)=>{var s;return{matches:w?!!d[o]:!!((s=m())!=null&&s.matchMedia(r).matches),media:r}}));return x.useEffect(()=>{const r=m();if(!r)return;h(l.map(e=>({matches:r.matchMedia(e).matches,media:e})));const o=l.map(e=>r.matchMedia(e)),s=e=>{h(y=>y.slice().map(p=>p.media===e.media?{...p,matches:e.matches}:p))};return o.forEach(e=>{f(e.addListener)?e.addListener(s):e.addEventListener("change",s)}),()=>{o.forEach(e=>{f(e.removeListener)?e.removeListener(s):e.removeEventListener("change",s)})}},[m]),Q.map(r=>r.matches)},R={title:"Hooks / useMediaQuery"},i=()=>{const[t]=v("(min-width: 1280px)");return n.jsx(u,{children:t?"larger than 1280px":"smaller than 1280px"})},c=()=>{const[t,a]=v(["(min-width: 1280px)","(prefers-color-scheme: dark)"]);return n.jsxs(n.Fragment,{children:[n.jsx(u,{children:t?"larger than 1280px":"smaller than 1280px"}),n.jsx(u,{children:a?"color mode is dark":"color mode is light"})]})};var E,L,M;i.parameters={...i.parameters,docs:{...(E=i.parameters)==null?void 0:E.docs,source:{originalSource:`() => {
  const [flg] = useMediaQuery("(min-width: 1280px)");
  return <Text>{flg ? "larger than 1280px" : "smaller than 1280px"}</Text>;
}`,...(M=(L=i.parameters)==null?void 0:L.docs)==null?void 0:M.source}}};var T,k,j;c.parameters={...c.parameters,docs:{...(T=c.parameters)==null?void 0:T.docs,source:{originalSource:`() => {
  const [isLarge, isDark] = useMediaQuery(["(min-width: 1280px)", "(prefers-color-scheme: dark)"]);
  return <>
      <Text>{isLarge ? "larger than 1280px" : "smaller than 1280px"}</Text>
      <Text>{isDark ? "color mode is dark" : "color mode is light"}</Text>
    </>;
}`,...(j=(k=c.parameters)==null?void 0:k.docs)==null?void 0:j.source}}};const W=["basic","useMulti"];export{W as __namedExportsOrder,i as basic,R as default,c as useMulti};
