import{l as U,I as D,d as H,c as L,r as s,A as R,i as W,E as N,aP as $,a as T,z as J,h as V,m as K,ay as Q,b as X,f as Y,j as f,a0 as Z,s as ee}from"./iframe-CDTQ5ROD.js";import{c as oe}from"./createLucideIcon-D7lzYFmP.js";import{i as y,I as re}from"./icon-button-DjGAPh7m.js";import{u as M}from"./index-enh5qnq3.js";import{u as te}from"./use-field-props-DjiGD3ru.js";import{u as se}from"./use-input-border-B-MKti-N.js";/**
 * @license lucide-react v0.536.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const le=[["line",{x1:"19",x2:"10",y1:"4",y2:"4",key:"15jd3p"}],["line",{x1:"14",x2:"5",y1:"20",y2:"20",key:"bu0au3"}],["line",{x1:"15",x2:"9",y1:"4",y2:"20",key:"uljnxc"}]],ae=oe("italic",le),be=U(D)({as:ae}),ne=H({base:{group:{},root:{"--error-border-color":"colors.border.error",gap:"2"}},props:{fullRounded:{true:{root:{rounded:"full"}}}},variants:{ghost:{root:{_checked:{layerStyle:"solid"},_notChecked:{layerStyle:"ghost",_hover:{layerStyle:"ghost.hover"}},_invalid:{borderColor:"{error-border-color}",borderWidth:"1px"}}},outline:{root:{_checked:{layerStyle:"solid",borderColor:"colorScheme.solid",borderWidth:"1px",_invalid:{borderColor:"{error-border-color}"}},_notChecked:{layerStyle:"outline",_hover:{layerStyle:"outline.hover"},_invalid:{borderColor:"{error-border-color}"}}}},solid:{root:{_checked:{layerStyle:"subtle"},_notChecked:{layerStyle:"solid",_hover:{layerStyle:"solid.hover"}},_invalid:{borderColor:"{error-border-color}",borderWidth:"1px"}}},subtle:{root:{_checked:{layerStyle:"solid"},_notChecked:{layerStyle:"subtle",_hover:{layerStyle:"subtle.hover"}},_invalid:{borderColor:"{error-border-color}",borderWidth:"1px"}}},surface:{root:{_checked:{layerStyle:"solid",_invalid:{borderColor:"{error-border-color}",borderWidth:"1px"}},_notChecked:{layerStyle:"surface",_hover:{layerStyle:"surface.hover"},_invalid:{borderColor:"{error-border-color}"}}}}},sizes:{xs:{root:{...y.sizes?.xs,gap:"1"}},sm:{root:{...y.sizes?.sm,gap:"2"}},md:{root:{...y.sizes?.md,gap:"2"}},lg:{root:{...y.sizes?.lg,gap:"2.5"}},xl:{root:{...y.sizes?.xl,gap:"3"}},"2xl":{root:{...y.sizes?.["2xl"],gap:"3"}}},defaultProps:{size:"md",variant:"ghost"}}),[fe,ce]=L({name:"ToggleGroupContext",strict:!1}),xe=({defaultValue:C,disabled:i,readOnly:g,value:l,onChange:a,...n})=>{const x=s.useRef(new Map),[k,h]=M({defaultValue:C,value:l,onChange:a}),c=s.useCallback(o=>{x.current.forEach((r,u)=>{o?.includes(u)?r(!0):r(!1)})},[]),m=s.useCallback(o=>{R(o)||h(r=>{if(W(r))if(r.includes(o)){const d=r.filter(v=>v!==o);return c(d),d}else{const d=[...r,o];return c(d),d}else if(o===r){c();return}else return c([o]),o})},[h,c]);N(()=>{c(R(l)?void 0:$(l)),h(l)},[l]);const _=s.useCallback(o=>({"data-disabled":T(i),"data-readonly":T(g),role:"group",...n,...o}),[i,g,n]);return{disabled:i,readOnly:g,value:k,getGroupProps:_,onChange:m,onChangeMapRef:x}},de=(C={})=>{const{t:i}=J("toggle"),{disabled:g,readOnly:l,value:a,onChange:n,onChangeMapRef:x}=ce()??{},{props:{id:k,ref:h,form:c,name:m,active:_,checked:o,defaultChecked:r=!1,disabled:u,readOnly:d,required:v,value:e,onChange:w,...z},ariaProps:A,dataProps:S,eventProps:G}=te({disabled:g,readOnly:l,...C}),q=s.useRef(null),[P,p]=M({defaultValue:r,value:o,onChange:w}),b=!(d||u),j=!R(a),I=s.useMemo(()=>j?W(a)?a.includes(e??""):e===a:P,[j,a,P,e]);j&&R(e)&&console.warn("Toggle: value is required. Please set the value."),e&&x?.current.set(e,p);const B=s.useCallback(()=>{b&&(p(t=>!t),n?.(e))},[n,p,e,b]),E=s.useCallback(t=>{p(t.target.checked),n?.(e)},[n,p,e]),F=s.useCallback((t={})=>({...Q,...A,...S,...G,id:k,form:c,type:"checkbox",name:m,checked:P,disabled:u,readOnly:d,required:v,value:e,...t,ref:K(q,h,t.ref),onChange:V(t.onChange,E)}),[A,P,S,u,G,c,k,m,E,d,h,v,e]),O=s.useCallback((t={})=>({...S,type:"button","aria-disabled":X(!b),"aria-label":e?.toString()??i("Toggle button"),"aria-pressed":I,"data-active":T(_),"data-checked":T(I),disabled:u,tabIndex:b?void 0:-1,...z,...t,onClick:V(z.onClick,t.onClick,B)}),[S,e,I,_,u,z,B,b,i]);return{checked:I,setChecked:p,getButtonProps:O,getInputProps:F}},{component:ke,PropsContext:me,withProvider:ie,useRootComponentProps:_e}=Y("toggle",ne),ve=ie(({errorBorderColor:C,icon:i,...g})=>{const{getButtonProps:l,getInputProps:a}=de(g),n=se({errorBorderColor:C});return f.jsxs(f.Fragment,{children:[f.jsx(Z,{children:f.jsx(ee.input,{...a()})}),f.jsx(re,{icon:i,...n,...l()})]})},"root")();export{be as I,me as T,xe as a,fe as b,ke as c,ve as d,_e as u};
