{
  "Slider": {
    "colorScheme": {
      "defaultValue": "primary",
      "type": "\"whiteAlpha\" | \"blackAlpha\" | \"gray\" | \"neutral\" | \"red\" | \"danger\" | \"rose\" | \"pink\" | \"flashy\" | \"orange\" | \"warning\" | \"amber\" | \"yellow\" | \"lime\" | \"green\" | \"success\" | \"emerald\" | \"teal\" | \"cyan\" | \"sky\" | \"blue\" | \"primary\" | \"info\" | \"link\" | \"indigo\" | \"violet\" | \"secondary\" | \"purple\" | \"fuchsia\"",
      "required": false,
      "description": "The visual color appearance of the component."
    },
    "defaultValue": {
      "type": "number",
      "required": false,
      "description": "The initial value of the slider."
    },
    "filledTrackColor": {
      "type": "UIValue<\"border\" | \"link\" | Color | \"current\" | \"focus\" | \"whiteAlpha.50\" | \"whiteAlpha.100\" | \"whiteAlpha.200\" | \"whiteAlpha.300\" | \"whiteAlpha.400\" | \"whiteAlpha.500\" | ... 319 more ... | \"link.950\">",
      "required": false,
      "description": "The CSS `color` property. Used in `color` of filled track element."
    },
    "filledTrackProps": {
      "type": "SliderFilledTrackProps",
      "required": false,
      "description": "Props for slider filled track element."
    },
    "focusThumbOnChange": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `false`, the slider handle will not capture focus when value changes."
    },
    "id": {
      "type": "string",
      "required": false,
      "description": "The base `id` to use for the slider."
    },
    "inputProps": {
      "type": "HTMLUIProps<\"input\">",
      "required": false,
      "description": "Props for slider input element."
    },
    "isDisabled": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be disabled."
    },
    "isInvalid": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be invalid."
    },
    "isReadOnly": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be readonly."
    },
    "isRequired": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be required."
    },
    "isReversed": {
      "type": "boolean",
      "required": false,
      "description": "If `true`, the value will be incremented or decremented in reverse."
    },
    "max": {
      "type": "number",
      "defaultValue": "100",
      "required": false,
      "description": "The maximum allowed value of the slider. Cannot be less than min."
    },
    "min": {
      "type": "number",
      "defaultValue": "0",
      "required": false,
      "description": "The minimum allowed value of the slider. Cannot be greater than max."
    },
    "name": {
      "type": "string",
      "required": false,
      "description": "The name attribute of the hidden `input` field.\nThis is particularly useful in forms."
    },
    "onChange": {
      "type": "(value: number) => void",
      "required": false,
      "description": "Function called whenever the slider value changes."
    },
    "onChangeEnd": {
      "type": "(value: number) => void",
      "required": false,
      "description": "Function called when the user is done selecting a new value."
    },
    "onChangeStart": {
      "type": "(value: number) => void",
      "required": false,
      "description": "Function called when the user starts selecting a new value."
    },
    "orientation": {
      "type": "\"horizontal\" | \"vertical\"",
      "defaultValue": "'horizontal'",
      "required": false,
      "description": "The orientation of the slider."
    },
    "size": {
      "defaultValue": "md",
      "type": "\"sm\" | \"md\" | \"lg\"",
      "required": false,
      "description": "The size of the Slider."
    },
    "step": {
      "type": "number",
      "defaultValue": "1",
      "required": false,
      "description": "The step in which increments or decrements have to be made."
    },
    "thumbColor": {
      "type": "UIValue<\"border\" | \"link\" | \"current\" | \"focus\" | \"whiteAlpha.50\" | \"whiteAlpha.100\" | \"whiteAlpha.200\" | \"whiteAlpha.300\" | \"whiteAlpha.400\" | \"whiteAlpha.500\" | \"whiteAlpha.600\" | ... 319 more ... | Background<...>>",
      "required": false,
      "description": "The CSS `background` property. Used in `background` of thumb element."
    },
    "thumbProps": {
      "type": "SliderThumbProps",
      "required": false,
      "description": "Props for slider thumb element."
    },
    "thumbSize": {
      "type": "UIValue<number | (string & {}) | \"px\" | \"min\" | \"max\" | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"-moz-max-content\" | \"-moz-min-content\" | \"-webkit-fit-content\" | ... 73 more ... | \"9xl\">",
      "required": false,
      "description": "The CSS `box-size` property.\nUsed for calculating the width, height, and percentage of the container element.\n\n\nThe CSS `box-size` property. Used in `box-size` of thumb element."
    },
    "trackColor": {
      "type": "UIValue<\"border\" | \"link\" | Color | \"current\" | \"focus\" | \"whiteAlpha.50\" | \"whiteAlpha.100\" | \"whiteAlpha.200\" | \"whiteAlpha.300\" | \"whiteAlpha.400\" | \"whiteAlpha.500\" | ... 319 more ... | \"link.950\">",
      "required": false,
      "description": "The CSS `color` property. Used in `color` of track element."
    },
    "trackProps": {
      "type": "SliderTrackProps",
      "required": false,
      "description": "Props for slider track element."
    },
    "trackSize": {
      "type": "UIValue<number | (string & {}) | \"px\" | \"min\" | \"max\" | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"-moz-max-content\" | \"-moz-min-content\" | \"-webkit-fit-content\" | ... 69 more ... | \"9xl\">",
      "required": false,
      "description": "The CSS `height` property. Used in `height` of track element."
    },
    "value": {
      "type": "number",
      "required": false,
      "description": "The value of the slider."
    },
    "variant": {
      "type": "string",
      "required": false,
      "description": "The variant of the Slider."
    }
  },
  "SliderTrack": {
    "filledTrackProps": {
      "type": "SliderFilledTrackProps",
      "required": false,
      "description": "Props for slider filled track element."
    }
  },
  "SliderFilledTrack": {},
  "SliderThumb": {},
  "SliderMark": { "value": { "type": "number", "required": true } },
  "RangeSlider": {
    "betweenThumbs": {
      "type": "number",
      "defaultValue": "0",
      "required": false,
      "description": "The minimum distance between slider thumbs.\nUseful for preventing the thumbs from being too close together."
    },
    "colorScheme": {
      "defaultValue": "primary",
      "type": "\"whiteAlpha\" | \"blackAlpha\" | \"gray\" | \"neutral\" | \"red\" | \"danger\" | \"rose\" | \"pink\" | \"flashy\" | \"orange\" | \"warning\" | \"amber\" | \"yellow\" | \"lime\" | \"green\" | \"success\" | \"emerald\" | \"teal\" | \"cyan\" | \"sky\" | \"blue\" | \"primary\" | \"info\" | \"link\" | \"indigo\" | \"violet\" | \"secondary\" | \"purple\" | \"fuchsia\"",
      "required": false,
      "description": "The visual color appearance of the component."
    },
    "defaultValue": {
      "type": "[number, number]",
      "required": false,
      "description": "The initial value of the slider."
    },
    "filledTrackColor": {
      "type": "UIValue<\"border\" | \"link\" | Color | \"current\" | \"focus\" | \"whiteAlpha.50\" | \"whiteAlpha.100\" | \"whiteAlpha.200\" | \"whiteAlpha.300\" | \"whiteAlpha.400\" | \"whiteAlpha.500\" | ... 319 more ... | \"link.950\">",
      "required": false,
      "description": "The CSS `color` property. Used in `color` of filled track element."
    },
    "filledTrackProps": {
      "type": "RangeSliderFilledTrackProps",
      "required": false,
      "description": "Props for range slider filled track element."
    },
    "focusThumbOnChange": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `false`, the slider handle will not capture focus when value changes."
    },
    "id": {
      "type": "string",
      "required": false,
      "description": "The base `id` to use for the slider."
    },
    "inputProps": {
      "type": "HTMLUIProps<\"input\">",
      "required": false,
      "description": "Props for range slider input element."
    },
    "isDisabled": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be disabled."
    },
    "isInvalid": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be invalid."
    },
    "isReadOnly": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be readonly."
    },
    "isRequired": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be required."
    },
    "isReversed": {
      "type": "boolean",
      "required": false,
      "description": "If `true`, the value will be incremented or decremented in reverse."
    },
    "max": {
      "type": "number",
      "defaultValue": "100",
      "required": false,
      "description": "The maximum allowed value of the slider. Cannot be less than min."
    },
    "min": {
      "type": "number",
      "defaultValue": "0",
      "required": false,
      "description": "The minimum allowed value of the slider. Cannot be greater than max."
    },
    "name": {
      "type": "string | [string, string]",
      "required": false,
      "description": "The name attribute of the hidden `input` field.\nThis is particularly useful in forms."
    },
    "onChange": {
      "type": "(value: [number, number]) => void",
      "required": false,
      "description": "Function called whenever the slider value changes."
    },
    "onChangeEnd": {
      "type": "(value: [number, number]) => void",
      "required": false,
      "description": "Function called when the user is done selecting a new value."
    },
    "onChangeStart": {
      "type": "(value: [number, number]) => void",
      "required": false,
      "description": "Function called when the user starts selecting a new value."
    },
    "orientation": {
      "type": "\"horizontal\" | \"vertical\"",
      "defaultValue": "'horizontal'",
      "required": false,
      "description": "The orientation of the slider."
    },
    "size": {
      "defaultValue": "md",
      "type": "\"sm\" | \"md\" | \"lg\"",
      "required": false,
      "description": "The size of the RangeSlider."
    },
    "step": {
      "type": "number",
      "defaultValue": "1",
      "required": false,
      "description": "The step in which increments or decrements have to be made."
    },
    "thumbColor": {
      "type": "UIValue<\"border\" | \"link\" | \"current\" | \"focus\" | \"whiteAlpha.50\" | \"whiteAlpha.100\" | \"whiteAlpha.200\" | \"whiteAlpha.300\" | \"whiteAlpha.400\" | \"whiteAlpha.500\" | \"whiteAlpha.600\" | ... 319 more ... | Background<...>>",
      "required": false,
      "description": "The CSS `background` property. Used in `background` of thumb element."
    },
    "thumbProps": {
      "type": "RangeSliderThumbProps",
      "required": false,
      "description": "Props for range slider thumb element."
    },
    "thumbSize": {
      "type": "UIValue<number | (string & {}) | \"px\" | \"min\" | \"max\" | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"-moz-max-content\" | \"-moz-min-content\" | \"-webkit-fit-content\" | ... 73 more ... | \"9xl\">",
      "required": false,
      "description": "The CSS `box-size` property.\nUsed for calculating the width, height, and percentage of the container element.\n\n\nThe CSS `box-size` property. Used in `box-size` of thumb element."
    },
    "trackColor": {
      "type": "UIValue<\"border\" | \"link\" | Color | \"current\" | \"focus\" | \"whiteAlpha.50\" | \"whiteAlpha.100\" | \"whiteAlpha.200\" | \"whiteAlpha.300\" | \"whiteAlpha.400\" | \"whiteAlpha.500\" | ... 319 more ... | \"link.950\">",
      "required": false,
      "description": "The CSS `color` property. Used in `color` of track element."
    },
    "trackProps": {
      "type": "RangeSliderTrackProps",
      "required": false,
      "description": "Props for range slider track element."
    },
    "trackSize": {
      "type": "UIValue<number | (string & {}) | \"px\" | \"min\" | \"max\" | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"-moz-max-content\" | \"-moz-min-content\" | \"-webkit-fit-content\" | ... 69 more ... | \"9xl\">",
      "required": false,
      "description": "The CSS `height` property. Used in `height` of track element."
    },
    "value": {
      "type": "[number, number]",
      "required": false,
      "description": "The value of the slider."
    },
    "variant": {
      "type": "string",
      "required": false,
      "description": "The variant of the RangeSlider."
    }
  },
  "RangeSliderTrack": {
    "filledTrackProps": {
      "type": "RangeSliderFilledTrackProps",
      "required": false,
      "description": "Props for range slider filled track element."
    }
  },
  "RangeSliderFilledTrack": {},
  "RangeSliderThumb": {},
  "RangeSliderMark": { "value": { "type": "number", "required": true } }
}
