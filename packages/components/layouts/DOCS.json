{
  "Box": {},
  "Flex": {
    "align": {
      "type": "(string & {}) | \"center\" | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"stretch\" | \"end\" | \"flex-end\" | \"flex-start\" | \"start\" | \"normal\" | \"self-end\" | ... 6 more ... | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `align-items` property."
    },
    "basis": {
      "type": "number | (string & {}) | \"content\" | \"px\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\" | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"auto\" | \"max-content\" | ... 73 more ... | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `flex-basis` property."
    },
    "direction": {
      "type": "\"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"column\" | \"column-reverse\" | \"row\" | \"row-reverse\" | Partial<Record<Breakpoint, FlexDirection | [...]>> | [...] | Partial<...> | [...] | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `flex-direction` property."
    },
    "grow": {
      "type": "(string & {}) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | (number & {}) | Partial<Record<Breakpoint, FlexGrow | [FlexGrow, FlexGrow]>> | [...] | Partial<...> | [...] | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `flex-grow` property."
    },
    "justify": {
      "type": "(string & {}) | \"left\" | \"right\" | \"center\" | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"space-around\" | \"space-between\" | \"space-evenly\" | ... 10 more ... | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `justify-content` property."
    },
    "shrink": {
      "type": "(string & {}) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | (number & {}) | Partial<Record<Breakpoint, FlexShrink | [FlexShrink, FlexShrink]>> | [...] | Partial<...> | [...] | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `flex-shrink` property."
    },
    "wrap": {
      "type": "\"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"nowrap\" | \"wrap\" | \"wrap-reverse\" | Partial<Record<Breakpoint, FlexWrap | [FlexWrap, FlexWrap]>> | [...] | Partial<...> | [...] | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `flex-wrap` property."
    }
  },
  "Center": {},
  "Grid": {
    "area": {
      "type": "(string & {}) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"auto\" | (number & {}) | Partial<Record<Breakpoint, GridArea | [...]>> | [...] | Partial<...> | [...] | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `grid-area` property."
    },
    "autoColumns": {
      "type": "number | (string & {}) | \"px\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\" | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"auto\" | \"max-content\" | \"min-content\" | ... 67 more ... | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `grid-auto-columns` property."
    },
    "autoFlow": {
      "type": "(string & {}) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"column\" | \"row\" | \"dense\" | Partial<Record<Breakpoint, GridAutoFlow | [...]>> | [...] | Partial<...> | [...] | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `grid-auto-flow` property."
    },
    "autoRows": {
      "type": "number | (string & {}) | \"px\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\" | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"auto\" | \"max-content\" | \"min-content\" | ... 67 more ... | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `grid-auto-rows` property."
    },
    "column": {
      "type": "(string & {}) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"auto\" | (number & {}) | Partial<Record<Breakpoint, GridColumn | [...]>> | [...] | Partial<...> | [...] | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `grid-column` property."
    },
    "row": {
      "type": "(string & {}) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"auto\" | (number & {}) | Partial<Record<Breakpoint, GridRow | [GridRow, GridRow]>> | [...] | Partial<...> | [...] | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `grid-row` property."
    },
    "templateAreas": {
      "type": "(string & {}) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"none\" | Partial<Record<Breakpoint, GridTemplateAreas | [...]>> | [...] | Partial<...> | [...] | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `grid-template-areas` property."
    },
    "templateColumns": {
      "type": "number | (string & {}) | \"px\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\" | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"auto\" | \"max-content\" | \"min-content\" | ... 69 more ... | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `grid-template-columns` property."
    },
    "templateRows": {
      "type": "number | (string & {}) | \"px\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\" | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"auto\" | \"max-content\" | \"min-content\" | ... 69 more ... | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `grid-template-rows` property."
    }
  },
  "SimpleGrid": {
    "area": {
      "type": "(string & {}) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"auto\" | (number & {}) | Partial<Record<Breakpoint, GridArea | [...]>> | [...] | Partial<...> | [...] | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `grid-area` property."
    },
    "autoColumns": {
      "type": "number | (string & {}) | \"px\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\" | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"auto\" | \"max-content\" | \"min-content\" | ... 67 more ... | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `grid-auto-columns` property."
    },
    "autoFlow": {
      "type": "(string & {}) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"column\" | \"row\" | \"dense\" | Partial<Record<Breakpoint, GridAutoFlow | [...]>> | [...] | Partial<...> | [...] | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `grid-auto-flow` property."
    },
    "autoRows": {
      "type": "number | (string & {}) | \"px\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\" | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"auto\" | \"max-content\" | \"min-content\" | ... 67 more ... | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `grid-auto-rows` property."
    },
    "column": {
      "type": "(string & {}) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"auto\" | (number & {}) | Partial<Record<Breakpoint, GridColumn | [...]>> | [...] | Partial<...> | [...] | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `grid-column` property."
    },
    "minChildWidth": {
      "type": "UIValue<number | (string & {}) | \"px\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\" | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"auto\" | \"max-content\" | \"min-content\" | ... 72 more ... | \"min-intrinsic\">",
      "required": false,
      "description": "The width at which child elements will break into columns.\nPass a number for pixel values or a string for any other valid CSS length."
    },
    "row": {
      "type": "(string & {}) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"auto\" | (number & {}) | Partial<Record<Breakpoint, GridRow | [GridRow, GridRow]>> | [...] | Partial<...> | [...] | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `grid-row` property."
    },
    "templateAreas": {
      "type": "(string & {}) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"none\" | Partial<Record<Breakpoint, GridTemplateAreas | [...]>> | [...] | Partial<...> | [...] | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `grid-template-areas` property."
    },
    "templateColumns": {
      "type": "number | (string & {}) | \"px\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\" | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"auto\" | \"max-content\" | \"min-content\" | ... 69 more ... | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `grid-template-columns` property."
    },
    "templateRows": {
      "type": "number | (string & {}) | \"px\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\" | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"auto\" | \"max-content\" | \"min-content\" | ... 69 more ... | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `grid-template-rows` property."
    }
  },
  "GridItem": {
    "area": {
      "type": "(string & {}) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"auto\" | (number & {}) | Partial<Record<Breakpoint, GridArea | [...]>> | [...] | Partial<...> | [...] | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `grid-area` property."
    },
    "colEnd": {
      "type": "(string & {}) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"auto\" | (number & {}) | Partial<Record<Breakpoint, GridColumnEnd | [...]>> | [...] | Partial<...> | [...] | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `grid-column-end` property."
    },
    "colSpan": {
      "type": "UIValue<number>",
      "required": false,
      "description": "The number of columns the grid item should `span`."
    },
    "colStart": {
      "type": "(string & {}) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"auto\" | (number & {}) | Partial<Record<Breakpoint, GridColumnStart | [...]>> | [...] | Partial<...> | [...] | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `grid-column-start` property."
    },
    "rowEnd": {
      "type": "(string & {}) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"auto\" | (number & {}) | Partial<Record<Breakpoint, GridRowEnd | [...]>> | [...] | Partial<...> | [...] | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `grid-row-end` property."
    },
    "rowSpan": {
      "type": "UIValue<number>",
      "required": false,
      "description": "The number of rows the grid item should `span`."
    },
    "rowStart": {
      "type": "(string & {}) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"auto\" | (number & {}) | Partial<Record<Breakpoint, GridRowStart | [...]>> | [...] | Partial<...> | [...] | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `grid-row-start` property."
    }
  },
  "Container": {
    "centerContent": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, container will center its children regardless of their width."
    }
  },
  "Stack": {
    "align": {
      "type": "(string & {}) | \"center\" | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"stretch\" | \"end\" | \"flex-end\" | \"flex-start\" | \"start\" | \"normal\" | \"self-end\" | ... 6 more ... | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `align-items` property."
    },
    "direction": {
      "type": "\"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"column\" | \"column-reverse\" | \"row\" | \"row-reverse\" | Partial<Record<Breakpoint, FlexDirection | [...]>> | [...] | Partial<...> | [...] | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `flex-direction` property."
    },
    "divider": {
      "type": "ReactElement<any, string | JSXElementConstructor<any>>",
      "required": false,
      "description": "If `true`, each stack item will show a divider."
    },
    "justify": {
      "type": "(string & {}) | \"left\" | \"right\" | \"center\" | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"space-around\" | \"space-between\" | \"space-evenly\" | ... 10 more ... | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `justify-content` property."
    },
    "wrap": {
      "type": "\"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"nowrap\" | \"wrap\" | \"wrap-reverse\" | Partial<Record<Breakpoint, FlexWrap | [FlexWrap, FlexWrap]>> | [...] | Partial<...> | [...] | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `flex-wrap` property."
    }
  },
  "ZStack": {
    "direction": {
      "type": "type ONLY_FOR_FORMAT =\n  | \"bottom\"\n  | \"left\"\n  | \"right\"\n  | \"top\"\n  | \"top-left\"\n  | \"top-right\"\n  | \"bottom-left\"\n  | \"bottom-right\"",
      "defaultValue": "bottom",
      "required": false,
      "description": "Stack in the specified direction."
    },
    "fit": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, calculate the `width` and `height` of the element and assign container."
    },
    "reverse": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, reverse direction."
    },
    "startIndex": {
      "type": "number",
      "defaultValue": "0",
      "required": false,
      "description": "If set the stack will start from the given index."
    }
  },
  "Spacer": {},
  "Divider": {
    "colorScheme": {
      "type": "\"whiteAlpha\" | \"blackAlpha\" | \"gray\" | \"neutral\" | \"red\" | \"danger\" | \"rose\" | \"pink\" | \"flashy\" | \"orange\" | \"warning\" | \"amber\" | \"yellow\" | \"lime\" | \"green\" | \"success\" | \"emerald\" | \"teal\" | \"cyan\" | \"sky\" | \"blue\" | \"primary\" | \"info\" | \"link\" | \"indigo\" | \"violet\" | \"secondary\" | \"purple\" | \"fuchsia\"",
      "required": false,
      "description": "The visual color appearance of the component."
    },
    "orientation": {
      "type": "\"horizontal\" | \"vertical\"",
      "defaultValue": "'horizontal'",
      "required": false,
      "description": "The orientation of the divider."
    },
    "size": {
      "type": "string",
      "required": false,
      "description": "The size of the Divider."
    },
    "variant": {
      "defaultValue": "solid",
      "type": "\"solid\" | \"dashed\" | \"dotted\"",
      "required": false,
      "description": "The variant of the Divider."
    }
  },
  "AspectRatio": {
    "ratio": {
      "type": "UIValue<number>",
      "defaultValue": "'4 / 3'",
      "required": false,
      "description": "The aspect ratio of the Box."
    }
  }
}
