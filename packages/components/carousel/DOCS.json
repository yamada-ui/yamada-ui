{
  "Carousel": {
    "align": {
      "type": "AlignmentOptionType | [AlignmentOptionType | { [x: string]: AlignmentOptionType | undefined; base?: AlignmentOptionType | undefined; ... 4 more ...; xl?: AlignmentOptionType | undefined; } | undefined, AlignmentOptionType | ... 1 more ... | undefined] | { ...; }",
      "defaultValue": "'center'",
      "description": "The alignment of the carousel.",
      "required": false
    },
    "autoplay": {
      "type": "UIValue<boolean>",
      "defaultValue": false,
      "description": "If `true`, the carousel will be autoplay.",
      "required": false
    },
    "colorScheme": {
      "type": "\"blackAlpha\" | \"whiteAlpha\" | \"amber\" | \"blue\" | \"info\" | \"link\" | \"primary\" | \"cyan\" | \"emerald\" | \"flashy\" | \"fuchsia\" | \"gray\" | \"green\" | \"success\" | \"indigo\" | \"lime\" | \"neutral\" | \"orange\" | \"warning\" | \"pink\" | \"purple\" | \"red\" | \"danger\" | \"rose\" | \"sky\" | \"teal\" | \"violet\" | \"secondary\" | \"yellow\"",
      "description": "The visual color appearance of the component.",
      "required": false
    },
    "containScroll": {
      "type": "ScrollContainOptionType | [ScrollContainOptionType | { [x: string]: ScrollContainOptionType | undefined; ... 5 more ...; xl?: ScrollContainOptionType | undefined; } | undefined, ScrollContainOptionType | ... 1 more ... | undefined] | { ...; }",
      "defaultValue": "''",
      "description": "Clear leading and trailing empty space that causes excessive scrolling.\nUse trimSnaps to only use snap points that trigger scrolling or keepSnaps to keep them.",
      "required": false
    },
    "controlNextProps": {
      "type": "CarouselControlProps",
      "description": "Props for next of the carousel control element.",
      "required": false
    },
    "controlPrevProps": {
      "type": "CarouselControlProps",
      "description": "Props for previous of the carousel control element.",
      "required": false
    },
    "controlProps": {
      "type": "CarouselControlProps",
      "description": "Props for carousel control element.",
      "required": false
    },
    "controlRef": {
      "type": "RefObject<EmblaCarouselType | undefined>",
      "description": "Ref of the resizable item callback.",
      "required": false
    },
    "defaultIndex": {
      "type": "number",
      "defaultValue": "0",
      "description": "The initial index of the carousel slide.",
      "required": false
    },
    "delay": {
      "type": "UIValue<number>",
      "defaultValue": "4000",
      "description": "The number for the autoplay interval of the carousel.",
      "required": false
    },
    "dragFree": {
      "type": "UIValue<boolean>",
      "defaultValue": false,
      "description": "If `true`, momentum scrolling will be enabled.",
      "required": false
    },
    "draggable": {
      "type": "UIValue<boolean>",
      "defaultValue": true,
      "description": "If `true`, carousel can be scrolled with mouse and touch interactions.",
      "required": false
    },
    "duration": {
      "type": "UIValue<number>",
      "defaultValue": "25",
      "description": "Set scroll duration when triggered by any of the API methods.\nHigher numbers enables slower scrolling.\nDrag interactions are not affected because duration is then determined by the drag force.",
      "required": false
    },
    "includeGapInSize": {
      "type": "UIValue<boolean>",
      "defaultValue": true,
      "description": "If `true`, gap will be treated as part of the carousel slide size.",
      "required": false
    },
    "index": {
      "type": "number",
      "description": "The index of the carousel slide.",
      "required": false
    },
    "indicatorsProps": {
      "type": "CarouselIndicatorsProps",
      "description": "Props for carousel indicators element.",
      "required": false
    },
    "innerProps": {
      "type": "HTMLUIProps",
      "description": "Props for carousel inner element.",
      "required": false
    },
    "inViewThreshold": {
      "type": "number | number[] | [number | number[] | { [x: string]: number | number[] | undefined; base?: number | number[] | undefined; \"2xl\"?: number | number[] | undefined; lg?: number | number[] | undefined; md?: number | ... 1 more ... | undefined; sm?: number | ... 1 more ... | undefined; xl?: number | ... 1 more ... | un...",
      "defaultValue": "0",
      "description": "Choose a fraction representing the percentage portion of a slide that needs to be visible in order to be considered in view.",
      "required": false
    },
    "loop": {
      "type": "UIValue<boolean>",
      "defaultValue": true,
      "description": "If `true`, infinite looping.\nAutomatically falls back to false if slide content isn't enough to loop.",
      "required": false
    },
    "onChange": {
      "type": "(index: number) => void",
      "description": "The callback invoked when carousel slide selected.",
      "required": false
    },
    "onScrollProgress": {
      "type": "(progress: number) => void",
      "description": "A callback that return the current scroll amount when the carousel is scrolled.",
      "required": false
    },
    "orientation": {
      "type": "UIValue<\"horizontal\" | \"vertical\">",
      "defaultValue": "'horizontal'",
      "description": "The orientation of the carousel.",
      "required": false
    },
    "size": {
      "type": "\"sm\" | \"md\" | \"lg\" | \"xl\"",
      "defaultValue": "\"md\"",
      "description": "The size of the Carousel.",
      "required": false
    },
    "skipSnaps": {
      "type": "UIValue<boolean>",
      "defaultValue": false,
      "description": "If `true`, allow the carousel to skip scroll snaps if it's dragged vigorously.\nNote that this option will be ignored if the dragFree option is set to true.",
      "required": false
    },
    "slideSize": {
      "type": "UIValue<number | \"px\" | (string & {}) | \"2xl\" | \"lg\" | \"md\" | \"sm\" | \"xl\" | ({} & string) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"-moz-fit-content\" | ... 72 more ... | \"xs\">",
      "description": "The CSS `width` property.",
      "required": false
    },
    "slidesToScroll": {
      "type": "UIValue<number>",
      "defaultValue": "1",
      "description": "The number of slides that should be scrolled with next or previous buttons.",
      "required": false
    },
    "stopMouseEnterAutoplay": {
      "type": "UIValue<boolean>",
      "defaultValue": true,
      "description": "If `true`, autoplay will pause when the mouse entries over.",
      "required": false
    },
    "variant": {
      "type": "string",
      "description": "The variant of the Carousel.",
      "required": false
    },
    "watchDrag": {
      "type": "DragHandlerOptionType",
      "defaultValue": true,
      "description": "Enables for scrolling the carousel with mouse and touch interactions.\nSet this to `false` to disable drag events or pass a custom callback to add your own drag logic.",
      "required": false
    },
    "watchResize": {
      "type": "ResizeHandlerOptionType",
      "defaultValue": true,
      "description": "Embla automatically watches the container and slides for size changes and runs `reInit` when any size has changed.\nSet this to `false` to disable this behaviour or pass a custom callback to add your own resize logic.",
      "required": false
    },
    "watchSlides": {
      "type": "SlidesHandlerOptionType",
      "defaultValue": true,
      "description": "Embla automatically watches the container for added and/or removed slides and runs `reInit` if needed.\nSet this to `false` to disable this behaviour or pass a custom callback to add your own slides changed logic.",
      "required": false
    },
    "withControls": {
      "type": "UIValue<boolean>",
      "defaultValue": true,
      "description": "If `true`, display the carousel control buttons.",
      "required": false
    },
    "withIndicators": {
      "type": "UIValue<boolean>",
      "defaultValue": true,
      "description": "If `true`, display the carousel indicator buttons.",
      "required": false
    }
  },
  "CarouselControl": {
    "disableRipple": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, disable ripple effects when pressing a element.",
      "required": false
    },
    "icon": {
      "type": "ReactElement<any, string | JSXElementConstructor<any>>",
      "description": "The icon to be used in the button.",
      "required": false
    },
    "isActive": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the button is represented as active.",
      "required": false
    },
    "isDisabled": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the button is disabled.",
      "required": false
    },
    "isLoading": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the loading state of the button is represented.",
      "required": false
    },
    "isRounded": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If true, the button is full rounded. Else, it'll be slightly round.",
      "required": false
    }
  },
  "CarouselIndicators": {
    "component": {
      "type": "FC<{ index: number; isSelected: boolean }>",
      "description": "The custom carousel indicator to use.",
      "required": false
    }
  },
  "CarouselSlide": {
    "index": { "type": "number", "required": false },
    "size": {
      "type": "number | \"px\" | (string & {}) | \"2xl\" | \"lg\" | \"md\" | \"sm\" | \"xl\" | ({} & string) | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"-moz-fit-content\" | ... 77 more ... | ((theme: StyledTheme) => UIValue<...>)",
      "description": "The CSS `width` property.",
      "required": false
    }
  }
}
