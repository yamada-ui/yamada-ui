{
  "Tooltip": {
    "animation": {
      "type": "\"bottom\" | \"left\" | \"right\" | \"top\" | \"scale\" | \"none\"",
      "defaultValue": "'scale'",
      "required": false,
      "description": "The animation of the tooltip."
    },
    "as": {
      "type": "\"symbol\" | \"object\" | \"clipPath\" | \"text\" | \"g\" | \"marker\" | \"mask\" | \"p\" | \"filter\" | \"style\" | \"animate\" | \"div\" | \"a\" | \"abbr\" | \"address\" | \"area\" | \"article\" | \"aside\" | \"audio\" | ... 149 more ... | \"textPath\"",
      "required": false,
      "description": "The HTML element to render."
    },
    "closeDelay": {
      "type": "number",
      "defaultValue": "0",
      "required": false,
      "description": "The delay before hiding the tooltip."
    },
    "closeOnClick": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the tooltip will hide on click."
    },
    "closeOnEsc": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, the tooltip will hide on pressing Esc key."
    },
    "closeOnMouseDown": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the tooltip will hide while the mouse is down."
    },
    "closeOnPointerDown": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the tooltip will hide while the pointer is down."
    },
    "closeOnScroll": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the tooltip will hide on scroll."
    },
    "defaultIsOpen": {
      "type": "boolean",
      "required": false,
      "description": "If `true`, the tooltip will be initially shown."
    },
    "duration": {
      "type": "number | MotionLifecycleProps<number>",
      "required": false,
      "description": "The animation duration."
    },
    "gutter": {
      "type": "UIValue<number>",
      "defaultValue": "8",
      "required": false,
      "description": "The distance or margin between the reference and popper.\nIt is used internally to create an `offset` modifier."
    },
    "isDisabled": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the tooltip will be disabled."
    },
    "isOpen": {
      "type": "boolean",
      "required": false,
      "description": "If `true`, the tooltip will be shown."
    },
    "label": {
      "type": "type ONLY_FOR_FORMAT =\n  | string\n  | number\n  | boolean\n  | ReactElement<any, string | JSXElementConstructor<any>>\n  | Iterable<ReactNode>\n  | ReactPortal",
      "required": false,
      "description": "The label of the tooltip."
    },
    "modifiers": {
      "type": "Partial<Modifier<string, any>>[]",
      "required": false,
      "description": "Array of popper.js modifiers.\nCheck the docs to see the list of possible modifiers you can pass.",
      "see": "https://popper.js.org/docs/v2/modifiers/"
    },
    "offset": {
      "type": "[number, number]",
      "required": false,
      "description": "The main and cross-axis offset to displace popper element from its reference element."
    },
    "onClose": {
      "type": "() => void",
      "required": false,
      "description": "Callback to run when the tooltip hides."
    },
    "onOpen": {
      "type": "() => void",
      "required": false,
      "description": "Callback to run when the tooltip shows."
    },
    "openDelay": {
      "type": "number",
      "defaultValue": "0",
      "required": false,
      "description": "The delay before showing the tooltip."
    },
    "placement": {
      "type": "UIValue<Placement>",
      "defaultValue": "'bottom'",
      "required": false,
      "description": "The placement of the popper relative to its reference."
    },
    "portalProps": {
      "type": "Pick<\n  PortalProps,\n  \"appendToParentPortal\" | \"containerRef\"\n>",
      "required": false,
      "description": "Props for portal component."
    },
    "withPortal": {
      "type": "boolean",
      "required": false,
      "description": "If `true`, the element will be transported to the end of document.body."
    }
  }
}
