{
  "$schema": "https://v2.yamada-ui.com/registry/v2/schema.json",
  "dependencies": {
    "components": [],
    "externals": [],
    "hooks": [],
    "providers": []
  },
  "dependents": { "components": ["indicator"], "hooks": [], "providers": [] },
  "section": "components",
  "sources": [
    {
      "name": "float.style.ts",
      "content": "import { defineComponentStyle } from \"@yamada-ui/react\"\n\nexport const floatStyle = defineComponentStyle({\n  base: {\n    alignItems: \"center\",\n    boxSize: \"fit-content\",\n    display: \"inline-flex\",\n    justifyContent: \"center\",\n    position: \"absolute\",\n  },\n\n  props: {\n    /**\n     * The placement of the float.\n     *\n     * @default \"start-end\"\n     */\n    placement: {\n      center: {},\n      \"center-center\": {},\n      \"center-end\": {},\n      \"center-start\": {},\n      end: {},\n      \"end-center\": {},\n      \"end-end\": {},\n      \"end-start\": {},\n      start: {},\n      \"start-center\": {},\n      \"start-end\": {},\n      \"start-start\": {},\n    },\n  },\n\n  compounds: [\n    {\n      css: {\n        insetBlockEnd: \"auto\",\n        insetBlockStart: \"{offset-block, 0px}\",\n        translateY: \"-50%\",\n      },\n      placement: /^start/,\n    },\n    {\n      css: {\n        insetBlockEnd: \"{offset-block, 0px}\",\n        insetBlockStart: \"auto\",\n        translateY: \"50%\",\n      },\n      placement: /^end/,\n    },\n    {\n      css: {\n        insetBlock: \"50%\",\n        translateY: \"-50%\",\n      },\n      placement: /^center/,\n    },\n    {\n      css: {\n        insetInlineEnd: \"auto\",\n        insetInlineStart: \"{offset-inline, 0px}\",\n        translateX: \"-50%\",\n      },\n      placement: /start$/,\n    },\n    {\n      css: {\n        insetInlineEnd: \"{offset-inline, 0px}\",\n        insetInlineStart: \"auto\",\n        translateX: \"50%\",\n      },\n      placement: /end$/,\n    },\n    {\n      css: {\n        insetInline: \"50%\",\n        translateX: \"-50%\",\n      },\n      placement: /center$/,\n    },\n  ],\n\n  defaultProps: {\n    placement: \"start-end\",\n  },\n})\n\nexport type FloatStyle = typeof floatStyle\n"
    },
    {
      "name": "float.tsx",
      "content": "\"use client\"\n\nimport type { CSSProps, HTMLStyledProps, ThemeProps } from \"@yamada-ui/react\"\nimport type { FloatStyle } from \"./float.style\"\nimport { createComponent, varAttr, isArray } from \"@yamada-ui/react\"\nimport { floatStyle } from \"./float.style\"\n\nexport interface FloatProps\n  extends Omit<HTMLStyledProps, \"offset\">,\n    ThemeProps<FloatStyle> {\n  /**\n   * Changes position offset.\n   */\n  offset?: CSSProps[\"inset\"]\n}\n\nconst {\n  PropsContext: FloatPropsContext,\n  usePropsContext: useFloatPropsContext,\n  withContext,\n} = createComponent<FloatProps, FloatStyle>(\"float\", floatStyle)\n\nexport { FloatPropsContext, useFloatPropsContext }\n\n/**\n * `Float` is a component used to anchor an element to the edge of a container.\n *\n * @see https://yamada-ui.com/components/float\n */\nexport const Float = withContext(\"div\")(undefined, ({ offset, ...rest }) => {\n  const [offsetBlock, offsetInline] = isArray(offset)\n    ? offset\n    : [offset, offset]\n\n  return {\n    \"--offset-block\": varAttr(offsetBlock, \"spaces\"),\n    \"--offset-inline\": varAttr(offsetInline, \"spaces\"),\n    ...rest,\n  }\n})\n"
    },
    {
      "name": "index.ts",
      "content": "export * from \"./float.style\"\nexport { Float, FloatPropsContext, useFloatPropsContext } from \"./float\"\nexport type { FloatProps } from \"./float\"\n"
    }
  ]
}
