{
  "Button": {
    "colorScheme": {
      "defaultValue": "gray",
      "type": "\"whiteAlpha\" | \"blackAlpha\" | \"gray\" | \"neutral\" | \"red\" | \"danger\" | \"rose\" | \"pink\" | \"flashy\" | \"orange\" | \"warning\" | \"amber\" | \"yellow\" | \"lime\" | \"green\" | \"success\" | \"emerald\" | \"teal\" | \"cyan\" | \"sky\" | \"blue\" | \"primary\" | \"info\" | \"link\" | \"indigo\" | \"violet\" | \"secondary\" | \"purple\" | \"fuchsia\"",
      "required": false,
      "description": "The visual color appearance of the component."
    },
    "disableRipple": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, disable ripple effects when pressing a element."
    },
    "endIcon": {
      "type": "ReactElement<any, string | JSXElementConstructor<any>>",
      "required": false,
      "description": "The icon to display at the end side of the button."
    },
    "isActive": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the button is represented as active."
    },
    "isDisabled": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the button is disabled."
    },
    "isLoading": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the loading state of the button is represented."
    },
    "isRounded": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If true, the button is full rounded. Else, it'll be slightly round."
    },
    "leftIcon": {
      "type": "ReactElement<any, string | JSXElementConstructor<any>>",
      "required": false,
      "deprecated": "Use `startIcon` instead.",
      "description": "The icon to display at the left side of the button.\nIf specified at the same time as `startIcon`, `startIcon` takes precedence."
    },
    "loadingIcon": {
      "type": "type ONLY_FOR_FORMAT =\n  | \"grid\"\n  | ReactElement<any, string | JSXElementConstructor<any>>\n  | \"oval\"\n  | \"audio\"\n  | \"dots\"\n  | \"puff\"\n  | \"rings\"\n  | \"circles\"",
      "required": false,
      "description": "The icon to display when the button is loading."
    },
    "loadingPlacement": {
      "type": "\"end\" | \"start\"",
      "defaultValue": "'start'",
      "required": false,
      "description": "The placement of the loading indicator. Accepts `start` or `end`."
    },
    "loadingText": {
      "type": "string",
      "required": false,
      "description": "The text to display when the button is loading."
    },
    "rightIcon": {
      "type": "ReactElement<any, string | JSXElementConstructor<any>>",
      "required": false,
      "deprecated": "Use `endIcon` instead.",
      "description": "The icon to display at the right side of the button.\nIf specified at the same time as `endIcon`, `endIcon` takes precedence."
    },
    "size": {
      "defaultValue": "md",
      "type": "\"xs\" | \"sm\" | \"md\" | \"lg\"",
      "required": false,
      "description": "The size of the Button."
    },
    "startIcon": {
      "type": "ReactElement<any, string | JSXElementConstructor<any>>",
      "required": false,
      "description": "The icon to display at the start side of the button."
    },
    "variant": {
      "defaultValue": "solid",
      "type": "\"solid\" | \"outline\" | \"link\" | \"ghost\" | \"unstyled\"",
      "required": false,
      "description": "The variant of the Button."
    }
  },
  "ButtonGroup": {
    "direction": {
      "type": "\"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"column\" | \"column-reverse\" | \"row\" | \"row-reverse\" | { [x: string & {}]: FlexDirection | [...] | undefined; ... 5 more ...; base?: FlexDirection | ... 1 more ... | undefined; } | [...] | { ...; } | [...] | ((theme: StyledTheme) => UIValu...",
      "required": false,
      "description": "The CSS `flex-direction` property."
    },
    "isAttached": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the borderRadius of button that are direct children will be altered to look flushed together."
    },
    "isDisabled": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, all wrapped button will be disabled."
    }
  },
  "IconButton": {
    "aria-label": {
      "type": "string",
      "required": true,
      "description": "The accessible label for the button."
    },
    "disableRipple": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, disable ripple effects when pressing a element."
    },
    "icon": {
      "type": "ReactElement<any, string | JSXElementConstructor<any>>",
      "required": false,
      "description": "The icon to be used in the button."
    },
    "isActive": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the button is represented as active."
    },
    "isDisabled": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the button is disabled."
    },
    "isLoading": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the loading state of the button is represented."
    },
    "isRounded": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If true, the button is full rounded. Else, it'll be slightly round."
    }
  }
}
