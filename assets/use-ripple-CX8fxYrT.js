import{t as C,u as d,j as l,R as f,v as g,h as x,r as m,ai as y}from"./iframe-6cyGxZR1.js";const k=C({base:{rounded:"full",zIndex:"kurillin"}}),R=(o,i,r)=>Math.min(Math.max(o,i),r),{withContext:j}=d("ripple",k),A=j(({style:o,color:i="currentColor",disabled:r,ripples:a,onAnimationComplete:c,onClear:p,...e})=>r?null:l.jsx(l.Fragment,{children:a.map(({key:n,size:t,x:s,y:u})=>{const h=R(.01*t,.2,t>100?.75:.5);return l.jsx(f,{mode:"popLayout",children:l.jsx(g.span,{style:{height:`${t}px`,left:s,pointerEvents:"none",position:"absolute",top:u,transformOrigin:"center",width:`${t}px`,...o},animate:{opacity:0,transform:"scale(2)"},bgColor:i,exit:{opacity:0},initial:{opacity:.35,transform:"scale(0)"},transition:{duration:h},...e,onAnimationComplete:x(c,()=>p(n))})},n)})}))(),E=({disabled:o,...i}={})=>{const[r,a]=m.useState([]),c=m.useCallback(e=>{if(o)return;const n=e.currentTarget,t=Math.max(n.clientWidth,n.clientHeight),s=n.getBoundingClientRect();a(u=>[...u,{key:y(),size:t,x:e.clientX-s.x-t/2,y:e.clientY-s.y-t/2}])},[o]),p=m.useCallback(e=>{a(n=>n.filter(t=>t.key!==e))},[]);return{ripples:r,onClear:p,onClick:x(c,i.onClick)}};export{A as R,E as u};
