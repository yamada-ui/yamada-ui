{
  "BreadcrumbEllipsis": {
    "size": {
      "type": "UIValue<number | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"large\" | \"medium\" | \"small\" | \"x-large\" | \"x-small\" | \"xx-large\" | \"xx-small\" | \"xxx-large\" | ... 17 more ... | \"xs\">",
      "deprecated": "Use `fontSize` instead.",
      "description": "The CSS `font-size` property.",
      "required": false
    }
  },
  "BreadcrumbItem": {
    "gap": {
      "type": "UIValue<number | \"px\" | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | (string & {}) | \"2xl\" | \"lg\" | \"md\" | \"sm\" | \"xl\" | ({} & string) | \"3xl\" | \"4xl\" | ... 100 more ... | \"normal\">",
      "defaultValue": "'2'",
      "description": "The left and right margin applied to the separator.",
      "required": false
    },
    "isCurrentPage": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, change to span element.",
      "required": false
    },
    "isLastChild": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, not show separator.",
      "required": false
    },
    "separator": {
      "type": "type ONLY_FOR_FORMAT =\n  | string\n  | ReactElement<any, string | JSXElementConstructor<any>>",
      "defaultValue": "'/'",
      "description": "The visual separator between each breadcrumb item.",
      "required": false
    }
  },
  "BreadcrumbLink": {
    "isCurrentPage": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, change to span element.",
      "required": false
    }
  },
  "Breadcrumb": {
    "ellipsis": {
      "type": "string | number | boolean | ReactElement<any, string | JSXElementConstructor<any>> | Iterable<ReactNode> | ReactPortal | ((props: { ...; }) => ReactNode)",
      "description": "The icon to be used in the ellipsis.",
      "required": false
    },
    "endBoundaries": {
      "type": "UIValue<number>",
      "description": "Number of elements visible on the end(right) edges.",
      "required": false
    },
    "gap": {
      "type": "UIValue<number | \"px\" | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | (string & {}) | \"2xl\" | \"lg\" | \"md\" | \"sm\" | \"xl\" | ({} & string) | \"3xl\" | \"4xl\" | ... 100 more ... | \"normal\">",
      "defaultValue": "'2'",
      "description": "The left and right margin applied to the separator.",
      "required": false
    },
    "items": {
      "type": "BreadcrumbGenerateItem[]",
      "description": "If provided, generate breadcrumb items based on items.",
      "required": false
    },
    "listProps": {
      "type": "HTMLUIProps<\"ol\">",
      "description": "Props for ol element.",
      "required": false
    },
    "separator": {
      "type": "type ONLY_FOR_FORMAT =\n  | string\n  | ReactElement<any, string | JSXElementConstructor<any>>",
      "defaultValue": "'/'",
      "description": "The visual separator between each breadcrumb item.",
      "required": false
    },
    "startBoundaries": {
      "type": "UIValue<number>",
      "description": "Number of elements visible on the start(left) edges.",
      "required": false
    }
  },
  "BreadcrumbSeparator": {
    "gap": {
      "type": "number | \"px\" | \"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | (string & {}) | \"2xl\" | \"lg\" | \"md\" | \"sm\" | \"xl\" | ({} & string) | \"3xl\" | \"4xl\" | \"xs\" | ... 104 more ... | ((theme: StyledTheme) => UIValue<...>)",
      "description": "The CSS `margin-inline-start`, and `margin-inline-end` property.",
      "required": false
    }
  }
}
