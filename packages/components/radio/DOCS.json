{
  "Radio": {
    "colorScheme": {
      "defaultValue": "primary",
      "type": "\"whiteAlpha\" | \"blackAlpha\" | \"gray\" | \"neutral\" | \"red\" | \"danger\" | \"rose\" | \"pink\" | \"flashy\" | \"orange\" | \"warning\" | \"amber\" | \"yellow\" | \"lime\" | \"green\" | \"success\" | \"emerald\" | \"teal\" | \"cyan\" | \"sky\" | \"blue\" | \"primary\" | \"info\" | \"link\" | \"indigo\" | \"violet\" | \"secondary\" | \"purple\" | \"fuchsia\"",
      "required": false,
      "description": "The visual color appearance of the component."
    },
    "defaultIsChecked": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the radio will be initially checked."
    },
    "iconProps": { "type": "HTMLUIProps<\"span\">", "required": false },
    "id": {
      "type": "string",
      "required": false,
      "description": "id assigned to input."
    },
    "inputProps": {
      "type": "InputHTMLAttributes<HTMLInputElement>",
      "required": false
    },
    "isChecked": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the radio will be checked."
    },
    "isDisabled": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be disabled."
    },
    "isInvalid": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be invalid."
    },
    "isReadOnly": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be readonly."
    },
    "isRequired": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be required."
    },
    "labelProps": { "type": "HTMLUIProps<\"span\">", "required": false },
    "name": {
      "type": "string",
      "required": false,
      "description": "The name of the input field in a radio."
    },
    "onChange": {
      "type": "ChangeEventHandler<HTMLInputElement>",
      "required": false,
      "description": "The callback invoked when the checked state changes."
    },
    "size": {
      "defaultValue": "md",
      "type": "\"sm\" | \"md\" | \"lg\"",
      "required": false,
      "description": "The size of the Radio."
    },
    "value": {
      "type": "Y",
      "required": false,
      "description": "The value to be used in the radio button."
    },
    "variant": {
      "type": "string",
      "required": false,
      "description": "The variant of the Radio."
    }
  },
  "UseRadio": {
    "defaultIsChecked": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the radio will be initially checked."
    },
    "id": {
      "type": "string",
      "required": false,
      "description": "id assigned to input."
    },
    "isChecked": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the radio will be checked."
    },
    "isDisabled": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be disabled."
    },
    "isInvalid": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be invalid."
    },
    "isReadOnly": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be readonly."
    },
    "isRequired": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be required."
    },
    "name": {
      "type": "string",
      "required": false,
      "description": "The name of the input field in a radio."
    },
    "onChange": {
      "type": "ChangeEventHandler<HTMLInputElement>",
      "required": false,
      "description": "The callback invoked when the checked state changes."
    },
    "value": {
      "type": "Y",
      "required": false,
      "description": "The value to be used in the radio button."
    }
  },
  "RadioGroup": {
    "align": {
      "type": "(string & {}) | \"center\" | \"inherit\" | \"-moz-initial\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"stretch\" | \"end\" | \"flex-end\" | \"flex-start\" | \"start\" | \"normal\" | \"self-end\" | ... 6 more ... | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `align-items` property."
    },
    "basis": {
      "type": "number | (string & {}) | \"content\" | \"px\" | \"inherit\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\" | \"-moz-initial\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"1\" | \"2\" | \"3\" | \"-moz-fit-content\" | ... 71 more ... | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `flex-basis` property."
    },
    "direction": {
      "type": "\"row\" | \"inherit\" | \"-moz-initial\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"column\" | \"column-reverse\" | \"row-reverse\" | Partial<Record<Breakpoint, FlexDirection | [...]>> | [...] | Partial<...> | [...] | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `flex-direction` property."
    },
    "grow": {
      "type": "(string & {}) | \"inherit\" | \"-moz-initial\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | (number & {}) | Partial<Record<Breakpoint, FlexGrow | [FlexGrow, FlexGrow]>> | [...] | Partial<...> | [...] | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `flex-grow` property."
    },
    "isDisabled": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be disabled."
    },
    "isInvalid": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be invalid."
    },
    "isNative": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, input elements will receive `checked` attribute instead of `isChecked`.\n\nThis assumes, you're using native radio inputs."
    },
    "isReadOnly": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be readonly."
    },
    "isRequired": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be required."
    },
    "items": {
      "type": "RadioItem<Y>[]",
      "defaultValue": "'[]'",
      "required": false,
      "description": "If provided, generate radios based on items."
    },
    "justify": {
      "type": "(string & {}) | \"left\" | \"right\" | \"center\" | \"inherit\" | \"-moz-initial\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"space-around\" | \"space-between\" | \"space-evenly\" | ... 10 more ... | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `justify-content` property."
    },
    "name": {
      "type": "string",
      "required": false,
      "description": "The HTML `name` attribute used for forms."
    },
    "onChange": {
      "type": "(value: Y) => void",
      "required": false,
      "description": "The callback fired when any children radio is checked or unchecked."
    },
    "shrink": {
      "type": "(string & {}) | \"inherit\" | \"-moz-initial\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | (number & {}) | Partial<Record<Breakpoint, FlexShrink | [FlexShrink, FlexShrink]>> | [...] | Partial<...> | [...] | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `flex-shrink` property."
    },
    "value": {
      "type": "Y",
      "required": false,
      "description": "The value of the radio group."
    },
    "wrap": {
      "type": "\"inherit\" | \"wrap\" | \"-moz-initial\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"nowrap\" | \"wrap-reverse\" | Partial<Record<Breakpoint, FlexWrap | [FlexWrap, FlexWrap]>> | [...] | Partial<...> | [...] | ((theme: StyledTheme) => UIValue<...>)",
      "required": false,
      "description": "The CSS `flex-wrap` property."
    }
  },
  "UseRadioGroup": {
    "defaultValue": {
      "type": "Y",
      "required": false,
      "description": "The initial value of the radio group."
    },
    "id": {
      "type": "string",
      "required": false,
      "description": "The top-level id string that will be applied to the radios.\nThe index of the radio will be appended to this top-level id."
    },
    "isNative": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, input elements will receive `checked` attribute instead of `isChecked`.\n\nThis assumes, you're using native radio inputs."
    },
    "name": {
      "type": "string",
      "required": false,
      "description": "The HTML `name` attribute used for forms."
    },
    "onChange": {
      "type": "(value: Y) => void",
      "required": false,
      "description": "The callback fired when any children radio is checked or unchecked."
    },
    "value": {
      "type": "Y",
      "required": false,
      "description": "The value of the radio group."
    }
  }
}
