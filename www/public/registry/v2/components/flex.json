{
  "$schema": "https://v2.yamada-ui.com/registry/v2/schema.json",
  "dependencies": {
    "components": [],
    "externals": [],
    "hooks": [],
    "providers": []
  },
  "dependents": {
    "components": ["group", "wrap"],
    "hooks": [],
    "providers": []
  },
  "section": "components",
  "sources": [
    {
      "name": "flex.style.ts",
      "content": "import { defineComponentStyle } from \"@yamada-ui/react\"\n\nexport const flexStyle = defineComponentStyle({\n  base: {\n    display: \"flex\",\n  },\n})\n\nexport type FlexStyle = typeof flexStyle\n"
    },
    {
      "name": "flex.tsx",
      "content": "\"use client\"\n\nimport type { CSSProps, HTMLStyledProps, ThemeProps } from \"@yamada-ui/react\"\nimport type { FlexStyle } from \"./flex.style\"\nimport { createComponent } from \"@yamada-ui/react\"\nimport { flexStyle } from \"./flex.style\"\n\nexport interface FlexProps\n  extends Omit<HTMLStyledProps, \"direction\">,\n    ThemeProps<FlexStyle> {\n  /**\n   * The CSS `align-items` property.\n   */\n  align?: CSSProps[\"alignItems\"]\n  /**\n   * The CSS `flex-basis` property.\n   */\n  basis?: CSSProps[\"flexBasis\"]\n  /**\n   * The CSS `flex-direction` property.\n   */\n  direction?: CSSProps[\"flexDirection\"]\n  /**\n   * The CSS `flex-grow` property.\n   */\n  grow?: CSSProps[\"flexGrow\"]\n  /**\n   * The CSS `justify-content` property.\n   */\n  justify?: CSSProps[\"justifyContent\"]\n  /**\n   * The CSS `flex-shrink` property.\n   */\n  shrink?: CSSProps[\"flexShrink\"]\n  /**\n   * The CSS `flex-wrap` property.\n   */\n  wrap?: CSSProps[\"flexWrap\"]\n}\n\nconst {\n  PropsContext: FlexPropsContext,\n  usePropsContext: useFlexPropsContext,\n  withContext,\n} = createComponent<FlexProps, FlexStyle>(\"flex\", flexStyle)\n\nexport { FlexPropsContext, useFlexPropsContext }\n\n/**\n * `Flex` is a component that sets `flex` to `Box`. Also, convenient style shorthand is available.\n *\n * @see https://yamada-ui.com/components/flex\n */\nexport const Flex = withContext(\"div\")(\n  undefined,\n  ({\n    align: alignItems,\n    basis: flexBasis,\n    direction: flexDirection,\n    grow: flexGrow,\n    justify: justifyContent,\n    shrink: flexShrink,\n    wrap: flexWrap,\n    ...rest\n  }) => ({\n    alignItems,\n    flexBasis,\n    flexDirection,\n    flexGrow,\n    flexShrink,\n    flexWrap,\n    justifyContent,\n    ...rest,\n  }),\n)\n"
    },
    {
      "name": "index.ts",
      "content": "export * from \"./flex.style\"\nexport type { FlexProps } from \"./flex\"\nexport { Flex, FlexPropsContext, useFlexPropsContext } from \"./flex\"\nexport type { SpacerProps } from \"./spacer\"\nexport { Spacer } from \"./spacer\"\n"
    },
    {
      "name": "spacer.tsx",
      "content": "\"use client\"\n\nimport type { HTMLStyledProps } from \"@yamada-ui/react\"\nimport { styled } from \"@yamada-ui/react\"\n\nexport interface SpacerProps extends HTMLStyledProps {}\n\nexport const Spacer = styled(\"div\", {\n  name: \"spacer\",\n  base: {\n    alignSelf: \"stretch\",\n    flex: 1,\n    justifySelf: \"stretch\",\n  },\n})\n"
    }
  ]
}
