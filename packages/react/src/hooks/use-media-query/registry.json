{
  "$schema": "https://v2.yamada-ui.com/registry/v2/schema.json",
  "dependencies": {
    "components": [],
    "externals": [],
    "hooks": [],
    "providers": []
  },
  "section": "hooks",
  "sources": [
    {
      "name": "index.ts",
      "content": "\"use client\"\n\nimport { useCallback, useSyncExternalStore } from \"react\"\nimport { useEnvironment } from \"@yamada-ui/react\"\n\n/**\n * `useMediaQuery` is a custom hook that detects whether it matches a media query.\n *\n * @see https://yamada-ui.com/hooks/use-media-query\n */\nexport const useMediaQuery = (query: string, fallback = false): boolean => {\n  const { getWindow } = useEnvironment()\n\n  const subscribe = useCallback(\n    (onStoreChange: () => void) => {\n      const mql = getWindow()?.matchMedia(query)\n\n      mql?.addEventListener(\"change\", onStoreChange)\n\n      return () => {\n        mql?.removeEventListener(\"change\", onStoreChange)\n      }\n    },\n    [getWindow, query],\n  )\n\n  const getSnapshot = useCallback(() => {\n    return getWindow()?.matchMedia(query).matches ?? fallback\n  }, [getWindow, query, fallback])\n\n  return useSyncExternalStore(subscribe, getSnapshot, getSnapshot)\n}\n"
    }
  ]
}
