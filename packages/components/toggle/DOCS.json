{
  "Toggle": {
    "colorScheme": {
      "type": "\"blackAlpha\" | \"whiteAlpha\" | \"amber\" | \"blue\" | \"info\" | \"link\" | \"primary\" | \"cyan\" | \"emerald\" | \"flashy\" | \"fuchsia\" | \"gray\" | \"green\" | \"success\" | \"indigo\" | \"lime\" | \"neutral\" | \"orange\" | \"warning\" | \"pink\" | \"purple\" | \"red\" | \"danger\" | \"rose\" | \"sky\" | \"teal\" | \"violet\" | \"secondary\" | \"yellow\"",
      "defaultValue": "\"gray\"",
      "description": "The visual color appearance of the component.",
      "required": false
    },
    "defaultIsSelected": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the toggle button will be initially selected.",
      "required": false
    },
    "disableRipple": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, disable ripple effects when pressing a element.",
      "required": false
    },
    "icon": {
      "type": "ReactElement<any, string | JSXElementConstructor<any>>",
      "description": "The icon to be used in the button.",
      "required": false
    },
    "isActive": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the toggle button is represented as active.",
      "required": false
    },
    "isDisabled": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the toggle button will be disabled.",
      "required": false
    },
    "isReadOnly": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the toggle button will be readonly.",
      "required": false
    },
    "isRounded": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If true, the toggle button is full rounded. Else, it'll be slightly round.",
      "required": false
    },
    "isSelected": {
      "type": "boolean",
      "description": "If `true`, the toggle button will be selected.",
      "required": false
    },
    "onChange": {
      "type": "(isSelected: boolean) => void",
      "description": "The callback invoked when selected state changes.",
      "required": false
    },
    "size": {
      "type": "\"xs\" | \"sm\" | \"md\" | \"lg\"",
      "defaultValue": "\"md\"",
      "description": "The size of the Toggle.",
      "required": false
    },
    "value": {
      "type": "Y",
      "description": "The value of the toggle button.",
      "required": false
    },
    "variant": {
      "type": "\"outline\" | \"solid\" | \"subtle\" | \"unstyled\"",
      "defaultValue": "\"subtle\"",
      "description": "The variant of the Toggle.",
      "required": false
    }
  },
  "ToggleGroup": {
    "defaultValue": {
      "type": "NonNullable<Y extends any[] ? Y : Y | undefined>",
      "description": "The initial value of the toggle button group.",
      "required": false
    },
    "direction": {
      "type": "\"-moz-initial\" | \"inherit\" | \"initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"column\" | \"column-reverse\" | \"row\" | \"row-reverse\" | [FlexDirection | { [x: string]: FlexDirection | undefined; ... 5 more ...; xl?: FlexDirection | undefined; }, FlexDirection | { ...; }] | { ...; } | [...] | { ...; } | ((theme: StyledT...",
      "description": "The CSS `flex-direction` property.",
      "required": false
    },
    "isDisabled": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, all wrapped toggle button will be disabled.",
      "required": false
    },
    "isReadOnly": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, all wrapped toggle button will be readonly.",
      "required": false
    },
    "onChange": {
      "type": "(value: Y extends any[] ? Y : Y | undefined) => void",
      "description": "The callback fired when any children toggle button is selected or unselected.",
      "required": false
    },
    "value": {
      "type": "NonNullable<Y extends any[] ? Y : Y | undefined>",
      "description": "The value of the toggle button group.",
      "required": false
    }
  }
}
