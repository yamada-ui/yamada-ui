import{d as X,g as Y,r as c,ab as q,j as e,q as I,h as K,b as O}from"./iframe-COpE3uSe.js";import{u as L}from"./index-CmrZ2qa-.js";import{C as s,A as a}from"./cherry-icon-Ccj0ltMC.js";import"./preload-helper-D9Z9MdNV.js";import"./createLucideIcon-B04U3mbS.js";const M=X({base:{from:{},item:{backfaceVisibility:"hidden",position:"absolute",top:0},root:{position:"relative",rounded:"l1",userSelect:"none",_readOnly:{layerStyle:"readOnly"},_disabled:{layerStyle:"disabled"}},to:{}}}),R={enter:({ident:o,orientation:t,visible:i})=>({[t==="horizontal"?"rotateY":"rotateX"]:o==="from"?i?180:0:i?0:180}),exit:({ident:o,orientation:t})=>({[t==="horizontal"?"rotateY":"rotateX"]:o==="from"?0:180})},{withContext:D,withProvider:G}=Y("flip",M),n=G(({defaultValue:o="from",delay:t=0,disabled:i,duration:b=.4,from:$,orientation:z="horizontal",readOnly:v,to:H,transition:F={},value:W,onChange:k,onClick:E,..._})=>{const[{height:j,width:y},T]=c.useState({}),g=c.useRef(null),C=c.useRef(null),[A,V]=L({defaultValue:o,value:W,onChange:k}),w=A==="to",B=c.useMemo(()=>({height:j?`${j}px`:"auto",width:y?`${y}px`:"auto"}),[y,j]),P=()=>{v||V(r=>r==="from"?"to":"from")};return q(()=>{const r=g.current,l=C.current;!r||!l||((r.offsetWidth!==l.offsetWidth||r.offsetHeight!==l.offsetHeight)&&console.warn(`Flip: "from" element (width: ${r.offsetWidth}px, height: ${r.offsetHeight}px) does not match "to" element (width: ${l.offsetWidth}px, height: ${l.offsetHeight}px). Please ensure both elements have the same dimensions.`),T({height:r.offsetHeight,width:r.offsetWidth}))},[g,C]),e.jsxs(I.button,{type:"button",style:B,"data-disabled":O(i),"data-orientation":z,"data-readonly":O(v),"data-value":A,disabled:i,onClick:K(E,P),..._,children:[e.jsx(J,{ref:g,custom:{orientation:z,visible:w},transition:{delay:t,duration:b,...F},children:$}),e.jsx(N,{ref:C,custom:{orientation:z,visible:w},transition:{delay:t,duration:b,...F},children:H})]})},"root")(),J=D(({custom:o,...t})=>e.jsx(I.span,{animate:"enter",custom:{ident:"from",...o},initial:"exit",variants:R,...t}),["item","from"])(),N=D(({custom:o,...t})=>e.jsx(I.span,{animate:"enter",custom:{ident:"to",...o},initial:"exit",variants:R,...t}),["item","to"])(),oe={component:n,title:"Components / Flip"},f=()=>e.jsx(n,{from:e.jsx(a,{fontSize:"2xl"}),to:e.jsx(s,{fontSize:"2xl"})}),m=()=>e.jsx(n,{from:e.jsx(a,{fontSize:"2xl"}),orientation:"vertical",to:e.jsx(s,{fontSize:"2xl"})}),p=()=>e.jsx(n,{duration:1.4,from:e.jsx(a,{fontSize:"2xl"}),to:e.jsx(s,{fontSize:"2xl"})}),u=()=>e.jsx(n,{delay:1,from:e.jsx(a,{fontSize:"2xl"}),to:e.jsx(s,{fontSize:"2xl"})}),d=()=>e.jsx(n,{from:e.jsx(a,{fontSize:"2xl"}),to:e.jsx(s,{fontSize:"2xl"}),transition:{type:"spring",damping:10,stiffness:120}}),x=()=>e.jsx(n,{disabled:!0,from:e.jsx(a,{fontSize:"2xl"}),to:e.jsx(s,{fontSize:"2xl"})}),h=()=>e.jsx(n,{from:e.jsx(a,{fontSize:"2xl"}),readOnly:!0,to:e.jsx(s,{fontSize:"2xl"})}),S=()=>{const[o,t]=c.useState("from");return e.jsx(n,{from:e.jsx(a,{fontSize:"2xl"}),to:e.jsx(s,{fontSize:"2xl"}),value:o,onChange:t})};f.parameters={...f.parameters,docs:{...f.parameters?.docs,source:{originalSource:`() => {
  return <Flip from={<AppleIcon fontSize="2xl" />} to={<CherryIcon fontSize="2xl" />} />;
}`,...f.parameters?.docs?.source}}};m.parameters={...m.parameters,docs:{...m.parameters?.docs,source:{originalSource:`() => {
  return <Flip from={<AppleIcon fontSize="2xl" />} orientation="vertical" to={<CherryIcon fontSize="2xl" />} />;
}`,...m.parameters?.docs?.source}}};p.parameters={...p.parameters,docs:{...p.parameters?.docs,source:{originalSource:`() => {
  return <Flip duration={1.4} from={<AppleIcon fontSize="2xl" />} to={<CherryIcon fontSize="2xl" />} />;
}`,...p.parameters?.docs?.source}}};u.parameters={...u.parameters,docs:{...u.parameters?.docs,source:{originalSource:`() => {
  return <Flip delay={1} from={<AppleIcon fontSize="2xl" />} to={<CherryIcon fontSize="2xl" />} />;
}`,...u.parameters?.docs?.source}}};d.parameters={...d.parameters,docs:{...d.parameters?.docs,source:{originalSource:`() => {
  return <Flip from={<AppleIcon fontSize="2xl" />} to={<CherryIcon fontSize="2xl" />} transition={{
    type: "spring",
    damping: 10,
    stiffness: 120
  }} />;
}`,...d.parameters?.docs?.source}}};x.parameters={...x.parameters,docs:{...x.parameters?.docs,source:{originalSource:`() => {
  return <Flip disabled from={<AppleIcon fontSize="2xl" />} to={<CherryIcon fontSize="2xl" />} />;
}`,...x.parameters?.docs?.source}}};h.parameters={...h.parameters,docs:{...h.parameters?.docs,source:{originalSource:`() => {
  return <Flip from={<AppleIcon fontSize="2xl" />} readOnly to={<CherryIcon fontSize="2xl" />} />;
}`,...h.parameters?.docs?.source}}};S.parameters={...S.parameters,docs:{...S.parameters?.docs,source:{originalSource:`() => {
  const [value, onChange] = useState<KeyframeIdent>("from");
  return <Flip from={<AppleIcon fontSize="2xl" />} to={<CherryIcon fontSize="2xl" />} value={value} onChange={onChange} />;
}`,...S.parameters?.docs?.source}}};const re=["Basic","Orientation","Duration","Delay","Transition","Disabled","ReadOnly","CustomControl"];export{f as Basic,S as CustomControl,u as Delay,x as Disabled,p as Duration,m as Orientation,h as ReadOnly,d as Transition,re as __namedExportsOrder,oe as default};
