{
  "Calendar": {
    "amountOfMonths": {
      "type": "number",
      "defaultValue": "1",
      "description": "The number of months to display.",
      "required": false
    },
    "colorScheme": {
      "type": "\"blackAlpha\" | \"whiteAlpha\" | \"amber\" | \"blue\" | \"info\" | \"link\" | \"primary\" | \"cyan\" | \"emerald\" | \"flashy\" | \"fuchsia\" | \"gray\" | \"green\" | \"success\" | \"indigo\" | \"lime\" | \"neutral\" | \"orange\" | \"warning\" | \"pink\" | \"purple\" | \"red\" | \"danger\" | \"rose\" | \"sky\" | \"teal\" | \"violet\" | \"secondary\" | \"yellow\"",
      "defaultValue": "\"primary\"",
      "description": "The visual color appearance of the component.",
      "required": false
    },
    "controlProps": {
      "type": "Omit<CalendarControlProps, \"operation\">",
      "description": "Props for calendar control button element.",
      "required": false
    },
    "dateFormat": {
      "type": "string",
      "defaultValue": "'MMMM YYYY'",
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "required": false,
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "dayProps": {
      "type": "{ component?: FC<DayProps> | undefined } & ButtonProps",
      "description": "Props for calendar day button element.",
      "required": false
    },
    "defaultMonth": {
      "type": "Date",
      "defaultValue": "'new Date()'",
      "description": "The initial month of the calendar.",
      "required": false
    },
    "defaultType": {
      "type": "\"month\" | \"date\" | \"year\"",
      "description": "The initial type of the calendar.",
      "required": false
    },
    "defaultValue": {
      "type": "NonNullable<Y>",
      "description": "The initial value of the calendar.",
      "required": false
    },
    "disableOutsideDays": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, outside days will be disabled.",
      "required": false
    },
    "enableMultiple": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, enables date multiple selection.",
      "required": false
    },
    "enableRange": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, enables date range selection.",
      "required": false
    },
    "excludeDate": {
      "type": "(date: Date) => boolean",
      "description": "Callback function to determine whether the day should be disabled.",
      "required": false
    },
    "firstDayOfWeek": {
      "type": "\"monday\" | \"sunday\"",
      "defaultValue": "'monday'",
      "description": "Define the first day of the week.",
      "required": false
    },
    "headerProps": {
      "type": "HTMLUIProps",
      "description": "Props for calendar header element.",
      "required": false
    },
    "hiddenOutsideDays": {
      "type": "boolean",
      "description": "If `true`, outside days will be hidden.",
      "required": false
    },
    "holidays": {
      "type": "Date[]",
      "description": "Define holidays.",
      "required": false
    },
    "labelProps": {
      "type": "{\n  icon?:\n    | IconProps\n    | ReactElement<any, string | JSXElementConstructor<any>>\n    | undefined\n} & CalendarLabelProps",
      "description": "Props for calendar label button element.",
      "required": false
    },
    "locale": {
      "type": "string",
      "defaultValue": "'en'",
      "description": "The locale of the calendar.\nCheck the docs to see the locale of possible modifiers you can pass.",
      "required": false,
      "see": "https://day.js.org/docs/en/i18n/instance-locale"
    },
    "maxDate": {
      "type": "Date",
      "description": "The maximum possible date.",
      "required": false
    },
    "maxSelectValues": {
      "type": "number",
      "description": "The maximum selectable value.",
      "required": false
    },
    "minDate": {
      "type": "Date",
      "description": "The minimum possible date.",
      "required": false
    },
    "minSelectValues": {
      "type": "number",
      "description": "The minimum selectable value.",
      "required": false
    },
    "month": {
      "type": "Date",
      "description": "The month of the calendar.",
      "required": false
    },
    "monthFormat": {
      "type": "string",
      "defaultValue": "'MM'",
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "required": false,
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "monthGridProps": {
      "type": "HTMLUIProps",
      "description": "Props for calendar month grid element.",
      "required": false
    },
    "monthProps": {
      "type": "{\n  component?: FC<{ index: number; month: string; year: number }> | undefined\n} & ButtonProps",
      "description": "Props for calendar month button element.",
      "required": false
    },
    "nextProps": {
      "type": "Omit<CalendarControlProps, \"operation\">",
      "description": "Props for calendar next control button element.",
      "required": false
    },
    "nextRef": {
      "type": "type ONLY_FOR_FORMAT =\n  | ((instance: (() => void | undefined) | null) => void)\n  | MutableRefObject<(() => void | undefined) | null>",
      "description": "Ref to a next function.",
      "required": false
    },
    "onChange": {
      "type": "(value: Y) => void",
      "description": "The callback invoked when value state changes.",
      "required": false
    },
    "onChangeMonth": {
      "type": "(value: Date) => void",
      "description": "The callback invoked when month state changes.",
      "required": false
    },
    "onChangeType": {
      "type": "(\n  type: \"month\" | \"date\" | \"year\",\n  year?: number | undefined,\n  month?: number | undefined,\n) => void",
      "description": "The callback invoked when type state changes.",
      "required": false
    },
    "paginateBy": {
      "type": "number",
      "defaultValue": "1",
      "description": "The number of months to paginate.",
      "required": false
    },
    "prevProps": {
      "type": "Omit<CalendarControlProps, \"operation\">",
      "description": "Props for calendar previous control button element.",
      "required": false
    },
    "prevRef": {
      "type": "type ONLY_FOR_FORMAT =\n  | ((instance: (() => void | undefined) | null) => void)\n  | MutableRefObject<(() => void | undefined) | null>",
      "description": "Ref to a previous function.",
      "required": false
    },
    "size": {
      "type": "\"sm\" | \"md\" | \"lg\" | \"full\"",
      "defaultValue": "\"md\"",
      "description": "The size of the Calendar.",
      "required": false
    },
    "tableProps": {
      "type": "MonthTableProps",
      "description": "Props for calendar month table element.",
      "required": false
    },
    "today": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, highlight today.",
      "required": false
    },
    "type": {
      "type": "\"month\" | \"date\" | \"year\"",
      "description": "The type of the calendar.",
      "required": false
    },
    "typeRef": {
      "type": "type ONLY_FOR_FORMAT =\n  | ((instance: (() => void | undefined) | null) => void)\n  | MutableRefObject<(() => void | undefined) | null>",
      "description": "Ref to a type function.",
      "required": false
    },
    "value": {
      "type": "NonNullable<Y>",
      "description": "The value of the calendar.",
      "required": false
    },
    "variant": {
      "type": "\"solid\" | \"subtle\" | \"unstyled\"",
      "defaultValue": "\"solid\"",
      "description": "The variant of the Calendar.",
      "required": false
    },
    "weekdayFormat": {
      "type": "string",
      "defaultValue": "'dd'",
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "required": false,
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "weekdayProps": {
      "type": "{ component?: FC<WeekdayProps> | undefined } & UIProps &\n  Omit<HTMLProps<\"div\">, keyof UIProps>",
      "description": "Props for calendar weekday element.",
      "required": false
    },
    "weekendDays": {
      "type": "number[]",
      "defaultValue": "'[0, 6]'",
      "description": "Define weekend days.",
      "required": false
    },
    "withControls": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, display the calendar control buttons.",
      "required": false
    },
    "withHeader": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, display the calendar header.",
      "required": false
    },
    "withLabel": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, display the calendar label button.",
      "required": false
    },
    "withWeekdays": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, display the calendar weekdays.",
      "required": false
    },
    "yearFormat": {
      "type": "string",
      "defaultValue": "'YYYY'",
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "required": false,
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "yearGridProps": {
      "type": "HTMLUIProps",
      "description": "Props for calendar year grid element.",
      "required": false
    },
    "yearProps": {
      "type": "{\n  component?: FC<{ index: number; year: number }> | undefined\n} & ButtonProps",
      "description": "Props for calendar year button element.",
      "required": false
    }
  },
  "DatePicker": {
    "allowInput": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, allows input.",
      "required": false
    },
    "allowInputBeyond": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, allows input of dates beyond the `minDate` and `maxDate` restrictions.",
      "required": false
    },
    "amountOfMonths": {
      "type": "number",
      "defaultValue": "1",
      "description": "The number of months to display.",
      "required": false
    },
    "animation": {
      "type": "\"bottom\" | \"left\" | \"right\" | \"scale\" | \"top\" | \"none\"",
      "defaultValue": "'scale'",
      "description": "The animation of the popover.",
      "required": false
    },
    "boundary": {
      "type": "HTMLElement | \"clippingParents\" | \"scrollParent\"",
      "defaultValue": "'clippingParents'",
      "description": "The boundary area for the popper. Used within the `preventOverflow` modifier.",
      "required": false
    },
    "calendarColorScheme": {
      "type": "ThemeColorScheme",
      "description": "ColorScheme for the calendar component.",
      "required": false
    },
    "calendarProps": {
      "type": "CalendarBaseProps",
      "description": "Props for calendar component.",
      "required": false
    },
    "calendarSize": {
      "type": "UIValue<\"lg\" | \"md\" | \"sm\" | ({} & string) | \"full\">",
      "description": "Size for the calendar component.",
      "required": false
    },
    "calendarVariant": {
      "type": "UIValue<({} & string) | \"solid\" | \"subtle\" | \"unstyled\">",
      "description": "Variant for the calendar component.",
      "required": false
    },
    "clearIconProps": {
      "type": "DatePickerIconProps",
      "description": "Props for date picker clear icon element.",
      "required": false
    },
    "closeDelay": {
      "type": "number",
      "defaultValue": "200",
      "description": "The number of delay time to close.",
      "required": false
    },
    "closeOnBlur": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, the popover will close when you blur out it by clicking outside or tabbing out.",
      "required": false
    },
    "closeOnEsc": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, the popover will close when you hit the `Esc` key.",
      "required": false
    },
    "closeOnSelect": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, the calendar component will be closed when value is selected.",
      "required": false
    },
    "colorScheme": {
      "type": "\"blackAlpha\" | \"whiteAlpha\" | \"amber\" | \"blue\" | \"info\" | \"link\" | \"primary\" | \"cyan\" | \"emerald\" | \"flashy\" | \"fuchsia\" | \"gray\" | \"green\" | \"success\" | \"indigo\" | \"lime\" | \"neutral\" | \"orange\" | \"warning\" | \"pink\" | \"purple\" | \"red\" | \"danger\" | \"rose\" | \"sky\" | \"teal\" | \"violet\" | \"secondary\" | \"yellow\"",
      "description": "The visual color appearance of the component.",
      "required": false
    },
    "containerProps": {
      "type": "Omit<HTMLUIProps, \"children\">",
      "description": "Props for date picker container element.",
      "required": false
    },
    "contentProps": {
      "type": "Omit<MotionProps, \"children\">",
      "description": "Props for month picker container element.",
      "required": false
    },
    "dateFormat": {
      "type": "string",
      "defaultValue": "'MMMM YYYY'",
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "required": false,
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "defaultIsOpen": {
      "type": "boolean",
      "description": "If `true`, the popover will be initially opened.",
      "required": false
    },
    "defaultMonth": {
      "type": "Date",
      "defaultValue": "'new Date()'",
      "description": "The initial month of the calendar.",
      "required": false
    },
    "defaultType": {
      "type": "\"month\" | \"date\" | \"year\"",
      "description": "The initial type of the calendar.",
      "required": false
    },
    "defaultValue": {
      "type": "Date",
      "description": "The initial value of the calendar.",
      "required": false
    },
    "disableOutsideDays": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, outside days will be disabled.",
      "required": false
    },
    "duration": {
      "type": "number | MotionLifecycleProps<number>",
      "description": "The animation duration.",
      "required": false
    },
    "errorBorderColor": {
      "type": "string",
      "description": "The border color when the input is invalid.",
      "required": false
    },
    "eventListeners": {
      "type": "type ONLY_FOR_FORMAT =\n  | boolean\n  | { resize?: boolean | undefined; scroll?: boolean | undefined }",
      "defaultValue": true,
      "description": "If provided, determines whether the popper will reposition itself on `scroll`  and `resize` of the window.",
      "required": false
    },
    "excludeDate": {
      "type": "(date: Date) => boolean",
      "description": "Callback function to determine whether the day should be disabled.",
      "required": false
    },
    "fieldProps": {
      "type": "Omit<DatePickerFieldProps, \"children\" | \"inputProps\">",
      "description": "Props for date picker field element.",
      "required": false
    },
    "firstDayOfWeek": {
      "type": "\"monday\" | \"sunday\"",
      "defaultValue": "'monday'",
      "description": "Define the first day of the week.",
      "required": false
    },
    "flip": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, the popper will change its placement and flip when it's about to overflow its boundary area.",
      "required": false
    },
    "focusBorderColor": {
      "type": "string",
      "description": "The border color when the input is focused.",
      "required": false
    },
    "gutter": {
      "type": "UIValue<number>",
      "defaultValue": "8",
      "description": "The distance or margin between the reference and popper.\nIt is used internally to create an `offset` modifier.",
      "required": false
    },
    "hiddenOutsideDays": {
      "type": "boolean",
      "description": "If `true`, outside days will be hidden.",
      "required": false
    },
    "holidays": {
      "type": "Date[]",
      "description": "Define holidays.",
      "required": false
    },
    "iconProps": {
      "type": "DatePickerIconProps",
      "description": "Props for date picker icon element.",
      "required": false
    },
    "inputFormat": {
      "type": "string",
      "defaultValue": "'YYYY/MM/DD'",
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "required": false,
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "inputProps": {
      "type": "UIProps &\n  Omit<HTMLProps<\"input\">, keyof UIProps> &\n  RefAttributes<HTMLInputElement>",
      "description": "Props for date picker input element.",
      "required": false
    },
    "isClearable": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, display the date picker clear icon.",
      "required": false
    },
    "isDisabled": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the form control will be disabled.",
      "required": false
    },
    "isInvalid": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the form control will be invalid.",
      "required": false
    },
    "isLazy": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the PopoverContent rendering will be deferred until the popover is open.",
      "required": false
    },
    "isOpen": {
      "type": "boolean",
      "description": "If `true`, the popover will be opened.",
      "required": false
    },
    "isReadOnly": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the form control will be readonly.",
      "required": false
    },
    "isRequired": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the form control will be required.",
      "required": false
    },
    "lazyBehavior": {
      "type": "LazyMode",
      "defaultValue": "'unmount'",
      "description": "The lazy behavior of popover's content when not visible. Only works when `isLazy={true}`\n\n- `unmount`: The popover's content is always unmounted when not open.\n- `keepMounted`: The popover's content initially unmounted, but stays mounted when popover is open.",
      "required": false
    },
    "locale": {
      "type": "string",
      "defaultValue": "'en'",
      "description": "The locale of the calendar.\nCheck the docs to see the locale of possible modifiers you can pass.",
      "required": false,
      "see": "https://day.js.org/docs/en/i18n/instance-locale"
    },
    "matchWidth": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the popper will match the width of the reference at all times.\nIt's useful for `autocomplete`, `date-picker` and `select` patterns.",
      "required": false
    },
    "maxDate": {
      "type": "Date",
      "description": "The maximum possible date.",
      "required": false
    },
    "maxSelectValues": {
      "type": "number",
      "description": "The maximum selectable value.",
      "required": false
    },
    "minDate": {
      "type": "Date",
      "description": "The minimum possible date.",
      "required": false
    },
    "minSelectValues": {
      "type": "number",
      "description": "The minimum selectable value.",
      "required": false
    },
    "modifiers": {
      "type": "Partial<Modifier<string, any>>[]",
      "description": "Array of popper.js modifiers.\nCheck the docs to see the list of possible modifiers you can pass.",
      "required": false,
      "see": "https://popper.js.org/docs/v2/modifiers/"
    },
    "month": {
      "type": "Date",
      "description": "The month of the calendar.",
      "required": false
    },
    "monthFormat": {
      "type": "string",
      "defaultValue": "'MM'",
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "required": false,
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "offset": {
      "type": "[number, number]",
      "description": "The main and cross-axis offset to displace popper element from its reference element.",
      "required": false
    },
    "onChange": {
      "type": "(value: Date | undefined) => void",
      "description": "The callback invoked when value state changes.",
      "required": false
    },
    "onChangeMonth": {
      "type": "(value: Date) => void",
      "description": "The callback invoked when month state changes.",
      "required": false
    },
    "onChangeType": {
      "type": "(\n  type: \"month\" | \"date\" | \"year\",\n  year?: number | undefined,\n  month?: number | undefined,\n) => void",
      "description": "The callback invoked when type state changes.",
      "required": false
    },
    "onClose": {
      "type": "() => void",
      "description": "Callback fired when the popover closes.",
      "required": false
    },
    "onOpen": {
      "type": "() => void",
      "description": "Callback fired when the popover opens.",
      "required": false
    },
    "openDelay": {
      "type": "number",
      "defaultValue": "200",
      "description": "The number of delay time to open.",
      "required": false
    },
    "paginateBy": {
      "type": "number",
      "defaultValue": "1",
      "description": "The number of months to paginate.",
      "required": false
    },
    "parseDate": {
      "type": "(value: string) => Date | undefined",
      "description": "Function that converts the input value to Date type.",
      "required": false
    },
    "pattern": {
      "type": "RegExp",
      "defaultValue": "'/[^0-9\\-\\/]/g'",
      "description": "The pattern used to check the input element.",
      "required": false
    },
    "placement": {
      "type": "UIValue<Placement>",
      "defaultValue": "'bottom'",
      "description": "The placement of the popper relative to its reference.",
      "required": false
    },
    "portalProps": {
      "type": "Omit<PortalProps, \"children\">",
      "defaultValue": "'{ isDisabled: true }'",
      "description": "Props to be forwarded to the portal component.",
      "required": false
    },
    "preventOverflow": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, will prevent the popper from being cut off and ensure it's visible within the boundary area.",
      "required": false
    },
    "size": {
      "type": "\"xs\" | \"sm\" | \"md\" | \"lg\"",
      "defaultValue": "\"md\"",
      "description": "The size of the DatePicker.",
      "required": false
    },
    "strategy": {
      "type": "\"absolute\" | \"fixed\"",
      "defaultValue": "'absolute'",
      "description": "The CSS positioning strategy to use.",
      "required": false
    },
    "today": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, highlight today.",
      "required": false
    },
    "type": {
      "type": "\"month\" | \"date\" | \"year\"",
      "description": "The type of the calendar.",
      "required": false
    },
    "value": {
      "type": "Date",
      "description": "The value of the calendar.",
      "required": false
    },
    "variant": {
      "type": "\"filled\" | \"flushed\" | \"outline\" | \"unstyled\"",
      "defaultValue": "\"outline\"",
      "description": "The variant of the DatePicker.",
      "required": false
    },
    "weekdayFormat": {
      "type": "string",
      "defaultValue": "'dd'",
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "required": false,
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "weekendDays": {
      "type": "number[]",
      "defaultValue": "'[0, 6]'",
      "description": "Define weekend days.",
      "required": false
    },
    "withControls": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, display the calendar control buttons.",
      "required": false
    },
    "withHeader": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, display the calendar header.",
      "required": false
    },
    "withLabel": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, display the calendar label button.",
      "required": false
    },
    "withWeekdays": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, display the calendar weekdays.",
      "required": false
    },
    "yearFormat": {
      "type": "string",
      "defaultValue": "'YYYY'",
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "required": false,
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    }
  },
  "MonthPicker": {
    "allowInput": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, allows input.",
      "required": false
    },
    "allowInputBeyond": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, allows input of dates beyond the `minDate` and `maxDate` restrictions.",
      "required": false
    },
    "animation": {
      "type": "\"bottom\" | \"left\" | \"right\" | \"scale\" | \"top\" | \"none\"",
      "defaultValue": "'scale'",
      "description": "The animation of the popover.",
      "required": false
    },
    "boundary": {
      "type": "HTMLElement | \"clippingParents\" | \"scrollParent\"",
      "defaultValue": "'clippingParents'",
      "description": "The boundary area for the popper. Used within the `preventOverflow` modifier.",
      "required": false
    },
    "calendarColorScheme": {
      "type": "ThemeColorScheme",
      "description": "ColorScheme for the calendar component.",
      "required": false
    },
    "calendarProps": {
      "type": "CalendarBaseProps",
      "description": "Props for calendar component.",
      "required": false
    },
    "calendarSize": {
      "type": "UIValue<\"lg\" | \"md\" | \"sm\" | ({} & string) | \"full\">",
      "description": "Size for the calendar component.",
      "required": false
    },
    "calendarVariant": {
      "type": "UIValue<({} & string) | \"solid\" | \"subtle\" | \"unstyled\">",
      "description": "Variant for the calendar component.",
      "required": false
    },
    "clearIconProps": {
      "type": "DatePickerIconProps",
      "description": "Props for month picker clear icon element.",
      "required": false
    },
    "closeDelay": {
      "type": "number",
      "defaultValue": "200",
      "description": "The number of delay time to close.",
      "required": false
    },
    "closeOnBlur": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, the popover will close when you blur out it by clicking outside or tabbing out.",
      "required": false
    },
    "closeOnEsc": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, the popover will close when you hit the `Esc` key.",
      "required": false
    },
    "closeOnSelect": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, the calendar component will be closed when value is selected.",
      "required": false
    },
    "colorScheme": {
      "type": "\"blackAlpha\" | \"whiteAlpha\" | \"amber\" | \"blue\" | \"info\" | \"link\" | \"primary\" | \"cyan\" | \"emerald\" | \"flashy\" | \"fuchsia\" | \"gray\" | \"green\" | \"success\" | \"indigo\" | \"lime\" | \"neutral\" | \"orange\" | \"warning\" | \"pink\" | \"purple\" | \"red\" | \"danger\" | \"rose\" | \"sky\" | \"teal\" | \"violet\" | \"secondary\" | \"yellow\"",
      "description": "The visual color appearance of the component.",
      "required": false
    },
    "containerProps": {
      "type": "Omit<HTMLUIProps, \"children\">",
      "description": "Props for month picker container element.",
      "required": false
    },
    "contentProps": {
      "type": "Omit<MotionProps, \"children\">",
      "description": "Props for month picker container element.",
      "required": false
    },
    "defaultIsOpen": {
      "type": "boolean",
      "description": "If `true`, the popover will be initially opened.",
      "required": false
    },
    "defaultMonth": {
      "type": "Date",
      "defaultValue": "'new Date()'",
      "description": "The initial month of the calendar.",
      "required": false
    },
    "defaultType": {
      "type": "\"month\" | \"year\"",
      "defaultValue": "'month'",
      "description": "The initial type of the month picker.",
      "required": false
    },
    "defaultValue": {
      "type": "Date",
      "description": "The initial value of the calendar.",
      "required": false
    },
    "duration": {
      "type": "number | MotionLifecycleProps<number>",
      "description": "The animation duration.",
      "required": false
    },
    "errorBorderColor": {
      "type": "string",
      "description": "The border color when the input is invalid.",
      "required": false
    },
    "eventListeners": {
      "type": "type ONLY_FOR_FORMAT =\n  | boolean\n  | { resize?: boolean | undefined; scroll?: boolean | undefined }",
      "defaultValue": true,
      "description": "If provided, determines whether the popper will reposition itself on `scroll`  and `resize` of the window.",
      "required": false
    },
    "fieldProps": {
      "type": "Omit<DatePickerFieldProps, \"children\" | \"inputProps\">",
      "description": "Props for month picker field element.",
      "required": false
    },
    "flip": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, the popper will change its placement and flip when it's about to overflow its boundary area.",
      "required": false
    },
    "focusBorderColor": {
      "type": "string",
      "description": "The border color when the input is focused.",
      "required": false
    },
    "gutter": {
      "type": "UIValue<number>",
      "defaultValue": "8",
      "description": "The distance or margin between the reference and popper.\nIt is used internally to create an `offset` modifier.",
      "required": false
    },
    "iconProps": {
      "type": "DatePickerIconProps",
      "description": "Props for month picker icon element.",
      "required": false
    },
    "inputFormat": {
      "type": "string",
      "defaultValue": "'YYYY/MM/DD'",
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "required": false,
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "inputProps": {
      "type": "UIProps &\n  Omit<HTMLProps<\"input\">, keyof UIProps> &\n  RefAttributes<HTMLInputElement>",
      "description": "Props for month picker input element.",
      "required": false
    },
    "isClearable": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, display the month picker clear icon.",
      "required": false
    },
    "isDisabled": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the form control will be disabled.",
      "required": false
    },
    "isInvalid": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the form control will be invalid.",
      "required": false
    },
    "isLazy": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the PopoverContent rendering will be deferred until the popover is open.",
      "required": false
    },
    "isOpen": {
      "type": "boolean",
      "description": "If `true`, the popover will be opened.",
      "required": false
    },
    "isReadOnly": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the form control will be readonly.",
      "required": false
    },
    "isRequired": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the form control will be required.",
      "required": false
    },
    "lazyBehavior": {
      "type": "LazyMode",
      "defaultValue": "'unmount'",
      "description": "The lazy behavior of popover's content when not visible. Only works when `isLazy={true}`\n\n- `unmount`: The popover's content is always unmounted when not open.\n- `keepMounted`: The popover's content initially unmounted, but stays mounted when popover is open.",
      "required": false
    },
    "locale": {
      "type": "string",
      "defaultValue": "'en'",
      "description": "The locale of the calendar.\nCheck the docs to see the locale of possible modifiers you can pass.",
      "required": false,
      "see": "https://day.js.org/docs/en/i18n/instance-locale"
    },
    "matchWidth": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the popper will match the width of the reference at all times.\nIt's useful for `autocomplete`, `date-picker` and `select` patterns.",
      "required": false
    },
    "maxDate": {
      "type": "Date",
      "description": "The maximum possible date.",
      "required": false
    },
    "minDate": {
      "type": "Date",
      "description": "The minimum possible date.",
      "required": false
    },
    "modifiers": {
      "type": "Partial<Modifier<string, any>>[]",
      "description": "Array of popper.js modifiers.\nCheck the docs to see the list of possible modifiers you can pass.",
      "required": false,
      "see": "https://popper.js.org/docs/v2/modifiers/"
    },
    "month": {
      "type": "Date",
      "description": "The month of the calendar.",
      "required": false
    },
    "monthFormat": {
      "type": "string",
      "defaultValue": "'MM'",
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "required": false,
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "offset": {
      "type": "[number, number]",
      "description": "The main and cross-axis offset to displace popper element from its reference element.",
      "required": false
    },
    "onChange": {
      "type": "(value: Date | undefined) => void",
      "description": "The callback invoked when value state changes.",
      "required": false
    },
    "onChangeMonth": {
      "type": "(value: Date) => void",
      "description": "The callback invoked when month state changes.",
      "required": false
    },
    "onChangeType": {
      "type": "(type: \"month\" | \"year\") => void",
      "description": "The callback invoked when type state changes.",
      "required": false
    },
    "onClose": {
      "type": "() => void",
      "description": "Callback fired when the popover closes.",
      "required": false
    },
    "onOpen": {
      "type": "() => void",
      "description": "Callback fired when the popover opens.",
      "required": false
    },
    "openDelay": {
      "type": "number",
      "defaultValue": "200",
      "description": "The number of delay time to open.",
      "required": false
    },
    "parseDate": {
      "type": "(value: string) => Date | undefined",
      "description": "Function that converts the input value to Date type.",
      "required": false
    },
    "pattern": {
      "type": "RegExp",
      "defaultValue": "'/[^0-9\\-\\/]/g'",
      "description": "The pattern used to check the input element.",
      "required": false
    },
    "placement": {
      "type": "UIValue<Placement>",
      "defaultValue": "'bottom'",
      "description": "The placement of the popper relative to its reference.",
      "required": false
    },
    "portalProps": {
      "type": "Omit<PortalProps, \"children\">",
      "defaultValue": "'{ isDisabled: true }'",
      "description": "Props to be forwarded to the portal component.",
      "required": false
    },
    "preventOverflow": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, will prevent the popper from being cut off and ensure it's visible within the boundary area.",
      "required": false
    },
    "size": {
      "type": "\"xs\" | \"sm\" | \"md\" | \"lg\"",
      "defaultValue": "\"md\"",
      "description": "The size of the MonthPicker.",
      "required": false
    },
    "strategy": {
      "type": "\"absolute\" | \"fixed\"",
      "defaultValue": "'absolute'",
      "description": "The CSS positioning strategy to use.",
      "required": false
    },
    "type": {
      "type": "\"month\" | \"year\"",
      "description": "The type of the month picker.",
      "required": false
    },
    "value": {
      "type": "Date",
      "description": "The value of the calendar.",
      "required": false
    },
    "variant": {
      "type": "\"filled\" | \"flushed\" | \"outline\" | \"unstyled\"",
      "defaultValue": "\"outline\"",
      "description": "The variant of the MonthPicker.",
      "required": false
    },
    "withControls": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, display the calendar control buttons.",
      "required": false
    },
    "withHeader": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, display the calendar header.",
      "required": false
    },
    "withLabel": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, display the calendar label button.",
      "required": false
    },
    "yearFormat": {
      "type": "string",
      "defaultValue": "'YYYY'",
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "required": false,
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    }
  },
  "MultiDatePicker": {
    "allowInput": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, allows input.",
      "required": false
    },
    "allowInputBeyond": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, allows input of dates beyond the `minDate` and `maxDate` restrictions.",
      "required": false
    },
    "amountOfMonths": {
      "type": "number",
      "defaultValue": "1",
      "description": "The number of months to display.",
      "required": false
    },
    "animation": {
      "type": "\"bottom\" | \"left\" | \"right\" | \"scale\" | \"top\" | \"none\"",
      "defaultValue": "'scale'",
      "description": "The animation of the popover.",
      "required": false
    },
    "boundary": {
      "type": "HTMLElement | \"clippingParents\" | \"scrollParent\"",
      "defaultValue": "'clippingParents'",
      "description": "The boundary area for the popper. Used within the `preventOverflow` modifier.",
      "required": false
    },
    "calendarColorScheme": {
      "type": "ThemeColorScheme",
      "description": "ColorScheme for the calendar component.",
      "required": false
    },
    "calendarProps": {
      "type": "CalendarBaseProps",
      "description": "Props for calendar component.",
      "required": false
    },
    "calendarSize": {
      "type": "UIValue<\"lg\" | \"md\" | \"sm\" | ({} & string) | \"full\">",
      "description": "Size for the calendar component.",
      "required": false
    },
    "calendarVariant": {
      "type": "UIValue<({} & string) | \"solid\" | \"subtle\" | \"unstyled\">",
      "description": "Variant for the calendar component.",
      "required": false
    },
    "clearIconProps": {
      "type": "DatePickerIconProps",
      "description": "Props for date picker clear icon element.",
      "required": false
    },
    "closeDelay": {
      "type": "number",
      "defaultValue": "200",
      "description": "The number of delay time to close.",
      "required": false
    },
    "closeOnBlur": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, the popover will close when you blur out it by clicking outside or tabbing out.",
      "required": false
    },
    "closeOnEsc": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, the popover will close when you hit the `Esc` key.",
      "required": false
    },
    "closeOnMaxSelect": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, the calendar component will be closed when value is max selected.",
      "required": false
    },
    "closeOnSelect": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the calendar component will be closed when value is selected.",
      "required": false
    },
    "colorScheme": {
      "type": "\"blackAlpha\" | \"whiteAlpha\" | \"amber\" | \"blue\" | \"info\" | \"link\" | \"primary\" | \"cyan\" | \"emerald\" | \"flashy\" | \"fuchsia\" | \"gray\" | \"green\" | \"success\" | \"indigo\" | \"lime\" | \"neutral\" | \"orange\" | \"warning\" | \"pink\" | \"purple\" | \"red\" | \"danger\" | \"rose\" | \"sky\" | \"teal\" | \"violet\" | \"secondary\" | \"yellow\"",
      "description": "The visual color appearance of the component.",
      "required": false
    },
    "component": {
      "type": "FC<{\n  index: number\n  label: string\n  value: Date\n  onRemove: MouseEventHandler<HTMLElement>\n}>",
      "description": "The custom display value to use.",
      "required": false
    },
    "containerProps": {
      "type": "Omit<HTMLUIProps, \"children\">",
      "description": "Props for date picker container element.",
      "required": false
    },
    "contentProps": {
      "type": "Omit<MotionProps, \"children\">",
      "description": "Props for date picker container element.",
      "required": false
    },
    "dateFormat": {
      "type": "string",
      "defaultValue": "'MMMM YYYY'",
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "required": false,
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "defaultIsOpen": {
      "type": "boolean",
      "description": "If `true`, the popover will be initially opened.",
      "required": false
    },
    "defaultMonth": {
      "type": "Date",
      "defaultValue": "'new Date()'",
      "description": "The initial month of the calendar.",
      "required": false
    },
    "defaultType": {
      "type": "\"month\" | \"date\" | \"year\"",
      "description": "The initial type of the calendar.",
      "required": false
    },
    "defaultValue": {
      "type": "Date[]",
      "description": "The initial value of the calendar.",
      "required": false
    },
    "disableOutsideDays": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, outside days will be disabled.",
      "required": false
    },
    "duration": {
      "type": "number | MotionLifecycleProps<number>",
      "description": "The animation duration.",
      "required": false
    },
    "errorBorderColor": {
      "type": "string",
      "description": "The border color when the input is invalid.",
      "required": false
    },
    "eventListeners": {
      "type": "type ONLY_FOR_FORMAT =\n  | boolean\n  | { resize?: boolean | undefined; scroll?: boolean | undefined }",
      "defaultValue": true,
      "description": "If provided, determines whether the popper will reposition itself on `scroll`  and `resize` of the window.",
      "required": false
    },
    "excludeDate": {
      "type": "(date: Date) => boolean",
      "description": "Callback function to determine whether the day should be disabled.",
      "required": false
    },
    "fieldProps": {
      "type": "Omit<HTMLUIProps, \"children\">",
      "description": "Props for date picker field element.",
      "required": false
    },
    "firstDayOfWeek": {
      "type": "\"monday\" | \"sunday\"",
      "defaultValue": "'monday'",
      "description": "Define the first day of the week.",
      "required": false
    },
    "flip": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, the popper will change its placement and flip when it's about to overflow its boundary area.",
      "required": false
    },
    "focusBorderColor": {
      "type": "string",
      "description": "The border color when the input is focused.",
      "required": false
    },
    "gutter": {
      "type": "UIValue<number>",
      "defaultValue": "8",
      "description": "The distance or margin between the reference and popper.\nIt is used internally to create an `offset` modifier.",
      "required": false
    },
    "hiddenOutsideDays": {
      "type": "boolean",
      "description": "If `true`, outside days will be hidden.",
      "required": false
    },
    "holidays": {
      "type": "Date[]",
      "description": "Define holidays.",
      "required": false
    },
    "iconProps": {
      "type": "DatePickerIconProps",
      "description": "Props for date picker icon element.",
      "required": false
    },
    "inputFormat": {
      "type": "string",
      "defaultValue": "'YYYY/MM/DD'",
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "required": false,
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "inputProps": {
      "type": "HTMLUIProps<\"input\">",
      "description": "Props for date picker input element.",
      "required": false
    },
    "isClearable": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, display the date picker clear icon.",
      "required": false
    },
    "isDisabled": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the form control will be disabled.",
      "required": false
    },
    "isInvalid": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the form control will be invalid.",
      "required": false
    },
    "isLazy": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the PopoverContent rendering will be deferred until the popover is open.",
      "required": false
    },
    "isOpen": {
      "type": "boolean",
      "description": "If `true`, the popover will be opened.",
      "required": false
    },
    "isReadOnly": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the form control will be readonly.",
      "required": false
    },
    "isRequired": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the form control will be required.",
      "required": false
    },
    "keepPlaceholder": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, keep the placeholder.",
      "required": false
    },
    "lazyBehavior": {
      "type": "LazyMode",
      "defaultValue": "'unmount'",
      "description": "The lazy behavior of popover's content when not visible. Only works when `isLazy={true}`\n\n- `unmount`: The popover's content is always unmounted when not open.\n- `keepMounted`: The popover's content initially unmounted, but stays mounted when popover is open.",
      "required": false
    },
    "locale": {
      "type": "string",
      "defaultValue": "'en'",
      "description": "The locale of the calendar.\nCheck the docs to see the locale of possible modifiers you can pass.",
      "required": false,
      "see": "https://day.js.org/docs/en/i18n/instance-locale"
    },
    "matchWidth": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the popper will match the width of the reference at all times.\nIt's useful for `autocomplete`, `date-picker` and `select` patterns.",
      "required": false
    },
    "maxDate": {
      "type": "Date",
      "description": "The maximum possible date.",
      "required": false
    },
    "maxSelectValues": {
      "type": "number",
      "description": "The maximum selectable value.",
      "required": false
    },
    "minDate": {
      "type": "Date",
      "description": "The minimum possible date.",
      "required": false
    },
    "minSelectValues": {
      "type": "number",
      "description": "The minimum selectable value.",
      "required": false
    },
    "modifiers": {
      "type": "Partial<Modifier<string, any>>[]",
      "description": "Array of popper.js modifiers.\nCheck the docs to see the list of possible modifiers you can pass.",
      "required": false,
      "see": "https://popper.js.org/docs/v2/modifiers/"
    },
    "month": {
      "type": "Date",
      "description": "The month of the calendar.",
      "required": false
    },
    "monthFormat": {
      "type": "string",
      "defaultValue": "'MM'",
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "required": false,
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "offset": {
      "type": "[number, number]",
      "description": "The main and cross-axis offset to displace popper element from its reference element.",
      "required": false
    },
    "onChange": {
      "type": "(value: Date[]) => void",
      "description": "The callback invoked when value state changes.",
      "required": false
    },
    "onChangeMonth": {
      "type": "(value: Date) => void",
      "description": "The callback invoked when month state changes.",
      "required": false
    },
    "onChangeType": {
      "type": "(\n  type: \"month\" | \"date\" | \"year\",\n  year?: number | undefined,\n  month?: number | undefined,\n) => void",
      "description": "The callback invoked when type state changes.",
      "required": false
    },
    "onClose": {
      "type": "() => void",
      "description": "Callback fired when the popover closes.",
      "required": false
    },
    "onOpen": {
      "type": "() => void",
      "description": "Callback fired when the popover opens.",
      "required": false
    },
    "openDelay": {
      "type": "number",
      "defaultValue": "200",
      "description": "The number of delay time to open.",
      "required": false
    },
    "paginateBy": {
      "type": "number",
      "defaultValue": "1",
      "description": "The number of months to paginate.",
      "required": false
    },
    "parseDate": {
      "type": "(value: string) => Date | undefined",
      "description": "Function that converts the input value to Date type.",
      "required": false
    },
    "pattern": {
      "type": "RegExp",
      "defaultValue": "'/[^0-9\\-\\/]/g'",
      "description": "The pattern used to check the input element.",
      "required": false
    },
    "placement": {
      "type": "UIValue<Placement>",
      "defaultValue": "'bottom'",
      "description": "The placement of the popper relative to its reference.",
      "required": false
    },
    "portalProps": {
      "type": "Omit<PortalProps, \"children\">",
      "defaultValue": "'{ isDisabled: true }'",
      "description": "Props to be forwarded to the portal component.",
      "required": false
    },
    "preventOverflow": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, will prevent the popper from being cut off and ensure it's visible within the boundary area.",
      "required": false
    },
    "separator": {
      "type": "string",
      "defaultValue": "','",
      "description": "The visual separator between each value.",
      "required": false
    },
    "size": {
      "type": "\"xs\" | \"sm\" | \"md\" | \"lg\"",
      "defaultValue": "\"md\"",
      "description": "The size of the MultiDatePicker.",
      "required": false
    },
    "strategy": {
      "type": "\"absolute\" | \"fixed\"",
      "defaultValue": "'absolute'",
      "description": "The CSS positioning strategy to use.",
      "required": false
    },
    "today": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, highlight today.",
      "required": false
    },
    "type": {
      "type": "\"month\" | \"date\" | \"year\"",
      "description": "The type of the calendar.",
      "required": false
    },
    "value": {
      "type": "Date[]",
      "description": "The value of the calendar.",
      "required": false
    },
    "variant": {
      "type": "\"filled\" | \"flushed\" | \"outline\" | \"unstyled\"",
      "defaultValue": "\"outline\"",
      "description": "The variant of the MultiDatePicker.",
      "required": false
    },
    "weekdayFormat": {
      "type": "string",
      "defaultValue": "'dd'",
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "required": false,
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "weekendDays": {
      "type": "number[]",
      "defaultValue": "'[0, 6]'",
      "description": "Define weekend days.",
      "required": false
    },
    "withControls": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, display the calendar control buttons.",
      "required": false
    },
    "withHeader": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, display the calendar header.",
      "required": false
    },
    "withLabel": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, display the calendar label button.",
      "required": false
    },
    "withWeekdays": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, display the calendar weekdays.",
      "required": false
    },
    "yearFormat": {
      "type": "string",
      "defaultValue": "'YYYY'",
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "required": false,
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    }
  },
  "RangeDatePicker": {
    "allowInput": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, allows input.",
      "required": false
    },
    "allowInputBeyond": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, allows input of dates beyond the `minDate` and `maxDate` restrictions.",
      "required": false
    },
    "amountOfMonths": {
      "type": "number",
      "defaultValue": "1",
      "description": "The number of months to display.",
      "required": false
    },
    "animation": {
      "type": "\"bottom\" | \"left\" | \"right\" | \"scale\" | \"top\" | \"none\"",
      "defaultValue": "'scale'",
      "description": "The animation of the popover.",
      "required": false
    },
    "boundary": {
      "type": "HTMLElement | \"clippingParents\" | \"scrollParent\"",
      "defaultValue": "'clippingParents'",
      "description": "The boundary area for the popper. Used within the `preventOverflow` modifier.",
      "required": false
    },
    "calendarColorScheme": {
      "type": "ThemeColorScheme",
      "description": "ColorScheme for the calendar component.",
      "required": false
    },
    "calendarProps": {
      "type": "CalendarBaseProps",
      "description": "Props for calendar component.",
      "required": false
    },
    "calendarSize": {
      "type": "UIValue<\"lg\" | \"md\" | \"sm\" | ({} & string) | \"full\">",
      "description": "Size for the calendar component.",
      "required": false
    },
    "calendarVariant": {
      "type": "UIValue<({} & string) | \"solid\" | \"subtle\" | \"unstyled\">",
      "description": "Variant for the calendar component.",
      "required": false
    },
    "clearIconProps": {
      "type": "DatePickerIconProps",
      "description": "Props for date picker clear icon element.",
      "required": false
    },
    "closeDelay": {
      "type": "number",
      "defaultValue": "200",
      "description": "The number of delay time to close.",
      "required": false
    },
    "closeOnBlur": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, the popover will close when you blur out it by clicking outside or tabbing out.",
      "required": false
    },
    "closeOnEsc": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, the popover will close when you hit the `Esc` key.",
      "required": false
    },
    "closeOnSelect": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, the list element will be closed when value is selected.",
      "required": false
    },
    "colorScheme": {
      "type": "\"blackAlpha\" | \"whiteAlpha\" | \"amber\" | \"blue\" | \"info\" | \"link\" | \"primary\" | \"cyan\" | \"emerald\" | \"flashy\" | \"fuchsia\" | \"gray\" | \"green\" | \"success\" | \"indigo\" | \"lime\" | \"neutral\" | \"orange\" | \"warning\" | \"pink\" | \"purple\" | \"red\" | \"danger\" | \"rose\" | \"sky\" | \"teal\" | \"violet\" | \"secondary\" | \"yellow\"",
      "description": "The visual color appearance of the component.",
      "required": false
    },
    "containerProps": {
      "type": "Omit<HTMLUIProps, \"children\">",
      "description": "Props for date picker container element.",
      "required": false
    },
    "contentProps": {
      "type": "Omit<MotionProps, \"children\">",
      "description": "Props for date picker container element.",
      "required": false
    },
    "dateFormat": {
      "type": "string",
      "defaultValue": "'MMMM YYYY'",
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "required": false,
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "defaultIsOpen": {
      "type": "boolean",
      "description": "If `true`, the popover will be initially opened.",
      "required": false
    },
    "defaultMonth": {
      "type": "Date",
      "defaultValue": "'new Date()'",
      "description": "The initial month of the calendar.",
      "required": false
    },
    "defaultType": {
      "type": "\"month\" | \"date\" | \"year\"",
      "description": "The initial type of the calendar.",
      "required": false
    },
    "defaultValue": {
      "type": "[(Date | undefined)?, (Date | undefined)?]",
      "description": "The initial value of the calendar.",
      "required": false
    },
    "disableOutsideDays": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, outside days will be disabled.",
      "required": false
    },
    "duration": {
      "type": "number | MotionLifecycleProps<number>",
      "description": "The animation duration.",
      "required": false
    },
    "endInputProps": {
      "type": "HTMLUIProps<\"input\">",
      "description": "Props for date picker end input element.",
      "required": false
    },
    "endPlaceholder": {
      "type": "string",
      "description": "The end date placeholder",
      "required": false
    },
    "errorBorderColor": {
      "type": "string",
      "description": "The border color when the input is invalid.",
      "required": false
    },
    "eventListeners": {
      "type": "type ONLY_FOR_FORMAT =\n  | boolean\n  | { resize?: boolean | undefined; scroll?: boolean | undefined }",
      "defaultValue": true,
      "description": "If provided, determines whether the popper will reposition itself on `scroll`  and `resize` of the window.",
      "required": false
    },
    "excludeDate": {
      "type": "(date: Date) => boolean",
      "description": "Callback function to determine whether the day should be disabled.",
      "required": false
    },
    "fieldProps": {
      "type": "Omit<HTMLUIProps, \"children\">",
      "description": "Props for date picker field element.",
      "required": false
    },
    "firstDayOfWeek": {
      "type": "\"monday\" | \"sunday\"",
      "defaultValue": "'monday'",
      "description": "Define the first day of the week.",
      "required": false
    },
    "flip": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, the popper will change its placement and flip when it's about to overflow its boundary area.",
      "required": false
    },
    "focusBorderColor": {
      "type": "string",
      "description": "The border color when the input is focused.",
      "required": false
    },
    "gutter": {
      "type": "UIValue<number>",
      "defaultValue": "8",
      "description": "The distance or margin between the reference and popper.\nIt is used internally to create an `offset` modifier.",
      "required": false
    },
    "hiddenOutsideDays": {
      "type": "boolean",
      "description": "If `true`, outside days will be hidden.",
      "required": false
    },
    "holidays": {
      "type": "Date[]",
      "description": "Define holidays.",
      "required": false
    },
    "iconProps": {
      "type": "DatePickerIconProps",
      "description": "Props for date picker icon element.",
      "required": false
    },
    "inputFormat": {
      "type": "string",
      "defaultValue": "'YYYY/MM/DD'",
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "required": false,
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "isClearable": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, display the date picker clear icon.",
      "required": false
    },
    "isDisabled": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the form control will be disabled.",
      "required": false
    },
    "isInvalid": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the form control will be invalid.",
      "required": false
    },
    "isLazy": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the PopoverContent rendering will be deferred until the popover is open.",
      "required": false
    },
    "isOpen": {
      "type": "boolean",
      "description": "If `true`, the popover will be opened.",
      "required": false
    },
    "isReadOnly": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the form control will be readonly.",
      "required": false
    },
    "isRequired": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the form control will be required.",
      "required": false
    },
    "lazyBehavior": {
      "type": "LazyMode",
      "defaultValue": "'unmount'",
      "description": "The lazy behavior of popover's content when not visible. Only works when `isLazy={true}`\n\n- `unmount`: The popover's content is always unmounted when not open.\n- `keepMounted`: The popover's content initially unmounted, but stays mounted when popover is open.",
      "required": false
    },
    "locale": {
      "type": "string",
      "defaultValue": "'en'",
      "description": "The locale of the calendar.\nCheck the docs to see the locale of possible modifiers you can pass.",
      "required": false,
      "see": "https://day.js.org/docs/en/i18n/instance-locale"
    },
    "matchWidth": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the popper will match the width of the reference at all times.\nIt's useful for `autocomplete`, `date-picker` and `select` patterns.",
      "required": false
    },
    "maxDate": {
      "type": "Date",
      "description": "The maximum possible date.",
      "required": false
    },
    "maxSelectValues": {
      "type": "number",
      "description": "The maximum selectable value.",
      "required": false
    },
    "minDate": {
      "type": "Date",
      "description": "The minimum possible date.",
      "required": false
    },
    "minSelectValues": {
      "type": "number",
      "description": "The minimum selectable value.",
      "required": false
    },
    "modifiers": {
      "type": "Partial<Modifier<string, any>>[]",
      "description": "Array of popper.js modifiers.\nCheck the docs to see the list of possible modifiers you can pass.",
      "required": false,
      "see": "https://popper.js.org/docs/v2/modifiers/"
    },
    "month": {
      "type": "Date",
      "description": "The month of the calendar.",
      "required": false
    },
    "monthFormat": {
      "type": "string",
      "defaultValue": "'MM'",
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "required": false,
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "offset": {
      "type": "[number, number]",
      "description": "The main and cross-axis offset to displace popper element from its reference element.",
      "required": false
    },
    "onChange": {
      "type": "(\n  value: [(Date | undefined)?, (Date | undefined)?],\n) => void",
      "description": "The callback invoked when value state changes.",
      "required": false
    },
    "onChangeMonth": {
      "type": "(value: Date) => void",
      "description": "The callback invoked when month state changes.",
      "required": false
    },
    "onChangeType": {
      "type": "(\n  type: \"month\" | \"date\" | \"year\",\n  year?: number | undefined,\n  month?: number | undefined,\n) => void",
      "description": "The callback invoked when type state changes.",
      "required": false
    },
    "onClose": {
      "type": "() => void",
      "description": "Callback fired when the popover closes.",
      "required": false
    },
    "onOpen": {
      "type": "() => void",
      "description": "Callback fired when the popover opens.",
      "required": false
    },
    "openDelay": {
      "type": "number",
      "defaultValue": "200",
      "description": "The number of delay time to open.",
      "required": false
    },
    "paginateBy": {
      "type": "number",
      "defaultValue": "1",
      "description": "The number of months to paginate.",
      "required": false
    },
    "parseDate": {
      "type": "(value: string) => Date | undefined",
      "description": "Function that converts the input value to Date type.",
      "required": false
    },
    "pattern": {
      "type": "RegExp",
      "defaultValue": "'/[^0-9\\-\\/]/g'",
      "description": "The pattern used to check the input element.",
      "required": false
    },
    "placement": {
      "type": "UIValue<Placement>",
      "defaultValue": "'bottom'",
      "description": "The placement of the popper relative to its reference.",
      "required": false
    },
    "portalProps": {
      "type": "Omit<PortalProps, \"children\">",
      "defaultValue": "'{ isDisabled: true }'",
      "description": "Props to be forwarded to the portal component.",
      "required": false
    },
    "preventOverflow": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, will prevent the popper from being cut off and ensure it's visible within the boundary area.",
      "required": false
    },
    "separator": {
      "type": "string",
      "defaultValue": "'-'",
      "description": "The visual separator between each value.",
      "required": false
    },
    "size": {
      "type": "\"xs\" | \"sm\" | \"md\" | \"lg\"",
      "defaultValue": "\"md\"",
      "description": "The size of the RangeDatePicker.",
      "required": false
    },
    "startInputProps": {
      "type": "HTMLUIProps<\"input\">",
      "description": "Props for date picker start input element.",
      "required": false
    },
    "startPlaceholder": {
      "type": "string",
      "description": "The start date placeholder",
      "required": false
    },
    "strategy": {
      "type": "\"absolute\" | \"fixed\"",
      "defaultValue": "'absolute'",
      "description": "The CSS positioning strategy to use.",
      "required": false
    },
    "today": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, highlight today.",
      "required": false
    },
    "type": {
      "type": "\"month\" | \"date\" | \"year\"",
      "description": "The type of the calendar.",
      "required": false
    },
    "value": {
      "type": "[(Date | undefined)?, (Date | undefined)?]",
      "description": "The value of the calendar.",
      "required": false
    },
    "variant": {
      "type": "\"filled\" | \"flushed\" | \"outline\" | \"unstyled\"",
      "defaultValue": "\"outline\"",
      "description": "The variant of the RangeDatePicker.",
      "required": false
    },
    "weekdayFormat": {
      "type": "string",
      "defaultValue": "'dd'",
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "required": false,
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "weekendDays": {
      "type": "number[]",
      "defaultValue": "'[0, 6]'",
      "description": "Define weekend days.",
      "required": false
    },
    "withControls": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, display the calendar control buttons.",
      "required": false
    },
    "withHeader": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, display the calendar header.",
      "required": false
    },
    "withLabel": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, display the calendar label button.",
      "required": false
    },
    "withWeekdays": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, display the calendar weekdays.",
      "required": false
    },
    "yearFormat": {
      "type": "string",
      "defaultValue": "'YYYY'",
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "required": false,
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    }
  },
  "YearPicker": {
    "allowInput": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, allows input.",
      "required": false
    },
    "allowInputBeyond": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, allows input of dates beyond the `minDate` and `maxDate` restrictions.",
      "required": false
    },
    "animation": {
      "type": "\"bottom\" | \"left\" | \"right\" | \"scale\" | \"top\" | \"none\"",
      "defaultValue": "'scale'",
      "description": "The animation of the popover.",
      "required": false
    },
    "boundary": {
      "type": "HTMLElement | \"clippingParents\" | \"scrollParent\"",
      "defaultValue": "'clippingParents'",
      "description": "The boundary area for the popper. Used within the `preventOverflow` modifier.",
      "required": false
    },
    "calendarColorScheme": {
      "type": "ThemeColorScheme",
      "description": "ColorScheme for the calendar component.",
      "required": false
    },
    "calendarProps": {
      "type": "CalendarBaseProps",
      "description": "Props for calendar component.",
      "required": false
    },
    "calendarSize": {
      "type": "UIValue<\"lg\" | \"md\" | \"sm\" | ({} & string) | \"full\">",
      "description": "Size for the calendar component.",
      "required": false
    },
    "calendarVariant": {
      "type": "UIValue<({} & string) | \"solid\" | \"subtle\" | \"unstyled\">",
      "description": "Variant for the calendar component.",
      "required": false
    },
    "clearIconProps": {
      "type": "DatePickerIconProps",
      "description": "Props for year picker clear icon element.",
      "required": false
    },
    "closeDelay": {
      "type": "number",
      "defaultValue": "200",
      "description": "The number of delay time to close.",
      "required": false
    },
    "closeOnBlur": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, the popover will close when you blur out it by clicking outside or tabbing out.",
      "required": false
    },
    "closeOnEsc": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, the popover will close when you hit the `Esc` key.",
      "required": false
    },
    "closeOnSelect": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, the calendar component will be closed when value is selected.",
      "required": false
    },
    "colorScheme": {
      "type": "\"blackAlpha\" | \"whiteAlpha\" | \"amber\" | \"blue\" | \"info\" | \"link\" | \"primary\" | \"cyan\" | \"emerald\" | \"flashy\" | \"fuchsia\" | \"gray\" | \"green\" | \"success\" | \"indigo\" | \"lime\" | \"neutral\" | \"orange\" | \"warning\" | \"pink\" | \"purple\" | \"red\" | \"danger\" | \"rose\" | \"sky\" | \"teal\" | \"violet\" | \"secondary\" | \"yellow\"",
      "description": "The visual color appearance of the component.",
      "required": false
    },
    "containerProps": {
      "type": "Omit<HTMLUIProps, \"children\">",
      "description": "Props for year picker container element.",
      "required": false
    },
    "contentProps": {
      "type": "Omit<MotionProps, \"children\">",
      "description": "Props for year picker container element.",
      "required": false
    },
    "defaultIsOpen": {
      "type": "boolean",
      "description": "If `true`, the popover will be initially opened.",
      "required": false
    },
    "defaultValue": {
      "type": "Date",
      "description": "The initial value of the calendar.",
      "required": false
    },
    "duration": {
      "type": "number | MotionLifecycleProps<number>",
      "description": "The animation duration.",
      "required": false
    },
    "errorBorderColor": {
      "type": "string",
      "description": "The border color when the input is invalid.",
      "required": false
    },
    "eventListeners": {
      "type": "type ONLY_FOR_FORMAT =\n  | boolean\n  | { resize?: boolean | undefined; scroll?: boolean | undefined }",
      "defaultValue": true,
      "description": "If provided, determines whether the popper will reposition itself on `scroll`  and `resize` of the window.",
      "required": false
    },
    "fieldProps": {
      "type": "Omit<DatePickerFieldProps, \"children\" | \"inputProps\">",
      "description": "Props for year picker field element.",
      "required": false
    },
    "flip": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, the popper will change its placement and flip when it's about to overflow its boundary area.",
      "required": false
    },
    "focusBorderColor": {
      "type": "string",
      "description": "The border color when the input is focused.",
      "required": false
    },
    "gutter": {
      "type": "UIValue<number>",
      "defaultValue": "8",
      "description": "The distance or margin between the reference and popper.\nIt is used internally to create an `offset` modifier.",
      "required": false
    },
    "iconProps": {
      "type": "DatePickerIconProps",
      "description": "Props for year picker icon element.",
      "required": false
    },
    "inputFormat": {
      "type": "string",
      "defaultValue": "'YYYY/MM/DD'",
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "required": false,
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "inputProps": {
      "type": "UIProps &\n  Omit<HTMLProps<\"input\">, keyof UIProps> &\n  RefAttributes<HTMLInputElement>",
      "description": "Props for year picker input element.",
      "required": false
    },
    "isClearable": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, display the year picker clear icon.",
      "required": false
    },
    "isDisabled": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the form control will be disabled.",
      "required": false
    },
    "isInvalid": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the form control will be invalid.",
      "required": false
    },
    "isLazy": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the PopoverContent rendering will be deferred until the popover is open.",
      "required": false
    },
    "isOpen": {
      "type": "boolean",
      "description": "If `true`, the popover will be opened.",
      "required": false
    },
    "isReadOnly": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the form control will be readonly.",
      "required": false
    },
    "isRequired": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the form control will be required.",
      "required": false
    },
    "lazyBehavior": {
      "type": "LazyMode",
      "defaultValue": "'unmount'",
      "description": "The lazy behavior of popover's content when not visible. Only works when `isLazy={true}`\n\n- `unmount`: The popover's content is always unmounted when not open.\n- `keepMounted`: The popover's content initially unmounted, but stays mounted when popover is open.",
      "required": false
    },
    "locale": {
      "type": "string",
      "defaultValue": "'en'",
      "description": "The locale of the calendar.\nCheck the docs to see the locale of possible modifiers you can pass.",
      "required": false,
      "see": "https://day.js.org/docs/en/i18n/instance-locale"
    },
    "matchWidth": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, the popper will match the width of the reference at all times.\nIt's useful for `autocomplete`, `date-picker` and `select` patterns.",
      "required": false
    },
    "maxDate": {
      "type": "Date",
      "description": "The maximum possible date.",
      "required": false
    },
    "minDate": {
      "type": "Date",
      "description": "The minimum possible date.",
      "required": false
    },
    "modifiers": {
      "type": "Partial<Modifier<string, any>>[]",
      "description": "Array of popper.js modifiers.\nCheck the docs to see the list of possible modifiers you can pass.",
      "required": false,
      "see": "https://popper.js.org/docs/v2/modifiers/"
    },
    "offset": {
      "type": "[number, number]",
      "description": "The main and cross-axis offset to displace popper element from its reference element.",
      "required": false
    },
    "onChange": {
      "type": "(value: Date | undefined) => void",
      "description": "The callback invoked when value state changes.",
      "required": false
    },
    "onClose": {
      "type": "() => void",
      "description": "Callback fired when the popover closes.",
      "required": false
    },
    "onOpen": {
      "type": "() => void",
      "description": "Callback fired when the popover opens.",
      "required": false
    },
    "openDelay": {
      "type": "number",
      "defaultValue": "200",
      "description": "The number of delay time to open.",
      "required": false
    },
    "parseDate": {
      "type": "(value: string) => Date | undefined",
      "description": "Function that converts the input value to Date type.",
      "required": false
    },
    "pattern": {
      "type": "RegExp",
      "defaultValue": "'/[^0-9\\-\\/]/g'",
      "description": "The pattern used to check the input element.",
      "required": false
    },
    "placement": {
      "type": "UIValue<Placement>",
      "defaultValue": "'bottom'",
      "description": "The placement of the popper relative to its reference.",
      "required": false
    },
    "portalProps": {
      "type": "Omit<PortalProps, \"children\">",
      "defaultValue": "'{ isDisabled: true }'",
      "description": "Props to be forwarded to the portal component.",
      "required": false
    },
    "preventOverflow": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, will prevent the popper from being cut off and ensure it's visible within the boundary area.",
      "required": false
    },
    "size": {
      "type": "\"xs\" | \"sm\" | \"md\" | \"lg\"",
      "defaultValue": "\"md\"",
      "description": "The size of the YearPicker.",
      "required": false
    },
    "strategy": {
      "type": "\"absolute\" | \"fixed\"",
      "defaultValue": "'absolute'",
      "description": "The CSS positioning strategy to use.",
      "required": false
    },
    "value": {
      "type": "Date",
      "description": "The value of the calendar.",
      "required": false
    },
    "variant": {
      "type": "\"filled\" | \"flushed\" | \"outline\" | \"unstyled\"",
      "defaultValue": "\"outline\"",
      "description": "The variant of the YearPicker.",
      "required": false
    },
    "withControls": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, display the calendar control buttons.",
      "required": false
    },
    "withHeader": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, display the calendar header.",
      "required": false
    },
    "withLabel": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, display the calendar label button.",
      "required": false
    },
    "yearFormat": {
      "type": "string",
      "defaultValue": "'YYYY'",
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "required": false,
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    }
  }
}
