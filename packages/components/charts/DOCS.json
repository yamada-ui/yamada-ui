{
  "AreaChart": {
    "data": {
      "type": "Dict<any>[]",
      "description": "Chart data.",
      "required": true
    },
    "dataKey": {
      "type": "string",
      "description": "The key of a group of data which should be unique in an chart.",
      "required": true
    },
    "series": {
      "type": "AreaProps[]",
      "description": "An array of objects with `dataKey` and `color` keys. Determines which data should be consumed from the `data` array.",
      "required": true
    },
    "areaProps": {
      "type": "Partial<AreaProps>",
      "description": "Props for the areas.",
      "required": false
    },
    "chartProps": {
      "type": "AreaChartProps",
      "description": "Props passed down to recharts `AreaChart` component.",
      "required": false
    },
    "colorScheme": {
      "type": "\"blackAlpha\" | \"whiteAlpha\" | \"amber\" | \"blue\" | \"info\" | \"link\" | \"primary\" | \"cyan\" | \"emerald\" | \"flashy\" | \"fuchsia\" | \"gray\" | \"green\" | \"success\" | \"indigo\" | \"lime\" | \"neutral\" | \"orange\" | \"warning\" | \"pink\" | \"purple\" | \"red\" | \"danger\" | \"rose\" | \"sky\" | \"teal\" | \"violet\" | \"secondary\" | \"yellow\"",
      "description": "The visual color appearance of the component.",
      "required": false
    },
    "connectNulls": {
      "type": "boolean",
      "defaultValue": true,
      "description": "Determines whether points with `null` values should be connected.",
      "required": false
    },
    "containerProps": {
      "type": "ResponsiveContainerProps",
      "description": "Props passed down to recharts `ResponsiveContainer` component.",
      "required": false
    },
    "curveType": {
      "type": "ChartCurveType",
      "defaultValue": "`monotone`",
      "description": "Type of the curve.",
      "required": false
    },
    "fillOpacity": {
      "type": "number | [number, number]",
      "defaultValue": "0.4",
      "description": "Controls fill opacity of all areas.",
      "required": false
    },
    "gridAxis": {
      "type": "ChartAxisType",
      "defaultValue": "'x'",
      "description": "Specifies which lines should be displayed in the grid.",
      "required": false
    },
    "gridProps": {
      "type": "GridProps",
      "description": "Props passed down to recharts 'CartesianGrid' component.",
      "required": false
    },
    "labelFormatter": {
      "type": "(label: string) => string",
      "description": "A function to format labels on inside the tooltip.",
      "required": false
    },
    "layoutType": {
      "type": "ChartLayoutType",
      "defaultValue": "'horizontal'",
      "description": "Chart orientation.",
      "required": false
    },
    "legendProps": {
      "type": "LegendProps",
      "description": "Props passed down to recharts 'Legend' component.",
      "required": false
    },
    "referenceLineProps": {
      "type": "ReferenceLineProps[]",
      "description": "Reference lines that should be displayed on the chart.",
      "required": false
    },
    "size": {
      "type": "\"sm\" | \"md\" | \"lg\" | \"full\"",
      "defaultValue": "\"full\"",
      "description": "The size of the AreaChart.",
      "required": false
    },
    "splitColors": {
      "type": "[string, string]",
      "defaultValue": "'[\"red.400\", \"green.400\"]'",
      "description": "A tuple of colors used when `type=\"split\"` is set, ignored in all other cases.",
      "required": false
    },
    "splitOffset": {
      "type": "number",
      "description": "Offset for the split gradient. By default, value is inferred from `data` and `series` if possible.\nMust be generated from the data array with `getSplitOffset` function.",
      "required": false
    },
    "strokeDasharray": {
      "type": "string | number",
      "defaultValue": "'5 5'",
      "description": "Dash array for the grid lines and cursor. The first number is the length of the solid line section and the second number is the length of the interval.",
      "required": false
    },
    "strokeWidth": {
      "type": "number",
      "defaultValue": "2",
      "description": "Stroke width for the chart areas.",
      "required": false
    },
    "syncId": {
      "type": "string | number",
      "description": "If any two categorical charts have the same syncId,\nthese two charts can sync the position tooltip, and the startIndex, endIndex of Brush.",
      "required": false
    },
    "tickLine": {
      "type": "ChartAxisType",
      "defaultValue": "'y'",
      "description": "The option is the configuration of tick lines.",
      "required": false
    },
    "tooltipAnimationDuration": {
      "type": "number",
      "defaultValue": "0",
      "description": "Specifies the duration of animation, the unit of this option is ms.",
      "required": false
    },
    "tooltipProps": {
      "type": "TooltipProps",
      "description": "Props passed down to recharts 'Tooltip' component.",
      "required": false
    },
    "type": {
      "type": "AreaChartType",
      "defaultValue": "`default`",
      "description": "Controls how chart areas are positioned relative to each other.",
      "required": false
    },
    "unit": {
      "type": "string",
      "description": "Unit displayed next to each tick in y-axis.",
      "required": false
    },
    "valueFormatter": {
      "type": "(value: any) => string",
      "description": "A function to format values on inside the tooltip.",
      "required": false
    },
    "variant": {
      "type": "string",
      "description": "The variant of the AreaChart.",
      "required": false
    },
    "withActiveDots": {
      "type": "boolean",
      "defaultValue": true,
      "description": "Determines whether activeDots should be displayed.",
      "required": false
    },
    "withDots": {
      "type": "boolean",
      "defaultValue": true,
      "description": "Determines whether dots should be displayed.",
      "required": false
    },
    "withGradient": {
      "type": "boolean",
      "description": "Determines whether the chart area should be represented with a gradient instead of the solid color.",
      "required": false
    },
    "withLegend": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, legend is visible.",
      "required": false
    },
    "withTooltip": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, tooltip is visible.",
      "required": false
    },
    "withXAxis": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, X axis is visible.",
      "required": false
    },
    "withYAxis": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, Y axis is visible.",
      "required": false
    },
    "xAxisLabel": {
      "type": "string",
      "description": "A label to display below the X axis.",
      "required": false
    },
    "xAxisLabelProps": {
      "type": "LabelProps",
      "description": "Props passed down to recharts 'XAxisLabel' component.",
      "required": false
    },
    "xAxisProps": {
      "type": "XAxisProps",
      "description": "Props passed down to recharts 'XAxis' component.",
      "required": false
    },
    "xAxisTickFormatter": {
      "type": "(value: any) => string",
      "description": "A function to format X axis tick.",
      "required": false
    },
    "yAxisLabel": {
      "type": "string",
      "description": "A label to display below the Y axis.",
      "required": false
    },
    "yAxisLabelProps": {
      "type": "LabelProps",
      "description": "Props passed down to recharts 'YAxisLabel' component.",
      "required": false
    },
    "yAxisProps": {
      "type": "YAxisProps",
      "description": "Props passed down to recharts 'YAxis' component.",
      "required": false
    },
    "yAxisTickFormatter": {
      "type": "(value: any) => string",
      "description": "A function to format Y axis tick.",
      "required": false
    }
  },
  "BarChart": {
    "data": {
      "type": "Dict<any>[]",
      "description": "Chart data.",
      "required": true
    },
    "dataKey": {
      "type": "string",
      "description": "The key of a group of data which should be unique in an chart.",
      "required": true
    },
    "series": {
      "type": "BarProps[]",
      "description": "An array of objects with `name` and `color` keys. Determines which data should be consumed from the `data` array.",
      "required": true
    },
    "barProps": {
      "type": "Partial<BarProps>",
      "description": "Props for the bars.",
      "required": false
    },
    "cell": {
      "type": "string | number | boolean | ReactElement<any, string | JSXElementConstructor<any>> | Iterable<ReactNode> | ReactPortal | FC<...>",
      "description": "A function that returns a component that renders the bar cells.",
      "required": false
    },
    "chartProps": {
      "type": "BarChartProps",
      "description": "Props passed down to recharts `BarChart` component.",
      "required": false
    },
    "colorScheme": {
      "type": "\"blackAlpha\" | \"whiteAlpha\" | \"amber\" | \"blue\" | \"info\" | \"link\" | \"primary\" | \"cyan\" | \"emerald\" | \"flashy\" | \"fuchsia\" | \"gray\" | \"green\" | \"success\" | \"indigo\" | \"lime\" | \"neutral\" | \"orange\" | \"warning\" | \"pink\" | \"purple\" | \"red\" | \"danger\" | \"rose\" | \"sky\" | \"teal\" | \"violet\" | \"secondary\" | \"yellow\"",
      "description": "The visual color appearance of the component.",
      "required": false
    },
    "containerProps": {
      "type": "ResponsiveContainerProps",
      "description": "Props passed down to recharts `ResponsiveContainer` component.",
      "required": false
    },
    "gridAxis": {
      "type": "ChartAxisType",
      "defaultValue": "'x'",
      "description": "Specifies which lines should be displayed in the grid.",
      "required": false
    },
    "gridProps": {
      "type": "GridProps",
      "description": "Props passed down to recharts 'CartesianGrid' component.",
      "required": false
    },
    "labelFormatter": {
      "type": "(label: string) => string",
      "description": "A function to format labels on inside the tooltip.",
      "required": false
    },
    "layoutType": {
      "type": "ChartLayoutType",
      "defaultValue": "'horizontal'",
      "description": "Chart orientation.",
      "required": false
    },
    "legendProps": {
      "type": "LegendProps",
      "description": "Props passed down to recharts 'Legend' component.",
      "required": false
    },
    "referenceLineProps": {
      "type": "ReferenceLineProps[]",
      "description": "Reference lines that should be displayed on the chart.",
      "required": false
    },
    "size": {
      "type": "\"sm\" | \"md\" | \"lg\" | \"full\"",
      "defaultValue": "\"full\"",
      "description": "The size of the BarChart.",
      "required": false
    },
    "syncId": {
      "type": "string | number",
      "description": "If any two categorical charts have the same syncId,\nthese two charts can sync the position tooltip, and the startIndex, endIndex of Brush.",
      "required": false
    },
    "tickLine": {
      "type": "ChartAxisType",
      "defaultValue": "'y'",
      "description": "The option is the configuration of tick lines.",
      "required": false
    },
    "tooltipAnimationDuration": {
      "type": "number",
      "defaultValue": "0",
      "description": "Specifies the duration of animation, the unit of this option is ms.",
      "required": false
    },
    "tooltipProps": {
      "type": "TooltipProps",
      "description": "Props passed down to recharts 'Tooltip' component.",
      "required": false
    },
    "type": {
      "type": "\"default\" | \"percent\" | \"stacked\"",
      "defaultValue": "`default`",
      "description": "Controls how chart bars are positioned relative to each other.\n\n\nControls how chart areas are positioned relative to each other",
      "required": false
    },
    "unit": {
      "type": "string",
      "description": "Unit displayed next to each tick in y-axis.",
      "required": false
    },
    "valueFormatter": {
      "type": "(value: any) => string",
      "description": "A function to format values on inside the tooltip.",
      "required": false
    },
    "variant": {
      "type": "string",
      "description": "The variant of the BarChart.",
      "required": false
    },
    "withLegend": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, legend is visible.",
      "required": false
    },
    "withTooltip": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, tooltip is visible.",
      "required": false
    },
    "withXAxis": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, X axis is visible.",
      "required": false
    },
    "withYAxis": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, Y axis is visible.",
      "required": false
    },
    "xAxisLabel": {
      "type": "string",
      "description": "A label to display below the X axis.",
      "required": false
    },
    "xAxisLabelProps": {
      "type": "LabelProps",
      "description": "Props passed down to recharts 'XAxisLabel' component.",
      "required": false
    },
    "xAxisProps": {
      "type": "XAxisProps",
      "description": "Props passed down to recharts 'XAxis' component.",
      "required": false
    },
    "xAxisTickFormatter": {
      "type": "(value: any) => string",
      "description": "A function to format X axis tick.",
      "required": false
    },
    "yAxisLabel": {
      "type": "string",
      "description": "A label to display below the Y axis.",
      "required": false
    },
    "yAxisLabelProps": {
      "type": "LabelProps",
      "description": "Props passed down to recharts 'YAxisLabel' component.",
      "required": false
    },
    "yAxisProps": {
      "type": "YAxisProps",
      "description": "Props passed down to recharts 'YAxis' component.",
      "required": false
    },
    "yAxisTickFormatter": {
      "type": "(value: any) => string",
      "description": "A function to format Y axis tick.",
      "required": false
    }
  },
  "Area": {
    "activeDot": { "type": "DotProps", "required": false },
    "color": {
      "type": "UIValue<\"border\" | ({} & string) | Color | \"amber.50\" | \"amber.100\" | \"amber.200\" | \"amber.300\" | \"amber.400\" | \"amber.500\" | \"amber.600\" | \"amber.700\" | \"amber.800\" | \"amber.900\" | ... 318 more ... | \"yellow.950\">",
      "required": false
    },
    "dimArea": { "type": "Partial<AreaProps>", "required": false },
    "dimDot": { "type": "DotProps", "required": false },
    "dot": { "type": "DotProps", "required": false }
  },
  "Bar": {
    "activeBar": {
      "type": "Merge<SVGProps<SVGPathElement>, CSSUIProps>",
      "required": false
    },
    "background": {
      "type": "Merge<SVGProps<SVGPathElement>, CSSUIProps>",
      "required": false
    },
    "color": {
      "type": "UIValue<\"border\" | ({} & string) | Color | \"amber.50\" | \"amber.100\" | \"amber.200\" | \"amber.300\" | \"amber.400\" | \"amber.500\" | \"amber.600\" | \"amber.700\" | \"amber.800\" | \"amber.900\" | ... 318 more ... | \"yellow.950\">",
      "required": false
    },
    "dimBar": { "type": "Partial<BarProps>", "required": false }
  },
  "Cell": {
    "name": { "type": "string", "required": true },
    "value": { "type": "number", "required": true },
    "dimCell": { "type": "Partial<CellProps>", "required": false }
  },
  "ChartLabel": {},
  "ChartTooltip": {
    "dataKey": { "type": "string", "required": false },
    "isRadialChart": { "type": "boolean", "required": false },
    "label": { "type": "string", "required": false },
    "labelFormatter": {
      "type": "(label: string) => string",
      "required": false
    },
    "payload": { "type": "Dict<any>[]", "required": false },
    "unit": { "type": "string", "required": false },
    "valueFormatter": { "type": "(value: any) => string", "required": false }
  },
  "Dot": {},
  "Line": {
    "activeDot": { "type": "DotProps", "required": false },
    "color": {
      "type": "UIValue<\"border\" | ({} & string) | Color | \"amber.50\" | \"amber.100\" | \"amber.200\" | \"amber.300\" | \"amber.400\" | \"amber.500\" | \"amber.600\" | \"amber.700\" | \"amber.800\" | \"amber.900\" | ... 318 more ... | \"yellow.950\">",
      "required": false
    },
    "dimDot": { "type": "DotProps", "required": false },
    "dimLine": { "type": "Partial<LineProps>", "required": false },
    "dot": { "type": "DotProps", "required": false }
  },
  "Radar": {
    "activeDot": { "type": "DotProps", "required": false },
    "color": {
      "type": "UIValue<\"border\" | ({} & string) | Color | \"amber.50\" | \"amber.100\" | \"amber.200\" | \"amber.300\" | \"amber.400\" | \"amber.500\" | \"amber.600\" | \"amber.700\" | \"amber.800\" | \"amber.900\" | ... 318 more ... | \"yellow.950\">",
      "required": false
    },
    "dimDot": { "type": "DotProps", "required": false },
    "dimRadar": { "type": "Partial<RadarProps>", "required": false },
    "dot": { "type": "DotProps", "required": false }
  },
  "DonutChart": {
    "data": {
      "type": "CellProps[]",
      "description": "Chart data.",
      "required": true
    },
    "cellProps": {
      "type": "Partial<CellProps>",
      "description": "Props for the cell.",
      "required": false
    },
    "chartProps": {
      "type": "PieChartProps",
      "description": "Props passed down to recharts `PieChart` component.",
      "required": false
    },
    "colorScheme": {
      "type": "\"blackAlpha\" | \"whiteAlpha\" | \"amber\" | \"blue\" | \"info\" | \"link\" | \"primary\" | \"cyan\" | \"emerald\" | \"flashy\" | \"fuchsia\" | \"gray\" | \"green\" | \"success\" | \"indigo\" | \"lime\" | \"neutral\" | \"orange\" | \"warning\" | \"pink\" | \"purple\" | \"red\" | \"danger\" | \"rose\" | \"sky\" | \"teal\" | \"violet\" | \"secondary\" | \"yellow\"",
      "description": "The visual color appearance of the component.",
      "required": false
    },
    "containerProps": {
      "type": "ResponsiveContainerProps",
      "description": "Props passed down to recharts `ResponsiveContainer` component.",
      "required": false
    },
    "endAngle": {
      "type": "number",
      "defaultValue": "-270",
      "description": "Controls angle at which chart ends.",
      "required": false
    },
    "fillOpacity": {
      "type": "number | [number, number]",
      "defaultValue": "1",
      "description": "Controls fill opacity of all pies.",
      "required": false
    },
    "innerRadius": {
      "type": "string | number",
      "defaultValue": "'0%'",
      "description": "Controls innerRadius of the chart segments.\nIf it is a number, it is the width of the radius.\nFor example, `60` means the radius is `60px` and the diameter is `120px`.",
      "required": false
    },
    "isPercent": {
      "type": "boolean",
      "defaultValue": false,
      "description": "Determines whether labels should be displayed as percentages.",
      "required": false
    },
    "labelFormatter": {
      "type": "(value: number) => string",
      "description": "A function to format labels.",
      "required": false
    },
    "labelOffset": {
      "type": "number",
      "description": "Distance between chart and label.",
      "required": false
    },
    "labelProps": {
      "type": "LabelProps",
      "description": "Props passed down to recharts 'Label' component.",
      "required": false
    },
    "legendProps": {
      "type": "LegendProps",
      "description": "Props passed down to recharts 'Legend' component.",
      "required": false
    },
    "outerRadius": {
      "type": "string | number",
      "defaultValue": "'80%'",
      "description": "Controls thickness of the chart segments. If it is a number, it is calculated as px.\nIf it is a number, it is the width of the radius.\nFor example, `60` means the radius is `60px` and the diameter is `120px`.",
      "required": false
    },
    "paddingAngle": {
      "type": "number",
      "defaultValue": "0",
      "description": "Controls padding between segments.",
      "required": false
    },
    "pieProps": {
      "type": "Partial<PieProps>",
      "description": "Props for the pie.",
      "required": false
    },
    "size": {
      "type": "\"sm\" | \"md\" | \"lg\"",
      "defaultValue": "\"md\"",
      "description": "The size of the DonutChart.",
      "required": false
    },
    "startAngle": {
      "type": "number",
      "defaultValue": "90",
      "description": "Controls angle at which chart starts.",
      "required": false
    },
    "strokeWidth": {
      "type": "number",
      "defaultValue": "1",
      "description": "Stroke width for the chart pies.",
      "required": false
    },
    "tooltipAnimationDuration": {
      "type": "number",
      "defaultValue": "0",
      "description": "Specifies the duration of animation, the unit of this option is ms.",
      "required": false
    },
    "tooltipDataSource": {
      "type": "TooltipDataSourceType",
      "defaultValue": "'all'",
      "description": "Determines which data is displayed in the tooltip.",
      "required": false
    },
    "tooltipProps": {
      "type": "TooltipProps",
      "description": "Props passed down to recharts 'Tooltip' component.",
      "required": false
    },
    "unit": {
      "type": "string",
      "description": "Unit displayed next to each value in tooltip.",
      "required": false
    },
    "valueFormatter": {
      "type": "(value: any) => string",
      "description": "A function to format values on inside the tooltip.",
      "required": false
    },
    "variant": {
      "type": "string",
      "description": "The variant of the DonutChart.",
      "required": false
    },
    "withLabelLines": {
      "type": "boolean",
      "defaultValue": false,
      "description": "Determines whether segments labels should have lines that connect the segment with the label.",
      "required": false
    },
    "withLabels": {
      "type": "boolean",
      "defaultValue": false,
      "description": "Determines whether each segment should have associated label.",
      "required": false
    },
    "withLegend": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, legend is visible.",
      "required": false
    },
    "withTooltip": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, tooltip is visible.",
      "required": false
    }
  },
  "LineChart": {
    "data": {
      "type": "Dict<any>[]",
      "description": "Chart data.",
      "required": true
    },
    "dataKey": {
      "type": "string",
      "description": "The key of a group of data which should be unique in an chart.",
      "required": true
    },
    "series": {
      "type": "LineProps[]",
      "description": "An array of objects with `dataKey` and `color` keys. Determines which data should be consumed from the `data` array.",
      "required": true
    },
    "chartProps": {
      "type": "LineChartProps",
      "description": "Props passed down to recharts `LineChart` component.",
      "required": false
    },
    "colorScheme": {
      "type": "\"blackAlpha\" | \"whiteAlpha\" | \"amber\" | \"blue\" | \"info\" | \"link\" | \"primary\" | \"cyan\" | \"emerald\" | \"flashy\" | \"fuchsia\" | \"gray\" | \"green\" | \"success\" | \"indigo\" | \"lime\" | \"neutral\" | \"orange\" | \"warning\" | \"pink\" | \"purple\" | \"red\" | \"danger\" | \"rose\" | \"sky\" | \"teal\" | \"violet\" | \"secondary\" | \"yellow\"",
      "description": "The visual color appearance of the component.",
      "required": false
    },
    "connectNulls": {
      "type": "boolean",
      "defaultValue": true,
      "description": "Determines whether points with `null` values should be connected.",
      "required": false
    },
    "containerProps": {
      "type": "ResponsiveContainerProps",
      "description": "Props passed down to recharts `ResponsiveContainer` component.",
      "required": false
    },
    "curveType": {
      "type": "ChartCurveType",
      "defaultValue": "`monotone`",
      "description": "Type of the curve.",
      "required": false
    },
    "fillOpacity": {
      "type": "number | [number, number]",
      "defaultValue": "1",
      "description": "Controls fill opacity of all lines.",
      "required": false
    },
    "gridAxis": {
      "type": "ChartAxisType",
      "defaultValue": "'x'",
      "description": "Specifies which lines should be displayed in the grid.",
      "required": false
    },
    "gridProps": {
      "type": "GridProps",
      "description": "Props passed down to recharts 'CartesianGrid' component.",
      "required": false
    },
    "labelFormatter": {
      "type": "(label: string) => string",
      "description": "A function to format labels on inside the tooltip.",
      "required": false
    },
    "layoutType": {
      "type": "ChartLayoutType",
      "defaultValue": "'horizontal'",
      "description": "Chart orientation.",
      "required": false
    },
    "legendProps": {
      "type": "LegendProps",
      "description": "Props passed down to recharts 'Legend' component.",
      "required": false
    },
    "lineProps": {
      "type": "Partial<LineProps>",
      "description": "Props for the lines.",
      "required": false
    },
    "referenceLineProps": {
      "type": "ReferenceLineProps[]",
      "description": "Reference lines that should be displayed on the chart.",
      "required": false
    },
    "size": {
      "type": "\"sm\" | \"md\" | \"lg\" | \"full\"",
      "defaultValue": "\"full\"",
      "description": "The size of the LineChart.",
      "required": false
    },
    "strokeDasharray": {
      "type": "string | number",
      "defaultValue": "'5 5'",
      "description": "Dash array for the grid lines and cursor. The first number is the length of the solid line section and the second number is the length of the interval.",
      "required": false
    },
    "strokeWidth": {
      "type": "number",
      "defaultValue": "2",
      "description": "Stroke width for the chart lines.",
      "required": false
    },
    "syncId": {
      "type": "string | number",
      "description": "If any two categorical charts have the same syncId,\nthese two charts can sync the position tooltip, and the startIndex, endIndex of Brush.",
      "required": false
    },
    "tickLine": {
      "type": "ChartAxisType",
      "defaultValue": "'y'",
      "description": "The option is the configuration of tick lines.",
      "required": false
    },
    "tooltipAnimationDuration": {
      "type": "number",
      "defaultValue": "0",
      "description": "Specifies the duration of animation, the unit of this option is ms.",
      "required": false
    },
    "tooltipProps": {
      "type": "TooltipProps",
      "description": "Props passed down to recharts 'Tooltip' component.",
      "required": false
    },
    "type": {
      "type": "AreaChartType",
      "defaultValue": "`default`",
      "description": "Controls how chart areas are positioned relative to each other",
      "required": false
    },
    "unit": {
      "type": "string",
      "description": "Unit displayed next to each tick in y-axis.",
      "required": false
    },
    "valueFormatter": {
      "type": "(value: any) => string",
      "description": "A function to format values on inside the tooltip.",
      "required": false
    },
    "variant": {
      "type": "string",
      "description": "The variant of the LineChart.",
      "required": false
    },
    "withActiveDots": {
      "type": "boolean",
      "defaultValue": true,
      "description": "Determines whether activeDots should be displayed.",
      "required": false
    },
    "withDots": {
      "type": "boolean",
      "defaultValue": true,
      "description": "Determines whether dots should be displayed.",
      "required": false
    },
    "withLegend": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, legend is visible.",
      "required": false
    },
    "withTooltip": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, tooltip is visible.",
      "required": false
    },
    "withXAxis": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, X axis is visible.",
      "required": false
    },
    "withYAxis": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, Y axis is visible.",
      "required": false
    },
    "xAxisLabel": {
      "type": "string",
      "description": "A label to display below the X axis.",
      "required": false
    },
    "xAxisLabelProps": {
      "type": "LabelProps",
      "description": "Props passed down to recharts 'XAxisLabel' component.",
      "required": false
    },
    "xAxisProps": {
      "type": "XAxisProps",
      "description": "Props passed down to recharts 'XAxis' component.",
      "required": false
    },
    "xAxisTickFormatter": {
      "type": "(value: any) => string",
      "description": "A function to format X axis tick.",
      "required": false
    },
    "yAxisLabel": {
      "type": "string",
      "description": "A label to display below the Y axis.",
      "required": false
    },
    "yAxisLabelProps": {
      "type": "LabelProps",
      "description": "Props passed down to recharts 'YAxisLabel' component.",
      "required": false
    },
    "yAxisProps": {
      "type": "YAxisProps",
      "description": "Props passed down to recharts 'YAxis' component.",
      "required": false
    },
    "yAxisTickFormatter": {
      "type": "(value: any) => string",
      "description": "A function to format Y axis tick.",
      "required": false
    }
  },
  "PieChart": {
    "data": {
      "type": "CellProps[]",
      "description": "Chart data.",
      "required": true
    },
    "cellProps": {
      "type": "Partial<CellProps>",
      "description": "Props for the cell.",
      "required": false
    },
    "chartProps": {
      "type": "PieChartProps",
      "description": "Props passed down to recharts `PieChart` component.",
      "required": false
    },
    "colorScheme": {
      "type": "\"blackAlpha\" | \"whiteAlpha\" | \"amber\" | \"blue\" | \"info\" | \"link\" | \"primary\" | \"cyan\" | \"emerald\" | \"flashy\" | \"fuchsia\" | \"gray\" | \"green\" | \"success\" | \"indigo\" | \"lime\" | \"neutral\" | \"orange\" | \"warning\" | \"pink\" | \"purple\" | \"red\" | \"danger\" | \"rose\" | \"sky\" | \"teal\" | \"violet\" | \"secondary\" | \"yellow\"",
      "description": "The visual color appearance of the component.",
      "required": false
    },
    "containerProps": {
      "type": "ResponsiveContainerProps",
      "description": "Props passed down to recharts `ResponsiveContainer` component.",
      "required": false
    },
    "endAngle": {
      "type": "number",
      "defaultValue": "-270",
      "description": "Controls angle at which chart ends.",
      "required": false
    },
    "fillOpacity": {
      "type": "number | [number, number]",
      "defaultValue": "1",
      "description": "Controls fill opacity of all pies.",
      "required": false
    },
    "innerRadius": {
      "type": "string | number",
      "defaultValue": "'0%'",
      "description": "Controls innerRadius of the chart segments.\nIf it is a number, it is the width of the radius.\nFor example, `60` means the radius is `60px` and the diameter is `120px`.",
      "required": false
    },
    "isPercent": {
      "type": "boolean",
      "defaultValue": false,
      "description": "Determines whether labels should be displayed as percentages.",
      "required": false
    },
    "labelFormatter": {
      "type": "(value: number) => string",
      "description": "A function to format labels.",
      "required": false
    },
    "labelOffset": {
      "type": "number",
      "description": "Distance between chart and label.",
      "required": false
    },
    "legendProps": {
      "type": "LegendProps",
      "description": "Props passed down to recharts 'Legend' component.",
      "required": false
    },
    "outerRadius": {
      "type": "string | number",
      "defaultValue": "'80%'",
      "description": "Controls thickness of the chart segments. If it is a number, it is calculated as px.\nIf it is a number, it is the width of the radius.\nFor example, `60` means the radius is `60px` and the diameter is `120px`.",
      "required": false
    },
    "paddingAngle": {
      "type": "number",
      "defaultValue": "0",
      "description": "Controls padding between segments.",
      "required": false
    },
    "pieProps": {
      "type": "Partial<PieProps>",
      "description": "Props for the pie.",
      "required": false
    },
    "size": {
      "type": "\"sm\" | \"md\" | \"lg\"",
      "defaultValue": "\"md\"",
      "description": "The size of the PieChart.",
      "required": false
    },
    "startAngle": {
      "type": "number",
      "defaultValue": "90",
      "description": "Controls angle at which chart starts.",
      "required": false
    },
    "strokeWidth": {
      "type": "number",
      "defaultValue": "1",
      "description": "Stroke width for the chart pies.",
      "required": false
    },
    "tooltipAnimationDuration": {
      "type": "number",
      "defaultValue": "0",
      "description": "Specifies the duration of animation, the unit of this option is ms.",
      "required": false
    },
    "tooltipDataSource": {
      "type": "TooltipDataSourceType",
      "defaultValue": "'all'",
      "description": "Determines which data is displayed in the tooltip.",
      "required": false
    },
    "tooltipProps": {
      "type": "TooltipProps",
      "description": "Props passed down to recharts 'Tooltip' component.",
      "required": false
    },
    "unit": {
      "type": "string",
      "description": "Unit displayed next to each value in tooltip.",
      "required": false
    },
    "valueFormatter": {
      "type": "(value: any) => string",
      "description": "A function to format values on inside the tooltip.",
      "required": false
    },
    "variant": {
      "type": "string",
      "description": "The variant of the PieChart.",
      "required": false
    },
    "withLabelLines": {
      "type": "boolean",
      "defaultValue": false,
      "description": "Determines whether segments labels should have lines that connect the segment with the label.",
      "required": false
    },
    "withLabels": {
      "type": "boolean",
      "defaultValue": false,
      "description": "Determines whether each segment should have associated label.",
      "required": false
    },
    "withLegend": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, legend is visible.",
      "required": false
    },
    "withTooltip": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, tooltip is visible.",
      "required": false
    }
  },
  "RadarChart": {
    "data": {
      "type": "Dict<any>[]",
      "description": "Chart data.",
      "required": true
    },
    "dataKey": {
      "type": "string",
      "description": "The key of a group of data which should be unique in an chart.",
      "required": true
    },
    "series": {
      "type": "RadarProps[]",
      "description": "An array of objects with `dataKey` and `color` keys. Determines which data should be consumed from the `data` array.",
      "required": true
    },
    "chartProps": {
      "type": "RadarChartProps",
      "description": "Props passed down to recharts `RadarChart` component.",
      "required": false
    },
    "colorScheme": {
      "type": "\"blackAlpha\" | \"whiteAlpha\" | \"amber\" | \"blue\" | \"info\" | \"link\" | \"primary\" | \"cyan\" | \"emerald\" | \"flashy\" | \"fuchsia\" | \"gray\" | \"green\" | \"success\" | \"indigo\" | \"lime\" | \"neutral\" | \"orange\" | \"warning\" | \"pink\" | \"purple\" | \"red\" | \"danger\" | \"rose\" | \"sky\" | \"teal\" | \"violet\" | \"secondary\" | \"yellow\"",
      "description": "The visual color appearance of the component.",
      "required": false
    },
    "containerProps": {
      "type": "ResponsiveContainerProps",
      "description": "Props passed down to recharts `ResponsiveContainer` component.",
      "required": false
    },
    "fillOpacity": {
      "type": "number | [number, number]",
      "defaultValue": "1",
      "description": "Controls fill opacity of all radars.",
      "required": false
    },
    "legendProps": {
      "type": "LegendProps",
      "description": "Props passed down to recharts 'Legend' component.",
      "required": false
    },
    "polarAngleAxisProps": {
      "type": "PolarAngleAxisProps",
      "description": "Props passed down to recharts `PolarAngleAxis` component.",
      "required": false
    },
    "polarAngleAxisTickFormatter": {
      "type": "(value: number) => string",
      "description": "A function to format Y axis tick.",
      "required": false
    },
    "polarAngleAxisTickProps": {
      "type": "CSSUIProps",
      "description": "Props passed down to recharts `tick` of `PolarAngleAxis` component.",
      "required": false
    },
    "polarGridProps": {
      "type": "PolarGridProps",
      "description": "Props passed down to recharts `PolarGrid` component.",
      "required": false
    },
    "polarRadiusAxisProps": {
      "type": "PolarRadiusAxisProps",
      "description": "Props passed down to recharts `PolarRadiusAxis` component.",
      "required": false
    },
    "polarRadiusAxisTickFormatter": {
      "type": "(value: number) => string",
      "description": "A function to format X axis tick.",
      "required": false
    },
    "polarRadiusAxisTickProps": {
      "type": "CSSUIProps",
      "description": "Props passed down to recharts `tick` of `PolarRadiusAxis` component.",
      "required": false
    },
    "radarProps": {
      "type": "Partial<RadarProps>",
      "description": "Props for the radar.",
      "required": false
    },
    "size": {
      "type": "\"sm\" | \"md\" | \"lg\" | \"full\"",
      "defaultValue": "\"full\"",
      "description": "The size of the RadarChart.",
      "required": false
    },
    "strokeDasharray": {
      "type": "string | number",
      "description": "Dash array for the grid lines and cursor. The first number is the length of the solid line section and the second number is the length of the interval.",
      "required": false
    },
    "strokeWidth": {
      "type": "number",
      "defaultValue": "2",
      "description": "Stroke width for the chart radars.",
      "required": false
    },
    "tooltipAnimationDuration": {
      "type": "number",
      "defaultValue": "0",
      "description": "Specifies the duration of animation, the unit of this option is ms.",
      "required": false
    },
    "tooltipProps": {
      "type": "TooltipProps",
      "description": "Props passed down to recharts 'Tooltip' component.",
      "required": false
    },
    "unit": {
      "type": "string",
      "description": "Unit displayed next to each tick in y-axis.",
      "required": false
    },
    "valueFormatter": {
      "type": "(value: any) => string",
      "description": "A function to format values on inside the tooltip.",
      "required": false
    },
    "variant": {
      "type": "string",
      "description": "The variant of the RadarChart.",
      "required": false
    },
    "withActiveDots": {
      "type": "boolean",
      "defaultValue": true,
      "description": "Determines whether activeDots should be displayed.",
      "required": false
    },
    "withDots": {
      "type": "boolean",
      "defaultValue": false,
      "description": "Determines whether dots should be displayed.",
      "required": false
    },
    "withLegend": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, legend is visible.",
      "required": false
    },
    "withPolarAngleAxis": {
      "type": "boolean",
      "defaultValue": true,
      "description": "Determines whether polarAngleAxis should be displayed.",
      "required": false
    },
    "withPolarGrid": {
      "type": "boolean",
      "defaultValue": true,
      "description": "Determines whether polarGrid should be displayed.",
      "required": false
    },
    "withPolarRadiusAxis": {
      "type": "boolean",
      "defaultValue": false,
      "description": "Determines whether polarRadiusAxis should be displayed.",
      "required": false
    },
    "withTooltip": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, tooltip is visible.",
      "required": false
    }
  },
  "RadialChart": {
    "data": {
      "type": "Dict<any>[]",
      "description": "Chart data.",
      "required": true
    },
    "chartProps": {
      "type": "RadialChartProps",
      "description": "Props passed down to recharts `RadialBarChart` component.",
      "required": false
    },
    "colorScheme": {
      "type": "\"blackAlpha\" | \"whiteAlpha\" | \"amber\" | \"blue\" | \"info\" | \"link\" | \"primary\" | \"cyan\" | \"emerald\" | \"flashy\" | \"fuchsia\" | \"gray\" | \"green\" | \"success\" | \"indigo\" | \"lime\" | \"neutral\" | \"orange\" | \"warning\" | \"pink\" | \"purple\" | \"red\" | \"danger\" | \"rose\" | \"sky\" | \"teal\" | \"violet\" | \"secondary\" | \"yellow\"",
      "description": "The visual color appearance of the component.",
      "required": false
    },
    "containerProps": {
      "type": "ResponsiveContainerProps",
      "description": "Props passed down to recharts `ResponsiveContainer` component.",
      "required": false
    },
    "dataKey": {
      "type": "string",
      "defaultValue": "'value'",
      "description": "The key of a group of data which should be unique in an chart.",
      "required": false
    },
    "endAngle": {
      "type": "number",
      "defaultValue": "-180",
      "description": "Controls angle at which chart ends.",
      "required": false
    },
    "fillOpacity": {
      "type": "number | [number, number]",
      "defaultValue": "1",
      "description": "Controls fill opacity of all pies.",
      "required": false
    },
    "innerRadius": {
      "type": "string | number",
      "defaultValue": "'10%'",
      "description": "Controls innerRadius of the chart segments.\nIf it is a number, it is the width of the radius.\nFor example, `60` means the radius is `60px` and the diameter is `120px`.",
      "required": false
    },
    "labelFormatter": {
      "type": "(label: string) => string",
      "description": "A function to format labels on inside the tooltip.",
      "required": false
    },
    "labelListProps": {
      "type": "LabelListProps[]",
      "description": "Props passed down to recharts `LabelList` components.",
      "required": false
    },
    "legendProps": {
      "type": "LegendProps",
      "description": "Props passed down to recharts 'Legend' component.",
      "required": false
    },
    "outerRadius": {
      "type": "string | number",
      "defaultValue": "'80%'",
      "description": "Controls thickness of the chart segments. If it is a number, it is calculated as px.\nIf it is a number, it is the width of the radius.\nFor example, `60` means the radius is `60px` and the diameter is `120px`.",
      "required": false
    },
    "polarGridProps": {
      "type": "PolarGridProps",
      "description": "Props passed down to recharts `PolarGrid` component.",
      "required": false
    },
    "radialBarProps": {
      "type": "Partial<RadialBarProps>",
      "description": "Props for the radialBar.",
      "required": false
    },
    "size": {
      "type": "\"sm\" | \"md\" | \"lg\" | \"full\"",
      "defaultValue": "\"full\"",
      "description": "The size of the RadialChart.",
      "required": false
    },
    "startAngle": {
      "type": "number",
      "defaultValue": "90",
      "description": "Controls angle at which chart starts.",
      "required": false
    },
    "strokeDasharray": {
      "type": "string | number",
      "description": "Dash array for the grid lines and cursor. The first number is the length of the solid line section and the second number is the length of the interval.",
      "required": false
    },
    "tooltipAnimationDuration": {
      "type": "number",
      "defaultValue": "0",
      "description": "Specifies the duration of animation, the unit of this option is ms.",
      "required": false
    },
    "tooltipDataSource": {
      "type": "TooltipDataSourceType",
      "defaultValue": "'all'",
      "description": "Determines which data is displayed in the tooltip.",
      "required": false
    },
    "tooltipProps": {
      "type": "TooltipProps",
      "description": "Props passed down to recharts 'Tooltip' component.",
      "required": false
    },
    "unit": {
      "type": "string",
      "description": "Unit displayed next to each value in tooltip.",
      "required": false
    },
    "valueFormatter": {
      "type": "(value: any) => string",
      "description": "A function to format values on inside the tooltip.",
      "required": false
    },
    "variant": {
      "type": "string",
      "description": "The variant of the RadialChart.",
      "required": false
    },
    "withLegend": {
      "type": "boolean",
      "defaultValue": false,
      "description": "If `true`, legend is visible.",
      "required": false
    },
    "withPolarGrid": {
      "type": "boolean",
      "defaultValue": false,
      "description": "Determines whether polarGrid should be displayed.",
      "required": false
    },
    "withTooltip": {
      "type": "boolean",
      "defaultValue": true,
      "description": "If `true`, tooltip is visible.",
      "required": false
    }
  },
  "BarCell": {
    "data": { "type": "Dict<any>", "required": true },
    "hasStack": { "type": "boolean", "required": true },
    "index": { "type": "number", "required": true },
    "series": { "type": "BarProps", "required": true }
  }
}
