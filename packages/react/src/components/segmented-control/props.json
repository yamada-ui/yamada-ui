{
  "Item": {
    "as": {
      "type": "As",
      "description": "The HTML element to render.",
      "required": false
    },
    "asChild": {
      "type": "boolean",
      "description": "Merges its props onto its immediate child.",
      "required": false
    },
    "css": {
      "type": "CSSObject | CSSObject[]",
      "description": "The CSS object.",
      "required": false
    },
    "colorScheme": {
      "type": "ColorScheme | [ColorScheme | ({ _peerAccept?: ColorScheme | [ColorScheme | (... & { base?: ColorScheme | [...] | (... & ...) | undefined; ... 4 more ...; xl?: ColorScheme | ... 2 more ... | undefined; }), ColorScheme | (... & { ...; })] | { ...; } | undefined; ... 173 more ...; _selection?: ColorScheme | ... 2 more ...",
      "description": "Set color scheme variables.",
      "required": false
    },
    "value": {
      "type": "Y",
      "description": "The value of the segmented control item.",
      "required": true
    },
    "disabled": {
      "type": "boolean",
      "defaultValue": "false",
      "description": "If `true`, the field will be disabled.",
      "required": false
    },
    "inputProps": {
      "type": "HTMLProps<\"input\">",
      "description": "Props for the input element.",
      "required": false
    },
    "readOnly": {
      "type": "boolean",
      "defaultValue": "false",
      "description": "If `true`, the field will be readonly.",
      "required": false
    }
  },
  "Root": {
    "as": {
      "type": "As",
      "description": "The HTML element to render.",
      "required": false
    },
    "asChild": {
      "type": "boolean",
      "description": "Merges its props onto its immediate child.",
      "required": false
    },
    "css": {
      "type": "CSSObject | CSSObject[]",
      "description": "The CSS object.",
      "required": false
    },
    "colorScheme": {
      "type": "ColorScheme | [ColorScheme | ({ _peerAccept?: ColorScheme | [ColorScheme | (... & { base?: ColorScheme | [...] | (... & ...) | undefined; ... 4 more ...; xl?: ColorScheme | ... 2 more ... | undefined; }), ColorScheme | (... & { ...; })] | { ...; } | undefined; ... 173 more ...; _selection?: ColorScheme | ... 2 more ...",
      "description": "Set color scheme variables.",
      "required": false
    },
    "size": {
      "type": "\"lg\" | \"md\" | \"sm\" | \"xl\" | [\"lg\" | \"md\" | \"sm\" | \"xl\" | ({ _peerAccept?: \"lg\" | \"md\" | \"sm\" | \"xl\" | [\"lg\" | \"md\" | \"sm\" | \"xl\" | (... & { base?: \"lg\" | \"md\" | \"sm\" | \"xl\" | [\"lg\" | ... 3 more ... | (... & ...), \"lg\" | ... 3 more ... | (... & ...)] | (... & ...) | undefined; ... 4 more ...; xl?: \"lg\" | ... 5 more ....",
      "description": "The size of the component.",
      "required": false
    },
    "defaultValue": {
      "type": "Y",
      "description": "The initial value of the segmented control.",
      "required": false
    },
    "disabled": {
      "type": "boolean",
      "defaultValue": "false",
      "description": "If `true`, the segmented control will be disabled.",
      "required": false
    },
    "fullRounded": {
      "type": "StyleValue<boolean>",
      "defaultValue": "false",
      "description": "If `true`, the segmented control will be full rounded.",
      "required": false
    },
    "items": {
      "type": "SegmentedControlItem[]",
      "defaultValue": "\"[]\"",
      "description": "If provided, generate segmented control buttons but based on items.",
      "required": false
    },
    "name": {
      "type": "string",
      "description": "The HTML `name` attribute used for forms.",
      "required": false
    },
    "onChange": {
      "type": "(value: Y) => void",
      "description": "The callback fired when any children radio is checked or unchecked.",
      "required": false
    },
    "orientation": {
      "type": "StyleValue<\"horizontal\" | \"vertical\">",
      "defaultValue": "\"horizontal\"",
      "description": "The orientation of the segmented control.",
      "required": false
    },
    "readOnly": {
      "type": "boolean",
      "defaultValue": "false",
      "description": "If `true`, the segmented control will be readonly.",
      "required": false
    },
    "value": {
      "type": "Y",
      "description": "The value of the segmented control.",
      "required": false
    }
  }
}
