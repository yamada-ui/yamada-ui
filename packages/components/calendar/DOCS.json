{
  "Calendar": {
    "_accept": { "type": "CSSUIObject", "required": false },
    "_active": { "type": "CSSUIObject", "required": false },
    "_after": { "type": "CSSUIObject", "required": false },
    "_anyLink": { "type": "CSSUIObject", "required": false },
    "_autofill": { "type": "CSSUIObject", "required": false },
    "_backdrop": { "type": "CSSUIObject", "required": false },
    "_before": { "type": "CSSUIObject", "required": false },
    "_between": { "type": "CSSUIObject", "required": false },
    "_blank": { "type": "CSSUIObject", "required": false },
    "_checked": { "type": "CSSUIObject", "required": false },
    "_cue": { "type": "CSSUIObject", "required": false },
    "_cueRegion": { "type": "CSSUIObject", "required": false },
    "_dark": { "type": "CSSUIObject", "required": false },
    "_default": { "type": "CSSUIObject", "required": false },
    "_disabled": { "type": "CSSUIObject", "required": false },
    "_empty": { "type": "CSSUIObject", "required": false },
    "_enabled": { "type": "CSSUIObject", "required": false },
    "_end": { "type": "CSSUIObject", "required": false },
    "_even": { "type": "CSSUIObject", "required": false },
    "_expanded": { "type": "CSSUIObject", "required": false },
    "_fileSelector": { "type": "CSSUIObject", "required": false },
    "_filled": { "type": "CSSUIObject", "required": false },
    "_first": { "type": "CSSUIObject", "required": false },
    "_firstLetter": { "type": "CSSUIObject", "required": false },
    "_firstLine": { "type": "CSSUIObject", "required": false },
    "_focus": { "type": "CSSUIObject", "required": false },
    "_focusVisible": { "type": "CSSUIObject", "required": false },
    "_focusWithin": { "type": "CSSUIObject", "required": false },
    "_fullScreen": { "type": "CSSUIObject", "required": false },
    "_grabbed": { "type": "CSSUIObject", "required": false },
    "_groupAccept": { "type": "CSSUIObject", "required": false },
    "_groupActive": { "type": "CSSUIObject", "required": false },
    "_groupBlank": { "type": "CSSUIObject", "required": false },
    "_groupChecked": { "type": "CSSUIObject", "required": false },
    "_groupDisabled": { "type": "CSSUIObject", "required": false },
    "_groupEnabled": { "type": "CSSUIObject", "required": false },
    "_groupExpanded": { "type": "CSSUIObject", "required": false },
    "_groupFocus": { "type": "CSSUIObject", "required": false },
    "_groupFocusVisible": { "type": "CSSUIObject", "required": false },
    "_groupFocusWithin": { "type": "CSSUIObject", "required": false },
    "_groupGrabbed": { "type": "CSSUIObject", "required": false },
    "_groupHorizontal": { "type": "CSSUIObject", "required": false },
    "_groupHover": { "type": "CSSUIObject", "required": false },
    "_groupIdle": { "type": "CSSUIObject", "required": false },
    "_groupInvalid": { "type": "CSSUIObject", "required": false },
    "_groupLoaded": { "type": "CSSUIObject", "required": false },
    "_groupLoading": { "type": "CSSUIObject", "required": false },
    "_groupOptional": { "type": "CSSUIObject", "required": false },
    "_groupPlaceholderShown": { "type": "CSSUIObject", "required": false },
    "_groupPressed": { "type": "CSSUIObject", "required": false },
    "_groupReadOnly": { "type": "CSSUIObject", "required": false },
    "_groupReadWrite": { "type": "CSSUIObject", "required": false },
    "_groupReject": { "type": "CSSUIObject", "required": false },
    "_groupRequired": { "type": "CSSUIObject", "required": false },
    "_groupSelected": { "type": "CSSUIObject", "required": false },
    "_groupUserInvalid": { "type": "CSSUIObject", "required": false },
    "_groupValid": { "type": "CSSUIObject", "required": false },
    "_groupVertical": { "type": "CSSUIObject", "required": false },
    "_hidden": { "type": "CSSUIObject", "required": false },
    "_holiday": { "type": "CSSUIObject", "required": false },
    "_horizontal": { "type": "CSSUIObject", "required": false },
    "_hover": { "type": "CSSUIObject", "required": false },
    "_idle": { "type": "CSSUIObject", "required": false },
    "_indeterminate": { "type": "CSSUIObject", "required": false },
    "_inRange": { "type": "CSSUIObject", "required": false },
    "_invalid": { "type": "CSSUIObject", "required": false },
    "_last": { "type": "CSSUIObject", "required": false },
    "_light": { "type": "CSSUIObject", "required": false },
    "_link": { "type": "CSSUIObject", "required": false },
    "_loaded": { "type": "CSSUIObject", "required": false },
    "_loading": { "type": "CSSUIObject", "required": false },
    "_marker": { "type": "CSSUIObject", "required": false },
    "_mediaDark": { "type": "CSSUIObject", "required": false },
    "_mediaLight": { "type": "CSSUIObject", "required": false },
    "_mediaReduceMotion": { "type": "CSSUIObject", "required": false },
    "_modal": { "type": "CSSUIObject", "required": false },
    "_nativeActive": { "type": "CSSUIObject", "required": false },
    "_nativeChecked": { "type": "CSSUIObject", "required": false },
    "_nativeDisabled": { "type": "CSSUIObject", "required": false },
    "_nativeFocus": { "type": "CSSUIObject", "required": false },
    "_nativeFocusVisible": { "type": "CSSUIObject", "required": false },
    "_nativeFocusWithin": { "type": "CSSUIObject", "required": false },
    "_nativeHidden": { "type": "CSSUIObject", "required": false },
    "_nativeHover": { "type": "CSSUIObject", "required": false },
    "_nativeReadOnly": { "type": "CSSUIObject", "required": false },
    "_nativeTarget": { "type": "CSSUIObject", "required": false },
    "_nativeValid": { "type": "CSSUIObject", "required": false },
    "_notFirst": { "type": "CSSUIObject", "required": false },
    "_notLast": { "type": "CSSUIObject", "required": false },
    "_notTarget": { "type": "CSSUIObject", "required": false },
    "_odd": { "type": "CSSUIObject", "required": false },
    "_only": { "type": "CSSUIObject", "required": false },
    "_optional": { "type": "CSSUIObject", "required": false },
    "_outRange": { "type": "CSSUIObject", "required": false },
    "_outside": { "type": "CSSUIObject", "required": false },
    "_paused": { "type": "CSSUIObject", "required": false },
    "_peerAccept": { "type": "CSSUIObject", "required": false },
    "_peerActive": { "type": "CSSUIObject", "required": false },
    "_peerBlank": { "type": "CSSUIObject", "required": false },
    "_peerChecked": { "type": "CSSUIObject", "required": false },
    "_peerDisabled": { "type": "CSSUIObject", "required": false },
    "_peerEnabled": { "type": "CSSUIObject", "required": false },
    "_peerExpanded": { "type": "CSSUIObject", "required": false },
    "_peerFocus": { "type": "CSSUIObject", "required": false },
    "_peerFocusVisible": { "type": "CSSUIObject", "required": false },
    "_peerFocusWithin": { "type": "CSSUIObject", "required": false },
    "_peerGrabbed": { "type": "CSSUIObject", "required": false },
    "_peerHorizontal": { "type": "CSSUIObject", "required": false },
    "_peerHover": { "type": "CSSUIObject", "required": false },
    "_peerIdle": { "type": "CSSUIObject", "required": false },
    "_peerInvalid": { "type": "CSSUIObject", "required": false },
    "_peerLoaded": { "type": "CSSUIObject", "required": false },
    "_peerLoading": { "type": "CSSUIObject", "required": false },
    "_peerOptional": { "type": "CSSUIObject", "required": false },
    "_peerPlaceholderShown": { "type": "CSSUIObject", "required": false },
    "_peerPressed": { "type": "CSSUIObject", "required": false },
    "_peerReadOnly": { "type": "CSSUIObject", "required": false },
    "_peerReadWrite": { "type": "CSSUIObject", "required": false },
    "_peerReject": { "type": "CSSUIObject", "required": false },
    "_peerRequired": { "type": "CSSUIObject", "required": false },
    "_peerSelected": { "type": "CSSUIObject", "required": false },
    "_peerUserInvalid": { "type": "CSSUIObject", "required": false },
    "_peerValid": { "type": "CSSUIObject", "required": false },
    "_peerVertical": { "type": "CSSUIObject", "required": false },
    "_picture": { "type": "CSSUIObject", "required": false },
    "_placeholder": { "type": "CSSUIObject", "required": false },
    "_placeholderShown": { "type": "CSSUIObject", "required": false },
    "_playing": { "type": "CSSUIObject", "required": false },
    "_pressed": { "type": "CSSUIObject", "required": false },
    "_print": { "type": "CSSUIObject", "required": false },
    "_readOnly": { "type": "CSSUIObject", "required": false },
    "_readWrite": { "type": "CSSUIObject", "required": false },
    "_reject": { "type": "CSSUIObject", "required": false },
    "_required": { "type": "CSSUIObject", "required": false },
    "_ripple": { "type": "CSSUIObject", "required": false },
    "_scrollbar": { "type": "CSSUIObject", "required": false },
    "_scrollbarButton": { "type": "CSSUIObject", "required": false },
    "_scrollbarCorner": { "type": "CSSUIObject", "required": false },
    "_scrollbarThumb": { "type": "CSSUIObject", "required": false },
    "_scrollbarTrack": { "type": "CSSUIObject", "required": false },
    "_scrollbarTrackPiece": { "type": "CSSUIObject", "required": false },
    "_selected": { "type": "CSSUIObject", "required": false },
    "_selection": { "type": "CSSUIObject", "required": false },
    "_start": { "type": "CSSUIObject", "required": false },
    "_target": { "type": "CSSUIObject", "required": false },
    "_today": { "type": "CSSUIObject", "required": false },
    "_userInvalid": { "type": "CSSUIObject", "required": false },
    "_valid": { "type": "CSSUIObject", "required": false },
    "_vertical": { "type": "CSSUIObject", "required": false },
    "_visited": { "type": "CSSUIObject", "required": false },
    "_weekend": { "type": "CSSUIObject", "required": false },
    "amountOfMonths": {
      "type": "number",
      "defaultValue": "1",
      "required": false,
      "description": "The number of months to display."
    },
    "colorScheme": {
      "defaultValue": "primary",
      "type": "\"whiteAlpha\" | \"blackAlpha\" | \"gray\" | \"neutral\" | \"red\" | \"danger\" | \"rose\" | \"pink\" | \"flashy\" | \"orange\" | \"warning\" | \"amber\" | \"yellow\" | \"lime\" | \"green\" | \"success\" | \"emerald\" | \"teal\" | \"cyan\" | \"sky\" | \"blue\" | \"primary\" | \"info\" | \"link\" | \"indigo\" | \"violet\" | \"secondary\" | \"purple\" | \"fuchsia\"",
      "required": false,
      "description": "The visual color appearance of the component."
    },
    "controlProps": {
      "type": "Omit<CalendarControlProps, \"operation\">",
      "required": false,
      "description": "Props for calendar control button element."
    },
    "dateFormat": {
      "type": "string",
      "defaultValue": "'MMMM YYYY'",
      "required": false,
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "dayProps": {
      "type": "ButtonProps & { component?: FC<DayProps> | undefined }",
      "required": false,
      "description": "Props for calendar day button element."
    },
    "defaultMonth": {
      "type": "Date",
      "defaultValue": "'new Date()'",
      "required": false,
      "description": "The initial month of the calendar."
    },
    "defaultType": {
      "type": "\"month\" | \"year\" | \"date\"",
      "required": false,
      "description": "The initial type of the calendar."
    },
    "defaultValue": {
      "type": "NonNullable<Y>",
      "required": false,
      "description": "The initial value of the calendar."
    },
    "disableOutsideDays": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, outside days will be disabled."
    },
    "enableMultiple": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, enables date multiple selection."
    },
    "enableRange": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, enables date range selection."
    },
    "excludeDate": {
      "type": "(date: Date) => boolean",
      "required": false,
      "description": "Callback function to determine whether the day should be disabled."
    },
    "firstDayOfWeek": {
      "type": "\"sunday\" | \"monday\"",
      "defaultValue": "'monday'",
      "required": false,
      "description": "Define the first day of the week."
    },
    "headerProps": {
      "type": "HTMLUIProps",
      "required": false,
      "description": "Props for calendar header element."
    },
    "hiddenOutsideDays": {
      "type": "boolean",
      "required": false,
      "description": "If `true`, outside days will be hidden."
    },
    "holidays": {
      "type": "Date[]",
      "required": false,
      "description": "Define holidays."
    },
    "labelProps": {
      "type": "CalendarLabelProps & {\n  icon?:\n    | IconProps\n    | ReactElement<any, string | JSXElementConstructor<any>>\n    | undefined\n}",
      "required": false,
      "description": "Props for calendar label button element."
    },
    "locale": {
      "type": "string",
      "defaultValue": "'en'",
      "required": false,
      "description": "The locale of the calendar.\nCheck the docs to see the locale of possible modifiers you can pass.",
      "see": "https://day.js.org/docs/en/i18n/instance-locale"
    },
    "maxDate": {
      "type": "Date",
      "required": false,
      "description": "The maximum possible date."
    },
    "maxSelectValues": {
      "type": "number",
      "required": false,
      "description": "The maximum selectable value."
    },
    "minDate": {
      "type": "Date",
      "required": false,
      "description": "The minimum possible date."
    },
    "minSelectValues": {
      "type": "number",
      "required": false,
      "description": "The minimum selectable value."
    },
    "month": {
      "type": "Date",
      "required": false,
      "description": "The month of the calendar."
    },
    "monthFormat": {
      "type": "string",
      "defaultValue": "'MM'",
      "required": false,
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "monthGridProps": {
      "type": "HTMLUIProps",
      "required": false,
      "description": "Props for calendar month grid element."
    },
    "monthProps": {
      "type": "ButtonProps & {\n  component?: FC<{ month: string; year: number; index: number }> | undefined\n}",
      "required": false,
      "description": "Props for calendar month button element."
    },
    "nextProps": {
      "type": "Omit<CalendarControlProps, \"operation\">",
      "required": false,
      "description": "Props for calendar next control button element."
    },
    "nextRef": {
      "type": "type ONLY_FOR_FORMAT =\n  | ((instance: (() => void | undefined) | null) => void)\n  | MutableRefObject<(() => void | undefined) | null>",
      "required": false,
      "description": "Ref to a next function."
    },
    "onChange": {
      "type": "(value: Y) => void",
      "required": false,
      "description": "The callback invoked when value state changes."
    },
    "onChangeMonth": {
      "type": "(value: Date) => void",
      "required": false,
      "description": "The callback invoked when month state changes."
    },
    "onChangeType": {
      "type": "(\n  type: \"month\" | \"year\" | \"date\",\n  year?: number | undefined,\n  month?: number | undefined,\n) => void",
      "required": false,
      "description": "The callback invoked when type state changes."
    },
    "paginateBy": {
      "type": "number",
      "defaultValue": "1",
      "required": false,
      "description": "The number of months to paginate."
    },
    "prevProps": {
      "type": "Omit<CalendarControlProps, \"operation\">",
      "required": false,
      "description": "Props for calendar previous control button element."
    },
    "prevRef": {
      "type": "type ONLY_FOR_FORMAT =\n  | ((instance: (() => void | undefined) | null) => void)\n  | MutableRefObject<(() => void | undefined) | null>",
      "required": false,
      "description": "Ref to a previous function."
    },
    "size": {
      "defaultValue": "md",
      "type": "\"sm\" | \"md\" | \"lg\" | \"full\"",
      "required": false,
      "description": "The size of the Calendar."
    },
    "tableProps": {
      "type": "MonthTableProps",
      "required": false,
      "description": "Props for calendar month table element."
    },
    "today": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, highlight today."
    },
    "type": {
      "type": "\"month\" | \"year\" | \"date\"",
      "required": false,
      "description": "The type of the calendar."
    },
    "typeRef": {
      "type": "type ONLY_FOR_FORMAT =\n  | ((instance: (() => void | undefined) | null) => void)\n  | MutableRefObject<(() => void | undefined) | null>",
      "required": false,
      "description": "Ref to a type function."
    },
    "value": {
      "type": "NonNullable<Y>",
      "required": false,
      "description": "The value of the calendar."
    },
    "variant": {
      "defaultValue": "solid",
      "type": "\"solid\" | \"subtle\" | \"unstyled\"",
      "required": false,
      "description": "The variant of the Calendar."
    },
    "weekdayFormat": {
      "type": "string",
      "defaultValue": "'dd'",
      "required": false,
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "weekdayProps": {
      "type": "Omit<HTMLProps<\"div\">, keyof UIProps> &\n  UIProps & { component?: FC<WeekdayProps> | undefined }",
      "required": false,
      "description": "Props for calendar weekday element."
    },
    "weekendDays": {
      "type": "number[]",
      "defaultValue": "'[0, 6]'",
      "required": false,
      "description": "Define weekend days."
    },
    "withControls": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, display the calendar control buttons."
    },
    "withHeader": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, display the calendar header."
    },
    "withLabel": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, display the calendar label button."
    },
    "withWeekdays": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, display the calendar weekdays."
    },
    "yearFormat": {
      "type": "string",
      "defaultValue": "'YYYY'",
      "required": false,
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "yearGridProps": {
      "type": "HTMLUIProps",
      "required": false,
      "description": "Props for calendar year grid element."
    },
    "yearProps": {
      "type": "ButtonProps & {\n  component?: FC<{ year: number; index: number }> | undefined\n}",
      "required": false,
      "description": "Props for calendar year button element."
    }
  },
  "DatePicker": {
    "_accept": { "type": "CSSUIObject", "required": false },
    "_active": { "type": "CSSUIObject", "required": false },
    "_after": { "type": "CSSUIObject", "required": false },
    "_anyLink": { "type": "CSSUIObject", "required": false },
    "_autofill": { "type": "CSSUIObject", "required": false },
    "_backdrop": { "type": "CSSUIObject", "required": false },
    "_before": { "type": "CSSUIObject", "required": false },
    "_between": { "type": "CSSUIObject", "required": false },
    "_blank": { "type": "CSSUIObject", "required": false },
    "_checked": { "type": "CSSUIObject", "required": false },
    "_cue": { "type": "CSSUIObject", "required": false },
    "_cueRegion": { "type": "CSSUIObject", "required": false },
    "_dark": { "type": "CSSUIObject", "required": false },
    "_default": { "type": "CSSUIObject", "required": false },
    "_disabled": { "type": "CSSUIObject", "required": false },
    "_empty": { "type": "CSSUIObject", "required": false },
    "_enabled": { "type": "CSSUIObject", "required": false },
    "_end": { "type": "CSSUIObject", "required": false },
    "_even": { "type": "CSSUIObject", "required": false },
    "_expanded": { "type": "CSSUIObject", "required": false },
    "_fileSelector": { "type": "CSSUIObject", "required": false },
    "_filled": { "type": "CSSUIObject", "required": false },
    "_first": { "type": "CSSUIObject", "required": false },
    "_firstLetter": { "type": "CSSUIObject", "required": false },
    "_firstLine": { "type": "CSSUIObject", "required": false },
    "_focus": { "type": "CSSUIObject", "required": false },
    "_focusVisible": { "type": "CSSUIObject", "required": false },
    "_focusWithin": { "type": "CSSUIObject", "required": false },
    "_fullScreen": { "type": "CSSUIObject", "required": false },
    "_grabbed": { "type": "CSSUIObject", "required": false },
    "_groupAccept": { "type": "CSSUIObject", "required": false },
    "_groupActive": { "type": "CSSUIObject", "required": false },
    "_groupBlank": { "type": "CSSUIObject", "required": false },
    "_groupChecked": { "type": "CSSUIObject", "required": false },
    "_groupDisabled": { "type": "CSSUIObject", "required": false },
    "_groupEnabled": { "type": "CSSUIObject", "required": false },
    "_groupExpanded": { "type": "CSSUIObject", "required": false },
    "_groupFocus": { "type": "CSSUIObject", "required": false },
    "_groupFocusVisible": { "type": "CSSUIObject", "required": false },
    "_groupFocusWithin": { "type": "CSSUIObject", "required": false },
    "_groupGrabbed": { "type": "CSSUIObject", "required": false },
    "_groupHorizontal": { "type": "CSSUIObject", "required": false },
    "_groupHover": { "type": "CSSUIObject", "required": false },
    "_groupIdle": { "type": "CSSUIObject", "required": false },
    "_groupInvalid": { "type": "CSSUIObject", "required": false },
    "_groupLoaded": { "type": "CSSUIObject", "required": false },
    "_groupLoading": { "type": "CSSUIObject", "required": false },
    "_groupOptional": { "type": "CSSUIObject", "required": false },
    "_groupPlaceholderShown": { "type": "CSSUIObject", "required": false },
    "_groupPressed": { "type": "CSSUIObject", "required": false },
    "_groupReadOnly": { "type": "CSSUIObject", "required": false },
    "_groupReadWrite": { "type": "CSSUIObject", "required": false },
    "_groupReject": { "type": "CSSUIObject", "required": false },
    "_groupRequired": { "type": "CSSUIObject", "required": false },
    "_groupSelected": { "type": "CSSUIObject", "required": false },
    "_groupUserInvalid": { "type": "CSSUIObject", "required": false },
    "_groupValid": { "type": "CSSUIObject", "required": false },
    "_groupVertical": { "type": "CSSUIObject", "required": false },
    "_hidden": { "type": "CSSUIObject", "required": false },
    "_holiday": { "type": "CSSUIObject", "required": false },
    "_horizontal": { "type": "CSSUIObject", "required": false },
    "_hover": { "type": "CSSUIObject", "required": false },
    "_idle": { "type": "CSSUIObject", "required": false },
    "_indeterminate": { "type": "CSSUIObject", "required": false },
    "_inRange": { "type": "CSSUIObject", "required": false },
    "_invalid": { "type": "CSSUIObject", "required": false },
    "_last": { "type": "CSSUIObject", "required": false },
    "_light": { "type": "CSSUIObject", "required": false },
    "_link": { "type": "CSSUIObject", "required": false },
    "_loaded": { "type": "CSSUIObject", "required": false },
    "_loading": { "type": "CSSUIObject", "required": false },
    "_marker": { "type": "CSSUIObject", "required": false },
    "_mediaDark": { "type": "CSSUIObject", "required": false },
    "_mediaLight": { "type": "CSSUIObject", "required": false },
    "_mediaReduceMotion": { "type": "CSSUIObject", "required": false },
    "_modal": { "type": "CSSUIObject", "required": false },
    "_nativeActive": { "type": "CSSUIObject", "required": false },
    "_nativeChecked": { "type": "CSSUIObject", "required": false },
    "_nativeDisabled": { "type": "CSSUIObject", "required": false },
    "_nativeFocus": { "type": "CSSUIObject", "required": false },
    "_nativeFocusVisible": { "type": "CSSUIObject", "required": false },
    "_nativeFocusWithin": { "type": "CSSUIObject", "required": false },
    "_nativeHidden": { "type": "CSSUIObject", "required": false },
    "_nativeHover": { "type": "CSSUIObject", "required": false },
    "_nativeReadOnly": { "type": "CSSUIObject", "required": false },
    "_nativeTarget": { "type": "CSSUIObject", "required": false },
    "_nativeValid": { "type": "CSSUIObject", "required": false },
    "_notFirst": { "type": "CSSUIObject", "required": false },
    "_notLast": { "type": "CSSUIObject", "required": false },
    "_notTarget": { "type": "CSSUIObject", "required": false },
    "_odd": { "type": "CSSUIObject", "required": false },
    "_only": { "type": "CSSUIObject", "required": false },
    "_optional": { "type": "CSSUIObject", "required": false },
    "_outRange": { "type": "CSSUIObject", "required": false },
    "_outside": { "type": "CSSUIObject", "required": false },
    "_paused": { "type": "CSSUIObject", "required": false },
    "_peerAccept": { "type": "CSSUIObject", "required": false },
    "_peerActive": { "type": "CSSUIObject", "required": false },
    "_peerBlank": { "type": "CSSUIObject", "required": false },
    "_peerChecked": { "type": "CSSUIObject", "required": false },
    "_peerDisabled": { "type": "CSSUIObject", "required": false },
    "_peerEnabled": { "type": "CSSUIObject", "required": false },
    "_peerExpanded": { "type": "CSSUIObject", "required": false },
    "_peerFocus": { "type": "CSSUIObject", "required": false },
    "_peerFocusVisible": { "type": "CSSUIObject", "required": false },
    "_peerFocusWithin": { "type": "CSSUIObject", "required": false },
    "_peerGrabbed": { "type": "CSSUIObject", "required": false },
    "_peerHorizontal": { "type": "CSSUIObject", "required": false },
    "_peerHover": { "type": "CSSUIObject", "required": false },
    "_peerIdle": { "type": "CSSUIObject", "required": false },
    "_peerInvalid": { "type": "CSSUIObject", "required": false },
    "_peerLoaded": { "type": "CSSUIObject", "required": false },
    "_peerLoading": { "type": "CSSUIObject", "required": false },
    "_peerOptional": { "type": "CSSUIObject", "required": false },
    "_peerPlaceholderShown": { "type": "CSSUIObject", "required": false },
    "_peerPressed": { "type": "CSSUIObject", "required": false },
    "_peerReadOnly": { "type": "CSSUIObject", "required": false },
    "_peerReadWrite": { "type": "CSSUIObject", "required": false },
    "_peerReject": { "type": "CSSUIObject", "required": false },
    "_peerRequired": { "type": "CSSUIObject", "required": false },
    "_peerSelected": { "type": "CSSUIObject", "required": false },
    "_peerUserInvalid": { "type": "CSSUIObject", "required": false },
    "_peerValid": { "type": "CSSUIObject", "required": false },
    "_peerVertical": { "type": "CSSUIObject", "required": false },
    "_picture": { "type": "CSSUIObject", "required": false },
    "_placeholder": { "type": "CSSUIObject", "required": false },
    "_placeholderShown": { "type": "CSSUIObject", "required": false },
    "_playing": { "type": "CSSUIObject", "required": false },
    "_pressed": { "type": "CSSUIObject", "required": false },
    "_print": { "type": "CSSUIObject", "required": false },
    "_readOnly": { "type": "CSSUIObject", "required": false },
    "_readWrite": { "type": "CSSUIObject", "required": false },
    "_reject": { "type": "CSSUIObject", "required": false },
    "_required": { "type": "CSSUIObject", "required": false },
    "_ripple": { "type": "CSSUIObject", "required": false },
    "_scrollbar": { "type": "CSSUIObject", "required": false },
    "_scrollbarButton": { "type": "CSSUIObject", "required": false },
    "_scrollbarCorner": { "type": "CSSUIObject", "required": false },
    "_scrollbarThumb": { "type": "CSSUIObject", "required": false },
    "_scrollbarTrack": { "type": "CSSUIObject", "required": false },
    "_scrollbarTrackPiece": { "type": "CSSUIObject", "required": false },
    "_selected": { "type": "CSSUIObject", "required": false },
    "_selection": { "type": "CSSUIObject", "required": false },
    "_start": { "type": "CSSUIObject", "required": false },
    "_target": { "type": "CSSUIObject", "required": false },
    "_today": { "type": "CSSUIObject", "required": false },
    "_userInvalid": { "type": "CSSUIObject", "required": false },
    "_valid": { "type": "CSSUIObject", "required": false },
    "_vertical": { "type": "CSSUIObject", "required": false },
    "_visited": { "type": "CSSUIObject", "required": false },
    "_weekend": { "type": "CSSUIObject", "required": false },
    "allowInput": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, allows input."
    },
    "allowInputBeyond": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, allows input of dates beyond the `minDate` and `maxDate` restrictions."
    },
    "amountOfMonths": {
      "type": "number",
      "defaultValue": "1",
      "required": false,
      "description": "The number of months to display."
    },
    "animation": {
      "type": "\"bottom\" | \"left\" | \"right\" | \"top\" | \"scale\" | \"none\"",
      "defaultValue": "'scale'",
      "required": false,
      "description": "The animation of the popover."
    },
    "boundary": {
      "type": "HTMLElement | \"clippingParents\" | \"scrollParent\"",
      "defaultValue": "'clippingParents'",
      "required": false,
      "description": "The boundary area for the popper. Used within the `preventOverflow` modifier."
    },
    "calendarColorScheme": {
      "type": "(string & {}) | \"link\" | \"whiteAlpha\" | \"blackAlpha\" | \"gray\" | \"neutral\" | \"red\" | \"rose\" | \"pink\" | \"flashy\" | \"orange\" | \"amber\" | \"yellow\" | \"lime\" | \"green\" | \"emerald\" | \"teal\" | ... 12 more ... | \"danger\"",
      "required": false,
      "description": "ColorScheme for the calendar component."
    },
    "calendarProps": {
      "type": "CalendarBaseProps",
      "required": false,
      "description": "Props for calendar component."
    },
    "calendarSize": {
      "type": "UIValue<(string & {}) | \"sm\" | \"md\" | \"lg\" | \"full\">",
      "required": false,
      "description": "Size for the calendar component."
    },
    "calendarVariant": {
      "type": "UIValue<(string & {}) | \"solid\" | \"subtle\" | \"unstyled\">",
      "required": false,
      "description": "Variant for the calendar component."
    },
    "clearIconProps": {
      "type": "DatePickerIconProps",
      "required": false,
      "description": "Props for date picker clear icon element."
    },
    "closeDelay": {
      "type": "number",
      "defaultValue": "200",
      "required": false,
      "description": "The number of delay time to close."
    },
    "closeOnBlur": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, the popover will close when you blur out it by clicking outside or tabbing out."
    },
    "closeOnEsc": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, the popover will close when you hit the `Esc` key."
    },
    "closeOnSelect": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, the calendar component will be closed when value is selected."
    },
    "colorScheme": {
      "type": "\"whiteAlpha\" | \"blackAlpha\" | \"gray\" | \"neutral\" | \"red\" | \"danger\" | \"rose\" | \"pink\" | \"flashy\" | \"orange\" | \"warning\" | \"amber\" | \"yellow\" | \"lime\" | \"green\" | \"success\" | \"emerald\" | \"teal\" | \"cyan\" | \"sky\" | \"blue\" | \"primary\" | \"info\" | \"link\" | \"indigo\" | \"violet\" | \"secondary\" | \"purple\" | \"fuchsia\"",
      "required": false,
      "description": "The visual color appearance of the component."
    },
    "containerProps": {
      "type": "Omit<HTMLUIProps, \"children\">",
      "required": false,
      "description": "Props for date picker container element."
    },
    "contentProps": {
      "type": "Omit<MotionProps, \"children\">",
      "required": false,
      "description": "Props for month picker container element."
    },
    "dateFormat": {
      "type": "string",
      "defaultValue": "'MMMM YYYY'",
      "required": false,
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "defaultIsOpen": {
      "type": "boolean",
      "required": false,
      "description": "If `true`, the popover will be initially opened."
    },
    "defaultMonth": {
      "type": "Date",
      "defaultValue": "'new Date()'",
      "required": false,
      "description": "The initial month of the calendar."
    },
    "defaultType": {
      "type": "\"month\" | \"year\" | \"date\"",
      "required": false,
      "description": "The initial type of the calendar."
    },
    "defaultValue": {
      "type": "Date",
      "required": false,
      "description": "The initial value of the calendar."
    },
    "disableOutsideDays": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, outside days will be disabled."
    },
    "duration": {
      "type": "number | MotionLifecycleProps<number>",
      "required": false,
      "description": "The animation duration."
    },
    "errorBorderColor": {
      "type": "string",
      "required": false,
      "description": "The border color when the input is invalid."
    },
    "eventListeners": {
      "type": "type ONLY_FOR_FORMAT =\n  | boolean\n  | { scroll?: boolean | undefined; resize?: boolean | undefined }",
      "defaultValue": true,
      "required": false,
      "description": "If provided, determines whether the popper will reposition itself on `scroll`  and `resize` of the window."
    },
    "excludeDate": {
      "type": "(date: Date) => boolean",
      "required": false,
      "description": "Callback function to determine whether the day should be disabled."
    },
    "fieldProps": {
      "type": "Omit<DatePickerFieldProps, \"children\" | \"inputProps\">",
      "required": false,
      "description": "Props for date picker field element."
    },
    "firstDayOfWeek": {
      "type": "\"sunday\" | \"monday\"",
      "defaultValue": "'monday'",
      "required": false,
      "description": "Define the first day of the week."
    },
    "flip": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, the popper will change its placement and flip when it's about to overflow its boundary area."
    },
    "focusBorderColor": {
      "type": "string",
      "required": false,
      "description": "The border color when the input is focused."
    },
    "gutter": {
      "type": "UIValue<number>",
      "defaultValue": "8",
      "required": false,
      "description": "The distance or margin between the reference and popper.\nIt is used internally to create an `offset` modifier."
    },
    "hiddenOutsideDays": {
      "type": "boolean",
      "required": false,
      "description": "If `true`, outside days will be hidden."
    },
    "holidays": {
      "type": "Date[]",
      "required": false,
      "description": "Define holidays."
    },
    "iconProps": {
      "type": "DatePickerIconProps",
      "required": false,
      "description": "Props for date picker icon element."
    },
    "inputFormat": {
      "type": "string",
      "defaultValue": "'YYYY/MM/DD'",
      "required": false,
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "inputProps": {
      "type": "HTMLUIProps<\"input\">",
      "required": false,
      "description": "Props for date picker input element."
    },
    "isClearable": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, display the date picker clear icon."
    },
    "isDisabled": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be disabled."
    },
    "isInvalid": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be invalid."
    },
    "isLazy": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the PopoverContent rendering will be deferred until the popover is open."
    },
    "isOpen": {
      "type": "boolean",
      "required": false,
      "description": "If `true`, the popover will be opened."
    },
    "isReadOnly": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be readonly."
    },
    "isRequired": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be required."
    },
    "lazyBehavior": {
      "type": "LazyMode",
      "defaultValue": "'unmount'",
      "required": false,
      "description": "The lazy behavior of popover's content when not visible. Only works when `isLazy={true}`\n\n- `unmount`: The popover's content is always unmounted when not open.\n- `keepMounted`: The popover's content initially unmounted, but stays mounted when popover is open."
    },
    "locale": {
      "type": "string",
      "defaultValue": "'en'",
      "required": false,
      "description": "The locale of the calendar.\nCheck the docs to see the locale of possible modifiers you can pass.",
      "see": "https://day.js.org/docs/en/i18n/instance-locale"
    },
    "matchWidth": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the popper will match the width of the reference at all times.\nIt's useful for `autocomplete`, `date-picker` and `select` patterns."
    },
    "maxDate": {
      "type": "Date",
      "required": false,
      "description": "The maximum possible date."
    },
    "maxSelectValues": {
      "type": "number",
      "required": false,
      "description": "The maximum selectable value."
    },
    "minDate": {
      "type": "Date",
      "required": false,
      "description": "The minimum possible date."
    },
    "minSelectValues": {
      "type": "number",
      "required": false,
      "description": "The minimum selectable value."
    },
    "modifiers": {
      "type": "Partial<Modifier<string, any>>[]",
      "required": false,
      "description": "Array of popper.js modifiers.\nCheck the docs to see the list of possible modifiers you can pass.",
      "see": "https://popper.js.org/docs/v2/modifiers/"
    },
    "month": {
      "type": "Date",
      "required": false,
      "description": "The month of the calendar."
    },
    "monthFormat": {
      "type": "string",
      "defaultValue": "'MM'",
      "required": false,
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "offset": {
      "type": "[number, number]",
      "required": false,
      "description": "The main and cross-axis offset to displace popper element from its reference element."
    },
    "onChange": {
      "type": "(value: Date | undefined) => void",
      "required": false,
      "description": "The callback invoked when value state changes."
    },
    "onChangeMonth": {
      "type": "(value: Date) => void",
      "required": false,
      "description": "The callback invoked when month state changes."
    },
    "onChangeType": {
      "type": "(\n  type: \"month\" | \"year\" | \"date\",\n  year?: number | undefined,\n  month?: number | undefined,\n) => void",
      "required": false,
      "description": "The callback invoked when type state changes."
    },
    "onClose": {
      "type": "() => void",
      "required": false,
      "description": "Callback fired when the popover closes."
    },
    "onOpen": {
      "type": "() => void",
      "required": false,
      "description": "Callback fired when the popover opens."
    },
    "openDelay": {
      "type": "number",
      "defaultValue": "200",
      "required": false,
      "description": "The number of delay time to open."
    },
    "paginateBy": {
      "type": "number",
      "defaultValue": "1",
      "required": false,
      "description": "The number of months to paginate."
    },
    "parseDate": {
      "type": "(value: string) => Date | undefined",
      "required": false,
      "description": "Function that converts the input value to Date type."
    },
    "pattern": {
      "type": "RegExp",
      "defaultValue": "'/[^0-9\\-\\/]/g'",
      "required": false,
      "description": "The pattern used to check the input element."
    },
    "placement": {
      "type": "UIValue<Placement>",
      "defaultValue": "'bottom'",
      "required": false,
      "description": "The placement of the popper relative to its reference."
    },
    "portalProps": {
      "type": "Omit<PortalProps, \"children\">",
      "defaultValue": "'{ isDisabled: true }'",
      "required": false,
      "description": "Props to be forwarded to the portal component."
    },
    "preventOverflow": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, will prevent the popper from being cut off and ensure it's visible within the boundary area."
    },
    "size": {
      "defaultValue": "md",
      "type": "\"xs\" | \"sm\" | \"md\" | \"lg\" | \"sizes\"",
      "required": false,
      "description": "The size of the DatePicker."
    },
    "strategy": {
      "type": "\"fixed\" | \"absolute\"",
      "defaultValue": "'absolute'",
      "required": false,
      "description": "The CSS positioning strategy to use."
    },
    "today": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, highlight today."
    },
    "type": {
      "type": "\"month\" | \"year\" | \"date\"",
      "required": false,
      "description": "The type of the calendar."
    },
    "value": {
      "type": "Date",
      "required": false,
      "description": "The value of the calendar."
    },
    "variant": {
      "defaultValue": "outline",
      "type": "\"outline\" | \"filled\" | \"flushed\" | \"unstyled\"",
      "required": false,
      "description": "The variant of the DatePicker."
    },
    "weekdayFormat": {
      "type": "string",
      "defaultValue": "'dd'",
      "required": false,
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "weekendDays": {
      "type": "number[]",
      "defaultValue": "'[0, 6]'",
      "required": false,
      "description": "Define weekend days."
    },
    "withControls": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, display the calendar control buttons."
    },
    "withHeader": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, display the calendar header."
    },
    "withLabel": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, display the calendar label button."
    },
    "withWeekdays": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, display the calendar weekdays."
    },
    "yearFormat": {
      "type": "string",
      "defaultValue": "'YYYY'",
      "required": false,
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    }
  },
  "MultiDatePicker": {
    "_accept": { "type": "CSSUIObject", "required": false },
    "_active": { "type": "CSSUIObject", "required": false },
    "_after": { "type": "CSSUIObject", "required": false },
    "_anyLink": { "type": "CSSUIObject", "required": false },
    "_autofill": { "type": "CSSUIObject", "required": false },
    "_backdrop": { "type": "CSSUIObject", "required": false },
    "_before": { "type": "CSSUIObject", "required": false },
    "_between": { "type": "CSSUIObject", "required": false },
    "_blank": { "type": "CSSUIObject", "required": false },
    "_checked": { "type": "CSSUIObject", "required": false },
    "_cue": { "type": "CSSUIObject", "required": false },
    "_cueRegion": { "type": "CSSUIObject", "required": false },
    "_dark": { "type": "CSSUIObject", "required": false },
    "_default": { "type": "CSSUIObject", "required": false },
    "_disabled": { "type": "CSSUIObject", "required": false },
    "_empty": { "type": "CSSUIObject", "required": false },
    "_enabled": { "type": "CSSUIObject", "required": false },
    "_end": { "type": "CSSUIObject", "required": false },
    "_even": { "type": "CSSUIObject", "required": false },
    "_expanded": { "type": "CSSUIObject", "required": false },
    "_fileSelector": { "type": "CSSUIObject", "required": false },
    "_filled": { "type": "CSSUIObject", "required": false },
    "_first": { "type": "CSSUIObject", "required": false },
    "_firstLetter": { "type": "CSSUIObject", "required": false },
    "_firstLine": { "type": "CSSUIObject", "required": false },
    "_focus": { "type": "CSSUIObject", "required": false },
    "_focusVisible": { "type": "CSSUIObject", "required": false },
    "_focusWithin": { "type": "CSSUIObject", "required": false },
    "_fullScreen": { "type": "CSSUIObject", "required": false },
    "_grabbed": { "type": "CSSUIObject", "required": false },
    "_groupAccept": { "type": "CSSUIObject", "required": false },
    "_groupActive": { "type": "CSSUIObject", "required": false },
    "_groupBlank": { "type": "CSSUIObject", "required": false },
    "_groupChecked": { "type": "CSSUIObject", "required": false },
    "_groupDisabled": { "type": "CSSUIObject", "required": false },
    "_groupEnabled": { "type": "CSSUIObject", "required": false },
    "_groupExpanded": { "type": "CSSUIObject", "required": false },
    "_groupFocus": { "type": "CSSUIObject", "required": false },
    "_groupFocusVisible": { "type": "CSSUIObject", "required": false },
    "_groupFocusWithin": { "type": "CSSUIObject", "required": false },
    "_groupGrabbed": { "type": "CSSUIObject", "required": false },
    "_groupHorizontal": { "type": "CSSUIObject", "required": false },
    "_groupHover": { "type": "CSSUIObject", "required": false },
    "_groupIdle": { "type": "CSSUIObject", "required": false },
    "_groupInvalid": { "type": "CSSUIObject", "required": false },
    "_groupLoaded": { "type": "CSSUIObject", "required": false },
    "_groupLoading": { "type": "CSSUIObject", "required": false },
    "_groupOptional": { "type": "CSSUIObject", "required": false },
    "_groupPlaceholderShown": { "type": "CSSUIObject", "required": false },
    "_groupPressed": { "type": "CSSUIObject", "required": false },
    "_groupReadOnly": { "type": "CSSUIObject", "required": false },
    "_groupReadWrite": { "type": "CSSUIObject", "required": false },
    "_groupReject": { "type": "CSSUIObject", "required": false },
    "_groupRequired": { "type": "CSSUIObject", "required": false },
    "_groupSelected": { "type": "CSSUIObject", "required": false },
    "_groupUserInvalid": { "type": "CSSUIObject", "required": false },
    "_groupValid": { "type": "CSSUIObject", "required": false },
    "_groupVertical": { "type": "CSSUIObject", "required": false },
    "_hidden": { "type": "CSSUIObject", "required": false },
    "_holiday": { "type": "CSSUIObject", "required": false },
    "_horizontal": { "type": "CSSUIObject", "required": false },
    "_hover": { "type": "CSSUIObject", "required": false },
    "_idle": { "type": "CSSUIObject", "required": false },
    "_indeterminate": { "type": "CSSUIObject", "required": false },
    "_inRange": { "type": "CSSUIObject", "required": false },
    "_invalid": { "type": "CSSUIObject", "required": false },
    "_last": { "type": "CSSUIObject", "required": false },
    "_light": { "type": "CSSUIObject", "required": false },
    "_link": { "type": "CSSUIObject", "required": false },
    "_loaded": { "type": "CSSUIObject", "required": false },
    "_loading": { "type": "CSSUIObject", "required": false },
    "_marker": { "type": "CSSUIObject", "required": false },
    "_mediaDark": { "type": "CSSUIObject", "required": false },
    "_mediaLight": { "type": "CSSUIObject", "required": false },
    "_mediaReduceMotion": { "type": "CSSUIObject", "required": false },
    "_modal": { "type": "CSSUIObject", "required": false },
    "_nativeActive": { "type": "CSSUIObject", "required": false },
    "_nativeChecked": { "type": "CSSUIObject", "required": false },
    "_nativeDisabled": { "type": "CSSUIObject", "required": false },
    "_nativeFocus": { "type": "CSSUIObject", "required": false },
    "_nativeFocusVisible": { "type": "CSSUIObject", "required": false },
    "_nativeFocusWithin": { "type": "CSSUIObject", "required": false },
    "_nativeHidden": { "type": "CSSUIObject", "required": false },
    "_nativeHover": { "type": "CSSUIObject", "required": false },
    "_nativeReadOnly": { "type": "CSSUIObject", "required": false },
    "_nativeTarget": { "type": "CSSUIObject", "required": false },
    "_nativeValid": { "type": "CSSUIObject", "required": false },
    "_notFirst": { "type": "CSSUIObject", "required": false },
    "_notLast": { "type": "CSSUIObject", "required": false },
    "_notTarget": { "type": "CSSUIObject", "required": false },
    "_odd": { "type": "CSSUIObject", "required": false },
    "_only": { "type": "CSSUIObject", "required": false },
    "_optional": { "type": "CSSUIObject", "required": false },
    "_outRange": { "type": "CSSUIObject", "required": false },
    "_outside": { "type": "CSSUIObject", "required": false },
    "_paused": { "type": "CSSUIObject", "required": false },
    "_peerAccept": { "type": "CSSUIObject", "required": false },
    "_peerActive": { "type": "CSSUIObject", "required": false },
    "_peerBlank": { "type": "CSSUIObject", "required": false },
    "_peerChecked": { "type": "CSSUIObject", "required": false },
    "_peerDisabled": { "type": "CSSUIObject", "required": false },
    "_peerEnabled": { "type": "CSSUIObject", "required": false },
    "_peerExpanded": { "type": "CSSUIObject", "required": false },
    "_peerFocus": { "type": "CSSUIObject", "required": false },
    "_peerFocusVisible": { "type": "CSSUIObject", "required": false },
    "_peerFocusWithin": { "type": "CSSUIObject", "required": false },
    "_peerGrabbed": { "type": "CSSUIObject", "required": false },
    "_peerHorizontal": { "type": "CSSUIObject", "required": false },
    "_peerHover": { "type": "CSSUIObject", "required": false },
    "_peerIdle": { "type": "CSSUIObject", "required": false },
    "_peerInvalid": { "type": "CSSUIObject", "required": false },
    "_peerLoaded": { "type": "CSSUIObject", "required": false },
    "_peerLoading": { "type": "CSSUIObject", "required": false },
    "_peerOptional": { "type": "CSSUIObject", "required": false },
    "_peerPlaceholderShown": { "type": "CSSUIObject", "required": false },
    "_peerPressed": { "type": "CSSUIObject", "required": false },
    "_peerReadOnly": { "type": "CSSUIObject", "required": false },
    "_peerReadWrite": { "type": "CSSUIObject", "required": false },
    "_peerReject": { "type": "CSSUIObject", "required": false },
    "_peerRequired": { "type": "CSSUIObject", "required": false },
    "_peerSelected": { "type": "CSSUIObject", "required": false },
    "_peerUserInvalid": { "type": "CSSUIObject", "required": false },
    "_peerValid": { "type": "CSSUIObject", "required": false },
    "_peerVertical": { "type": "CSSUIObject", "required": false },
    "_picture": { "type": "CSSUIObject", "required": false },
    "_placeholder": { "type": "CSSUIObject", "required": false },
    "_placeholderShown": { "type": "CSSUIObject", "required": false },
    "_playing": { "type": "CSSUIObject", "required": false },
    "_pressed": { "type": "CSSUIObject", "required": false },
    "_print": { "type": "CSSUIObject", "required": false },
    "_readOnly": { "type": "CSSUIObject", "required": false },
    "_readWrite": { "type": "CSSUIObject", "required": false },
    "_reject": { "type": "CSSUIObject", "required": false },
    "_required": { "type": "CSSUIObject", "required": false },
    "_ripple": { "type": "CSSUIObject", "required": false },
    "_scrollbar": { "type": "CSSUIObject", "required": false },
    "_scrollbarButton": { "type": "CSSUIObject", "required": false },
    "_scrollbarCorner": { "type": "CSSUIObject", "required": false },
    "_scrollbarThumb": { "type": "CSSUIObject", "required": false },
    "_scrollbarTrack": { "type": "CSSUIObject", "required": false },
    "_scrollbarTrackPiece": { "type": "CSSUIObject", "required": false },
    "_selected": { "type": "CSSUIObject", "required": false },
    "_selection": { "type": "CSSUIObject", "required": false },
    "_start": { "type": "CSSUIObject", "required": false },
    "_target": { "type": "CSSUIObject", "required": false },
    "_today": { "type": "CSSUIObject", "required": false },
    "_userInvalid": { "type": "CSSUIObject", "required": false },
    "_valid": { "type": "CSSUIObject", "required": false },
    "_vertical": { "type": "CSSUIObject", "required": false },
    "_visited": { "type": "CSSUIObject", "required": false },
    "_weekend": { "type": "CSSUIObject", "required": false },
    "allowInput": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, allows input."
    },
    "allowInputBeyond": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, allows input of dates beyond the `minDate` and `maxDate` restrictions."
    },
    "amountOfMonths": {
      "type": "number",
      "defaultValue": "1",
      "required": false,
      "description": "The number of months to display."
    },
    "animation": {
      "type": "\"bottom\" | \"left\" | \"right\" | \"top\" | \"scale\" | \"none\"",
      "defaultValue": "'scale'",
      "required": false,
      "description": "The animation of the popover."
    },
    "boundary": {
      "type": "HTMLElement | \"clippingParents\" | \"scrollParent\"",
      "defaultValue": "'clippingParents'",
      "required": false,
      "description": "The boundary area for the popper. Used within the `preventOverflow` modifier."
    },
    "calendarColorScheme": {
      "type": "(string & {}) | \"link\" | \"whiteAlpha\" | \"blackAlpha\" | \"gray\" | \"neutral\" | \"red\" | \"rose\" | \"pink\" | \"flashy\" | \"orange\" | \"amber\" | \"yellow\" | \"lime\" | \"green\" | \"emerald\" | \"teal\" | ... 12 more ... | \"danger\"",
      "required": false,
      "description": "ColorScheme for the calendar component."
    },
    "calendarProps": {
      "type": "CalendarBaseProps",
      "required": false,
      "description": "Props for calendar component."
    },
    "calendarSize": {
      "type": "UIValue<(string & {}) | \"sm\" | \"md\" | \"lg\" | \"full\">",
      "required": false,
      "description": "Size for the calendar component."
    },
    "calendarVariant": {
      "type": "UIValue<(string & {}) | \"solid\" | \"subtle\" | \"unstyled\">",
      "required": false,
      "description": "Variant for the calendar component."
    },
    "clearIconProps": {
      "type": "DatePickerIconProps",
      "required": false,
      "description": "Props for date picker clear icon element."
    },
    "closeDelay": {
      "type": "number",
      "defaultValue": "200",
      "required": false,
      "description": "The number of delay time to close."
    },
    "closeOnBlur": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, the popover will close when you blur out it by clicking outside or tabbing out."
    },
    "closeOnEsc": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, the popover will close when you hit the `Esc` key."
    },
    "closeOnMaxSelect": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, the calendar component will be closed when value is max selected."
    },
    "closeOnSelect": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the calendar component will be closed when value is selected."
    },
    "colorScheme": {
      "type": "\"whiteAlpha\" | \"blackAlpha\" | \"gray\" | \"neutral\" | \"red\" | \"danger\" | \"rose\" | \"pink\" | \"flashy\" | \"orange\" | \"warning\" | \"amber\" | \"yellow\" | \"lime\" | \"green\" | \"success\" | \"emerald\" | \"teal\" | \"cyan\" | \"sky\" | \"blue\" | \"primary\" | \"info\" | \"link\" | \"indigo\" | \"violet\" | \"secondary\" | \"purple\" | \"fuchsia\"",
      "required": false,
      "description": "The visual color appearance of the component."
    },
    "component": {
      "type": "FC<{\n  value: Date\n  label: string\n  index: number\n  onRemove: MouseEventHandler<HTMLElement>\n}>",
      "required": false,
      "description": "The custom display value to use."
    },
    "containerProps": {
      "type": "Omit<HTMLUIProps, \"children\">",
      "required": false,
      "description": "Props for date picker container element."
    },
    "contentProps": {
      "type": "Omit<MotionProps, \"children\">",
      "required": false,
      "description": "Props for date picker container element."
    },
    "dateFormat": {
      "type": "string",
      "defaultValue": "'MMMM YYYY'",
      "required": false,
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "defaultIsOpen": {
      "type": "boolean",
      "required": false,
      "description": "If `true`, the popover will be initially opened."
    },
    "defaultMonth": {
      "type": "Date",
      "defaultValue": "'new Date()'",
      "required": false,
      "description": "The initial month of the calendar."
    },
    "defaultType": {
      "type": "\"month\" | \"year\" | \"date\"",
      "required": false,
      "description": "The initial type of the calendar."
    },
    "defaultValue": {
      "type": "Date[]",
      "required": false,
      "description": "The initial value of the calendar."
    },
    "disableOutsideDays": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, outside days will be disabled."
    },
    "duration": {
      "type": "number | MotionLifecycleProps<number>",
      "required": false,
      "description": "The animation duration."
    },
    "errorBorderColor": {
      "type": "string",
      "required": false,
      "description": "The border color when the input is invalid."
    },
    "eventListeners": {
      "type": "type ONLY_FOR_FORMAT =\n  | boolean\n  | { scroll?: boolean | undefined; resize?: boolean | undefined }",
      "defaultValue": true,
      "required": false,
      "description": "If provided, determines whether the popper will reposition itself on `scroll`  and `resize` of the window."
    },
    "excludeDate": {
      "type": "(date: Date) => boolean",
      "required": false,
      "description": "Callback function to determine whether the day should be disabled."
    },
    "fieldProps": {
      "type": "Omit<HTMLUIProps, \"children\">",
      "required": false,
      "description": "Props for date picker field element."
    },
    "firstDayOfWeek": {
      "type": "\"sunday\" | \"monday\"",
      "defaultValue": "'monday'",
      "required": false,
      "description": "Define the first day of the week."
    },
    "flip": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, the popper will change its placement and flip when it's about to overflow its boundary area."
    },
    "focusBorderColor": {
      "type": "string",
      "required": false,
      "description": "The border color when the input is focused."
    },
    "gutter": {
      "type": "UIValue<number>",
      "defaultValue": "8",
      "required": false,
      "description": "The distance or margin between the reference and popper.\nIt is used internally to create an `offset` modifier."
    },
    "hiddenOutsideDays": {
      "type": "boolean",
      "required": false,
      "description": "If `true`, outside days will be hidden."
    },
    "holidays": {
      "type": "Date[]",
      "required": false,
      "description": "Define holidays."
    },
    "iconProps": {
      "type": "DatePickerIconProps",
      "required": false,
      "description": "Props for date picker icon element."
    },
    "inputFormat": {
      "type": "string",
      "defaultValue": "'YYYY/MM/DD'",
      "required": false,
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "inputProps": {
      "type": "HTMLUIProps<\"input\">",
      "required": false,
      "description": "Props for date picker input element."
    },
    "isClearable": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, display the date picker clear icon."
    },
    "isDisabled": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be disabled."
    },
    "isInvalid": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be invalid."
    },
    "isLazy": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the PopoverContent rendering will be deferred until the popover is open."
    },
    "isOpen": {
      "type": "boolean",
      "required": false,
      "description": "If `true`, the popover will be opened."
    },
    "isReadOnly": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be readonly."
    },
    "isRequired": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be required."
    },
    "keepPlaceholder": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, keep the placeholder."
    },
    "lazyBehavior": {
      "type": "LazyMode",
      "defaultValue": "'unmount'",
      "required": false,
      "description": "The lazy behavior of popover's content when not visible. Only works when `isLazy={true}`\n\n- `unmount`: The popover's content is always unmounted when not open.\n- `keepMounted`: The popover's content initially unmounted, but stays mounted when popover is open."
    },
    "locale": {
      "type": "string",
      "defaultValue": "'en'",
      "required": false,
      "description": "The locale of the calendar.\nCheck the docs to see the locale of possible modifiers you can pass.",
      "see": "https://day.js.org/docs/en/i18n/instance-locale"
    },
    "matchWidth": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the popper will match the width of the reference at all times.\nIt's useful for `autocomplete`, `date-picker` and `select` patterns."
    },
    "maxDate": {
      "type": "Date",
      "required": false,
      "description": "The maximum possible date."
    },
    "maxSelectValues": {
      "type": "number",
      "required": false,
      "description": "The maximum selectable value."
    },
    "minDate": {
      "type": "Date",
      "required": false,
      "description": "The minimum possible date."
    },
    "minSelectValues": {
      "type": "number",
      "required": false,
      "description": "The minimum selectable value."
    },
    "modifiers": {
      "type": "Partial<Modifier<string, any>>[]",
      "required": false,
      "description": "Array of popper.js modifiers.\nCheck the docs to see the list of possible modifiers you can pass.",
      "see": "https://popper.js.org/docs/v2/modifiers/"
    },
    "month": {
      "type": "Date",
      "required": false,
      "description": "The month of the calendar."
    },
    "monthFormat": {
      "type": "string",
      "defaultValue": "'MM'",
      "required": false,
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "offset": {
      "type": "[number, number]",
      "required": false,
      "description": "The main and cross-axis offset to displace popper element from its reference element."
    },
    "onChange": {
      "type": "(value: Date[]) => void",
      "required": false,
      "description": "The callback invoked when value state changes."
    },
    "onChangeMonth": {
      "type": "(value: Date) => void",
      "required": false,
      "description": "The callback invoked when month state changes."
    },
    "onChangeType": {
      "type": "(\n  type: \"month\" | \"year\" | \"date\",\n  year?: number | undefined,\n  month?: number | undefined,\n) => void",
      "required": false,
      "description": "The callback invoked when type state changes."
    },
    "onClose": {
      "type": "() => void",
      "required": false,
      "description": "Callback fired when the popover closes."
    },
    "onOpen": {
      "type": "() => void",
      "required": false,
      "description": "Callback fired when the popover opens."
    },
    "openDelay": {
      "type": "number",
      "defaultValue": "200",
      "required": false,
      "description": "The number of delay time to open."
    },
    "paginateBy": {
      "type": "number",
      "defaultValue": "1",
      "required": false,
      "description": "The number of months to paginate."
    },
    "parseDate": {
      "type": "(value: string) => Date | undefined",
      "required": false,
      "description": "Function that converts the input value to Date type."
    },
    "pattern": {
      "type": "RegExp",
      "defaultValue": "'/[^0-9\\-\\/]/g'",
      "required": false,
      "description": "The pattern used to check the input element."
    },
    "placement": {
      "type": "UIValue<Placement>",
      "defaultValue": "'bottom'",
      "required": false,
      "description": "The placement of the popper relative to its reference."
    },
    "portalProps": {
      "type": "Omit<PortalProps, \"children\">",
      "defaultValue": "'{ isDisabled: true }'",
      "required": false,
      "description": "Props to be forwarded to the portal component."
    },
    "preventOverflow": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, will prevent the popper from being cut off and ensure it's visible within the boundary area."
    },
    "separator": {
      "type": "string",
      "defaultValue": "','",
      "required": false,
      "description": "The visual separator between each value."
    },
    "size": {
      "defaultValue": "md",
      "type": "\"xs\" | \"sm\" | \"md\" | \"lg\" | \"sizes\"",
      "required": false,
      "description": "The size of the MultiDatePicker."
    },
    "strategy": {
      "type": "\"fixed\" | \"absolute\"",
      "defaultValue": "'absolute'",
      "required": false,
      "description": "The CSS positioning strategy to use."
    },
    "today": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, highlight today."
    },
    "type": {
      "type": "\"month\" | \"year\" | \"date\"",
      "required": false,
      "description": "The type of the calendar."
    },
    "value": {
      "type": "Date[]",
      "required": false,
      "description": "The value of the calendar."
    },
    "variant": {
      "defaultValue": "outline",
      "type": "\"outline\" | \"filled\" | \"flushed\" | \"unstyled\"",
      "required": false,
      "description": "The variant of the MultiDatePicker."
    },
    "weekdayFormat": {
      "type": "string",
      "defaultValue": "'dd'",
      "required": false,
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "weekendDays": {
      "type": "number[]",
      "defaultValue": "'[0, 6]'",
      "required": false,
      "description": "Define weekend days."
    },
    "withControls": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, display the calendar control buttons."
    },
    "withHeader": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, display the calendar header."
    },
    "withLabel": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, display the calendar label button."
    },
    "withWeekdays": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, display the calendar weekdays."
    },
    "yearFormat": {
      "type": "string",
      "defaultValue": "'YYYY'",
      "required": false,
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    }
  },
  "RangeDatePicker": {
    "_accept": { "type": "CSSUIObject", "required": false },
    "_active": { "type": "CSSUIObject", "required": false },
    "_after": { "type": "CSSUIObject", "required": false },
    "_anyLink": { "type": "CSSUIObject", "required": false },
    "_autofill": { "type": "CSSUIObject", "required": false },
    "_backdrop": { "type": "CSSUIObject", "required": false },
    "_before": { "type": "CSSUIObject", "required": false },
    "_between": { "type": "CSSUIObject", "required": false },
    "_blank": { "type": "CSSUIObject", "required": false },
    "_checked": { "type": "CSSUIObject", "required": false },
    "_cue": { "type": "CSSUIObject", "required": false },
    "_cueRegion": { "type": "CSSUIObject", "required": false },
    "_dark": { "type": "CSSUIObject", "required": false },
    "_default": { "type": "CSSUIObject", "required": false },
    "_disabled": { "type": "CSSUIObject", "required": false },
    "_empty": { "type": "CSSUIObject", "required": false },
    "_enabled": { "type": "CSSUIObject", "required": false },
    "_end": { "type": "CSSUIObject", "required": false },
    "_even": { "type": "CSSUIObject", "required": false },
    "_expanded": { "type": "CSSUIObject", "required": false },
    "_fileSelector": { "type": "CSSUIObject", "required": false },
    "_filled": { "type": "CSSUIObject", "required": false },
    "_first": { "type": "CSSUIObject", "required": false },
    "_firstLetter": { "type": "CSSUIObject", "required": false },
    "_firstLine": { "type": "CSSUIObject", "required": false },
    "_focus": { "type": "CSSUIObject", "required": false },
    "_focusVisible": { "type": "CSSUIObject", "required": false },
    "_focusWithin": { "type": "CSSUIObject", "required": false },
    "_fullScreen": { "type": "CSSUIObject", "required": false },
    "_grabbed": { "type": "CSSUIObject", "required": false },
    "_groupAccept": { "type": "CSSUIObject", "required": false },
    "_groupActive": { "type": "CSSUIObject", "required": false },
    "_groupBlank": { "type": "CSSUIObject", "required": false },
    "_groupChecked": { "type": "CSSUIObject", "required": false },
    "_groupDisabled": { "type": "CSSUIObject", "required": false },
    "_groupEnabled": { "type": "CSSUIObject", "required": false },
    "_groupExpanded": { "type": "CSSUIObject", "required": false },
    "_groupFocus": { "type": "CSSUIObject", "required": false },
    "_groupFocusVisible": { "type": "CSSUIObject", "required": false },
    "_groupFocusWithin": { "type": "CSSUIObject", "required": false },
    "_groupGrabbed": { "type": "CSSUIObject", "required": false },
    "_groupHorizontal": { "type": "CSSUIObject", "required": false },
    "_groupHover": { "type": "CSSUIObject", "required": false },
    "_groupIdle": { "type": "CSSUIObject", "required": false },
    "_groupInvalid": { "type": "CSSUIObject", "required": false },
    "_groupLoaded": { "type": "CSSUIObject", "required": false },
    "_groupLoading": { "type": "CSSUIObject", "required": false },
    "_groupOptional": { "type": "CSSUIObject", "required": false },
    "_groupPlaceholderShown": { "type": "CSSUIObject", "required": false },
    "_groupPressed": { "type": "CSSUIObject", "required": false },
    "_groupReadOnly": { "type": "CSSUIObject", "required": false },
    "_groupReadWrite": { "type": "CSSUIObject", "required": false },
    "_groupReject": { "type": "CSSUIObject", "required": false },
    "_groupRequired": { "type": "CSSUIObject", "required": false },
    "_groupSelected": { "type": "CSSUIObject", "required": false },
    "_groupUserInvalid": { "type": "CSSUIObject", "required": false },
    "_groupValid": { "type": "CSSUIObject", "required": false },
    "_groupVertical": { "type": "CSSUIObject", "required": false },
    "_hidden": { "type": "CSSUIObject", "required": false },
    "_holiday": { "type": "CSSUIObject", "required": false },
    "_horizontal": { "type": "CSSUIObject", "required": false },
    "_hover": { "type": "CSSUIObject", "required": false },
    "_idle": { "type": "CSSUIObject", "required": false },
    "_indeterminate": { "type": "CSSUIObject", "required": false },
    "_inRange": { "type": "CSSUIObject", "required": false },
    "_invalid": { "type": "CSSUIObject", "required": false },
    "_last": { "type": "CSSUIObject", "required": false },
    "_light": { "type": "CSSUIObject", "required": false },
    "_link": { "type": "CSSUIObject", "required": false },
    "_loaded": { "type": "CSSUIObject", "required": false },
    "_loading": { "type": "CSSUIObject", "required": false },
    "_marker": { "type": "CSSUIObject", "required": false },
    "_mediaDark": { "type": "CSSUIObject", "required": false },
    "_mediaLight": { "type": "CSSUIObject", "required": false },
    "_mediaReduceMotion": { "type": "CSSUIObject", "required": false },
    "_modal": { "type": "CSSUIObject", "required": false },
    "_nativeActive": { "type": "CSSUIObject", "required": false },
    "_nativeChecked": { "type": "CSSUIObject", "required": false },
    "_nativeDisabled": { "type": "CSSUIObject", "required": false },
    "_nativeFocus": { "type": "CSSUIObject", "required": false },
    "_nativeFocusVisible": { "type": "CSSUIObject", "required": false },
    "_nativeFocusWithin": { "type": "CSSUIObject", "required": false },
    "_nativeHidden": { "type": "CSSUIObject", "required": false },
    "_nativeHover": { "type": "CSSUIObject", "required": false },
    "_nativeReadOnly": { "type": "CSSUIObject", "required": false },
    "_nativeTarget": { "type": "CSSUIObject", "required": false },
    "_nativeValid": { "type": "CSSUIObject", "required": false },
    "_notFirst": { "type": "CSSUIObject", "required": false },
    "_notLast": { "type": "CSSUIObject", "required": false },
    "_notTarget": { "type": "CSSUIObject", "required": false },
    "_odd": { "type": "CSSUIObject", "required": false },
    "_only": { "type": "CSSUIObject", "required": false },
    "_optional": { "type": "CSSUIObject", "required": false },
    "_outRange": { "type": "CSSUIObject", "required": false },
    "_outside": { "type": "CSSUIObject", "required": false },
    "_paused": { "type": "CSSUIObject", "required": false },
    "_peerAccept": { "type": "CSSUIObject", "required": false },
    "_peerActive": { "type": "CSSUIObject", "required": false },
    "_peerBlank": { "type": "CSSUIObject", "required": false },
    "_peerChecked": { "type": "CSSUIObject", "required": false },
    "_peerDisabled": { "type": "CSSUIObject", "required": false },
    "_peerEnabled": { "type": "CSSUIObject", "required": false },
    "_peerExpanded": { "type": "CSSUIObject", "required": false },
    "_peerFocus": { "type": "CSSUIObject", "required": false },
    "_peerFocusVisible": { "type": "CSSUIObject", "required": false },
    "_peerFocusWithin": { "type": "CSSUIObject", "required": false },
    "_peerGrabbed": { "type": "CSSUIObject", "required": false },
    "_peerHorizontal": { "type": "CSSUIObject", "required": false },
    "_peerHover": { "type": "CSSUIObject", "required": false },
    "_peerIdle": { "type": "CSSUIObject", "required": false },
    "_peerInvalid": { "type": "CSSUIObject", "required": false },
    "_peerLoaded": { "type": "CSSUIObject", "required": false },
    "_peerLoading": { "type": "CSSUIObject", "required": false },
    "_peerOptional": { "type": "CSSUIObject", "required": false },
    "_peerPlaceholderShown": { "type": "CSSUIObject", "required": false },
    "_peerPressed": { "type": "CSSUIObject", "required": false },
    "_peerReadOnly": { "type": "CSSUIObject", "required": false },
    "_peerReadWrite": { "type": "CSSUIObject", "required": false },
    "_peerReject": { "type": "CSSUIObject", "required": false },
    "_peerRequired": { "type": "CSSUIObject", "required": false },
    "_peerSelected": { "type": "CSSUIObject", "required": false },
    "_peerUserInvalid": { "type": "CSSUIObject", "required": false },
    "_peerValid": { "type": "CSSUIObject", "required": false },
    "_peerVertical": { "type": "CSSUIObject", "required": false },
    "_picture": { "type": "CSSUIObject", "required": false },
    "_placeholder": { "type": "CSSUIObject", "required": false },
    "_placeholderShown": { "type": "CSSUIObject", "required": false },
    "_playing": { "type": "CSSUIObject", "required": false },
    "_pressed": { "type": "CSSUIObject", "required": false },
    "_print": { "type": "CSSUIObject", "required": false },
    "_readOnly": { "type": "CSSUIObject", "required": false },
    "_readWrite": { "type": "CSSUIObject", "required": false },
    "_reject": { "type": "CSSUIObject", "required": false },
    "_required": { "type": "CSSUIObject", "required": false },
    "_ripple": { "type": "CSSUIObject", "required": false },
    "_scrollbar": { "type": "CSSUIObject", "required": false },
    "_scrollbarButton": { "type": "CSSUIObject", "required": false },
    "_scrollbarCorner": { "type": "CSSUIObject", "required": false },
    "_scrollbarThumb": { "type": "CSSUIObject", "required": false },
    "_scrollbarTrack": { "type": "CSSUIObject", "required": false },
    "_scrollbarTrackPiece": { "type": "CSSUIObject", "required": false },
    "_selected": { "type": "CSSUIObject", "required": false },
    "_selection": { "type": "CSSUIObject", "required": false },
    "_start": { "type": "CSSUIObject", "required": false },
    "_target": { "type": "CSSUIObject", "required": false },
    "_today": { "type": "CSSUIObject", "required": false },
    "_userInvalid": { "type": "CSSUIObject", "required": false },
    "_valid": { "type": "CSSUIObject", "required": false },
    "_vertical": { "type": "CSSUIObject", "required": false },
    "_visited": { "type": "CSSUIObject", "required": false },
    "_weekend": { "type": "CSSUIObject", "required": false },
    "allowInput": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, allows input."
    },
    "allowInputBeyond": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, allows input of dates beyond the `minDate` and `maxDate` restrictions."
    },
    "amountOfMonths": {
      "type": "number",
      "defaultValue": "1",
      "required": false,
      "description": "The number of months to display."
    },
    "animation": {
      "type": "\"bottom\" | \"left\" | \"right\" | \"top\" | \"scale\" | \"none\"",
      "defaultValue": "'scale'",
      "required": false,
      "description": "The animation of the popover."
    },
    "boundary": {
      "type": "HTMLElement | \"clippingParents\" | \"scrollParent\"",
      "defaultValue": "'clippingParents'",
      "required": false,
      "description": "The boundary area for the popper. Used within the `preventOverflow` modifier."
    },
    "calendarColorScheme": {
      "type": "(string & {}) | \"link\" | \"whiteAlpha\" | \"blackAlpha\" | \"gray\" | \"neutral\" | \"red\" | \"rose\" | \"pink\" | \"flashy\" | \"orange\" | \"amber\" | \"yellow\" | \"lime\" | \"green\" | \"emerald\" | \"teal\" | ... 12 more ... | \"danger\"",
      "required": false,
      "description": "ColorScheme for the calendar component."
    },
    "calendarProps": {
      "type": "CalendarBaseProps",
      "required": false,
      "description": "Props for calendar component."
    },
    "calendarSize": {
      "type": "UIValue<(string & {}) | \"sm\" | \"md\" | \"lg\" | \"full\">",
      "required": false,
      "description": "Size for the calendar component."
    },
    "calendarVariant": {
      "type": "UIValue<(string & {}) | \"solid\" | \"subtle\" | \"unstyled\">",
      "required": false,
      "description": "Variant for the calendar component."
    },
    "clearIconProps": {
      "type": "DatePickerIconProps",
      "required": false,
      "description": "Props for date picker clear icon element."
    },
    "closeDelay": {
      "type": "number",
      "defaultValue": "200",
      "required": false,
      "description": "The number of delay time to close."
    },
    "closeOnBlur": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, the popover will close when you blur out it by clicking outside or tabbing out."
    },
    "closeOnEsc": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, the popover will close when you hit the `Esc` key."
    },
    "closeOnSelect": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, the list element will be closed when value is selected."
    },
    "colorScheme": {
      "type": "\"whiteAlpha\" | \"blackAlpha\" | \"gray\" | \"neutral\" | \"red\" | \"danger\" | \"rose\" | \"pink\" | \"flashy\" | \"orange\" | \"warning\" | \"amber\" | \"yellow\" | \"lime\" | \"green\" | \"success\" | \"emerald\" | \"teal\" | \"cyan\" | \"sky\" | \"blue\" | \"primary\" | \"info\" | \"link\" | \"indigo\" | \"violet\" | \"secondary\" | \"purple\" | \"fuchsia\"",
      "required": false,
      "description": "The visual color appearance of the component."
    },
    "containerProps": {
      "type": "Omit<HTMLUIProps, \"children\">",
      "required": false,
      "description": "Props for date picker container element."
    },
    "contentProps": {
      "type": "Omit<MotionProps, \"children\">",
      "required": false,
      "description": "Props for date picker container element."
    },
    "dateFormat": {
      "type": "string",
      "defaultValue": "'MMMM YYYY'",
      "required": false,
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "defaultIsOpen": {
      "type": "boolean",
      "required": false,
      "description": "If `true`, the popover will be initially opened."
    },
    "defaultMonth": {
      "type": "Date",
      "defaultValue": "'new Date()'",
      "required": false,
      "description": "The initial month of the calendar."
    },
    "defaultType": {
      "type": "\"month\" | \"year\" | \"date\"",
      "required": false,
      "description": "The initial type of the calendar."
    },
    "defaultValue": {
      "type": "[(Date | undefined)?, (Date | undefined)?]",
      "required": false,
      "description": "The initial value of the calendar."
    },
    "disableOutsideDays": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, outside days will be disabled."
    },
    "duration": {
      "type": "number | MotionLifecycleProps<number>",
      "required": false,
      "description": "The animation duration."
    },
    "endInputProps": {
      "type": "HTMLUIProps<\"input\">",
      "required": false,
      "description": "Props for date picker end input element."
    },
    "endPlaceholder": {
      "type": "string",
      "required": false,
      "description": "The end date placeholder"
    },
    "errorBorderColor": {
      "type": "string",
      "required": false,
      "description": "The border color when the input is invalid."
    },
    "eventListeners": {
      "type": "type ONLY_FOR_FORMAT =\n  | boolean\n  | { scroll?: boolean | undefined; resize?: boolean | undefined }",
      "defaultValue": true,
      "required": false,
      "description": "If provided, determines whether the popper will reposition itself on `scroll`  and `resize` of the window."
    },
    "excludeDate": {
      "type": "(date: Date) => boolean",
      "required": false,
      "description": "Callback function to determine whether the day should be disabled."
    },
    "fieldProps": {
      "type": "Omit<HTMLUIProps, \"children\">",
      "required": false,
      "description": "Props for date picker field element."
    },
    "firstDayOfWeek": {
      "type": "\"sunday\" | \"monday\"",
      "defaultValue": "'monday'",
      "required": false,
      "description": "Define the first day of the week."
    },
    "flip": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, the popper will change its placement and flip when it's about to overflow its boundary area."
    },
    "focusBorderColor": {
      "type": "string",
      "required": false,
      "description": "The border color when the input is focused."
    },
    "gutter": {
      "type": "UIValue<number>",
      "defaultValue": "8",
      "required": false,
      "description": "The distance or margin between the reference and popper.\nIt is used internally to create an `offset` modifier."
    },
    "hiddenOutsideDays": {
      "type": "boolean",
      "required": false,
      "description": "If `true`, outside days will be hidden."
    },
    "holidays": {
      "type": "Date[]",
      "required": false,
      "description": "Define holidays."
    },
    "iconProps": {
      "type": "DatePickerIconProps",
      "required": false,
      "description": "Props for date picker icon element."
    },
    "inputFormat": {
      "type": "string",
      "defaultValue": "'YYYY/MM/DD'",
      "required": false,
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "isClearable": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, display the date picker clear icon."
    },
    "isDisabled": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be disabled."
    },
    "isInvalid": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be invalid."
    },
    "isLazy": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the PopoverContent rendering will be deferred until the popover is open."
    },
    "isOpen": {
      "type": "boolean",
      "required": false,
      "description": "If `true`, the popover will be opened."
    },
    "isReadOnly": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be readonly."
    },
    "isRequired": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be required."
    },
    "lazyBehavior": {
      "type": "LazyMode",
      "defaultValue": "'unmount'",
      "required": false,
      "description": "The lazy behavior of popover's content when not visible. Only works when `isLazy={true}`\n\n- `unmount`: The popover's content is always unmounted when not open.\n- `keepMounted`: The popover's content initially unmounted, but stays mounted when popover is open."
    },
    "locale": {
      "type": "string",
      "defaultValue": "'en'",
      "required": false,
      "description": "The locale of the calendar.\nCheck the docs to see the locale of possible modifiers you can pass.",
      "see": "https://day.js.org/docs/en/i18n/instance-locale"
    },
    "matchWidth": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the popper will match the width of the reference at all times.\nIt's useful for `autocomplete`, `date-picker` and `select` patterns."
    },
    "maxDate": {
      "type": "Date",
      "required": false,
      "description": "The maximum possible date."
    },
    "maxSelectValues": {
      "type": "number",
      "required": false,
      "description": "The maximum selectable value."
    },
    "minDate": {
      "type": "Date",
      "required": false,
      "description": "The minimum possible date."
    },
    "minSelectValues": {
      "type": "number",
      "required": false,
      "description": "The minimum selectable value."
    },
    "modifiers": {
      "type": "Partial<Modifier<string, any>>[]",
      "required": false,
      "description": "Array of popper.js modifiers.\nCheck the docs to see the list of possible modifiers you can pass.",
      "see": "https://popper.js.org/docs/v2/modifiers/"
    },
    "month": {
      "type": "Date",
      "required": false,
      "description": "The month of the calendar."
    },
    "monthFormat": {
      "type": "string",
      "defaultValue": "'MM'",
      "required": false,
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "offset": {
      "type": "[number, number]",
      "required": false,
      "description": "The main and cross-axis offset to displace popper element from its reference element."
    },
    "onChange": {
      "type": "(\n  value: [(Date | undefined)?, (Date | undefined)?],\n) => void",
      "required": false,
      "description": "The callback invoked when value state changes."
    },
    "onChangeMonth": {
      "type": "(value: Date) => void",
      "required": false,
      "description": "The callback invoked when month state changes."
    },
    "onChangeType": {
      "type": "(\n  type: \"month\" | \"year\" | \"date\",\n  year?: number | undefined,\n  month?: number | undefined,\n) => void",
      "required": false,
      "description": "The callback invoked when type state changes."
    },
    "onClose": {
      "type": "() => void",
      "required": false,
      "description": "Callback fired when the popover closes."
    },
    "onOpen": {
      "type": "() => void",
      "required": false,
      "description": "Callback fired when the popover opens."
    },
    "openDelay": {
      "type": "number",
      "defaultValue": "200",
      "required": false,
      "description": "The number of delay time to open."
    },
    "paginateBy": {
      "type": "number",
      "defaultValue": "1",
      "required": false,
      "description": "The number of months to paginate."
    },
    "parseDate": {
      "type": "(value: string) => Date | undefined",
      "required": false,
      "description": "Function that converts the input value to Date type."
    },
    "pattern": {
      "type": "RegExp",
      "defaultValue": "'/[^0-9\\-\\/]/g'",
      "required": false,
      "description": "The pattern used to check the input element."
    },
    "placement": {
      "type": "UIValue<Placement>",
      "defaultValue": "'bottom'",
      "required": false,
      "description": "The placement of the popper relative to its reference."
    },
    "portalProps": {
      "type": "Omit<PortalProps, \"children\">",
      "defaultValue": "'{ isDisabled: true }'",
      "required": false,
      "description": "Props to be forwarded to the portal component."
    },
    "preventOverflow": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, will prevent the popper from being cut off and ensure it's visible within the boundary area."
    },
    "separator": {
      "type": "string",
      "defaultValue": "'-'",
      "required": false,
      "description": "The visual separator between each value."
    },
    "size": {
      "defaultValue": "md",
      "type": "\"xs\" | \"sm\" | \"md\" | \"lg\" | \"sizes\"",
      "required": false,
      "description": "The size of the RangeDatePicker."
    },
    "startInputProps": {
      "type": "HTMLUIProps<\"input\">",
      "required": false,
      "description": "Props for date picker start input element."
    },
    "startPlaceholder": {
      "type": "string",
      "required": false,
      "description": "The start date placeholder"
    },
    "strategy": {
      "type": "\"fixed\" | \"absolute\"",
      "defaultValue": "'absolute'",
      "required": false,
      "description": "The CSS positioning strategy to use."
    },
    "today": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, highlight today."
    },
    "type": {
      "type": "\"month\" | \"year\" | \"date\"",
      "required": false,
      "description": "The type of the calendar."
    },
    "value": {
      "type": "[(Date | undefined)?, (Date | undefined)?]",
      "required": false,
      "description": "The value of the calendar."
    },
    "variant": {
      "defaultValue": "outline",
      "type": "\"outline\" | \"filled\" | \"flushed\" | \"unstyled\"",
      "required": false,
      "description": "The variant of the RangeDatePicker."
    },
    "weekdayFormat": {
      "type": "string",
      "defaultValue": "'dd'",
      "required": false,
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "weekendDays": {
      "type": "number[]",
      "defaultValue": "'[0, 6]'",
      "required": false,
      "description": "Define weekend days."
    },
    "withControls": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, display the calendar control buttons."
    },
    "withHeader": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, display the calendar header."
    },
    "withLabel": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, display the calendar label button."
    },
    "withWeekdays": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, display the calendar weekdays."
    },
    "yearFormat": {
      "type": "string",
      "defaultValue": "'YYYY'",
      "required": false,
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    }
  },
  "MonthPicker": {
    "_accept": { "type": "CSSUIObject", "required": false },
    "_active": { "type": "CSSUIObject", "required": false },
    "_after": { "type": "CSSUIObject", "required": false },
    "_anyLink": { "type": "CSSUIObject", "required": false },
    "_autofill": { "type": "CSSUIObject", "required": false },
    "_backdrop": { "type": "CSSUIObject", "required": false },
    "_before": { "type": "CSSUIObject", "required": false },
    "_between": { "type": "CSSUIObject", "required": false },
    "_blank": { "type": "CSSUIObject", "required": false },
    "_checked": { "type": "CSSUIObject", "required": false },
    "_cue": { "type": "CSSUIObject", "required": false },
    "_cueRegion": { "type": "CSSUIObject", "required": false },
    "_dark": { "type": "CSSUIObject", "required": false },
    "_default": { "type": "CSSUIObject", "required": false },
    "_disabled": { "type": "CSSUIObject", "required": false },
    "_empty": { "type": "CSSUIObject", "required": false },
    "_enabled": { "type": "CSSUIObject", "required": false },
    "_end": { "type": "CSSUIObject", "required": false },
    "_even": { "type": "CSSUIObject", "required": false },
    "_expanded": { "type": "CSSUIObject", "required": false },
    "_fileSelector": { "type": "CSSUIObject", "required": false },
    "_filled": { "type": "CSSUIObject", "required": false },
    "_first": { "type": "CSSUIObject", "required": false },
    "_firstLetter": { "type": "CSSUIObject", "required": false },
    "_firstLine": { "type": "CSSUIObject", "required": false },
    "_focus": { "type": "CSSUIObject", "required": false },
    "_focusVisible": { "type": "CSSUIObject", "required": false },
    "_focusWithin": { "type": "CSSUIObject", "required": false },
    "_fullScreen": { "type": "CSSUIObject", "required": false },
    "_grabbed": { "type": "CSSUIObject", "required": false },
    "_groupAccept": { "type": "CSSUIObject", "required": false },
    "_groupActive": { "type": "CSSUIObject", "required": false },
    "_groupBlank": { "type": "CSSUIObject", "required": false },
    "_groupChecked": { "type": "CSSUIObject", "required": false },
    "_groupDisabled": { "type": "CSSUIObject", "required": false },
    "_groupEnabled": { "type": "CSSUIObject", "required": false },
    "_groupExpanded": { "type": "CSSUIObject", "required": false },
    "_groupFocus": { "type": "CSSUIObject", "required": false },
    "_groupFocusVisible": { "type": "CSSUIObject", "required": false },
    "_groupFocusWithin": { "type": "CSSUIObject", "required": false },
    "_groupGrabbed": { "type": "CSSUIObject", "required": false },
    "_groupHorizontal": { "type": "CSSUIObject", "required": false },
    "_groupHover": { "type": "CSSUIObject", "required": false },
    "_groupIdle": { "type": "CSSUIObject", "required": false },
    "_groupInvalid": { "type": "CSSUIObject", "required": false },
    "_groupLoaded": { "type": "CSSUIObject", "required": false },
    "_groupLoading": { "type": "CSSUIObject", "required": false },
    "_groupOptional": { "type": "CSSUIObject", "required": false },
    "_groupPlaceholderShown": { "type": "CSSUIObject", "required": false },
    "_groupPressed": { "type": "CSSUIObject", "required": false },
    "_groupReadOnly": { "type": "CSSUIObject", "required": false },
    "_groupReadWrite": { "type": "CSSUIObject", "required": false },
    "_groupReject": { "type": "CSSUIObject", "required": false },
    "_groupRequired": { "type": "CSSUIObject", "required": false },
    "_groupSelected": { "type": "CSSUIObject", "required": false },
    "_groupUserInvalid": { "type": "CSSUIObject", "required": false },
    "_groupValid": { "type": "CSSUIObject", "required": false },
    "_groupVertical": { "type": "CSSUIObject", "required": false },
    "_hidden": { "type": "CSSUIObject", "required": false },
    "_holiday": { "type": "CSSUIObject", "required": false },
    "_horizontal": { "type": "CSSUIObject", "required": false },
    "_hover": { "type": "CSSUIObject", "required": false },
    "_idle": { "type": "CSSUIObject", "required": false },
    "_indeterminate": { "type": "CSSUIObject", "required": false },
    "_inRange": { "type": "CSSUIObject", "required": false },
    "_invalid": { "type": "CSSUIObject", "required": false },
    "_last": { "type": "CSSUIObject", "required": false },
    "_light": { "type": "CSSUIObject", "required": false },
    "_link": { "type": "CSSUIObject", "required": false },
    "_loaded": { "type": "CSSUIObject", "required": false },
    "_loading": { "type": "CSSUIObject", "required": false },
    "_marker": { "type": "CSSUIObject", "required": false },
    "_mediaDark": { "type": "CSSUIObject", "required": false },
    "_mediaLight": { "type": "CSSUIObject", "required": false },
    "_mediaReduceMotion": { "type": "CSSUIObject", "required": false },
    "_modal": { "type": "CSSUIObject", "required": false },
    "_nativeActive": { "type": "CSSUIObject", "required": false },
    "_nativeChecked": { "type": "CSSUIObject", "required": false },
    "_nativeDisabled": { "type": "CSSUIObject", "required": false },
    "_nativeFocus": { "type": "CSSUIObject", "required": false },
    "_nativeFocusVisible": { "type": "CSSUIObject", "required": false },
    "_nativeFocusWithin": { "type": "CSSUIObject", "required": false },
    "_nativeHidden": { "type": "CSSUIObject", "required": false },
    "_nativeHover": { "type": "CSSUIObject", "required": false },
    "_nativeReadOnly": { "type": "CSSUIObject", "required": false },
    "_nativeTarget": { "type": "CSSUIObject", "required": false },
    "_nativeValid": { "type": "CSSUIObject", "required": false },
    "_notFirst": { "type": "CSSUIObject", "required": false },
    "_notLast": { "type": "CSSUIObject", "required": false },
    "_notTarget": { "type": "CSSUIObject", "required": false },
    "_odd": { "type": "CSSUIObject", "required": false },
    "_only": { "type": "CSSUIObject", "required": false },
    "_optional": { "type": "CSSUIObject", "required": false },
    "_outRange": { "type": "CSSUIObject", "required": false },
    "_outside": { "type": "CSSUIObject", "required": false },
    "_paused": { "type": "CSSUIObject", "required": false },
    "_peerAccept": { "type": "CSSUIObject", "required": false },
    "_peerActive": { "type": "CSSUIObject", "required": false },
    "_peerBlank": { "type": "CSSUIObject", "required": false },
    "_peerChecked": { "type": "CSSUIObject", "required": false },
    "_peerDisabled": { "type": "CSSUIObject", "required": false },
    "_peerEnabled": { "type": "CSSUIObject", "required": false },
    "_peerExpanded": { "type": "CSSUIObject", "required": false },
    "_peerFocus": { "type": "CSSUIObject", "required": false },
    "_peerFocusVisible": { "type": "CSSUIObject", "required": false },
    "_peerFocusWithin": { "type": "CSSUIObject", "required": false },
    "_peerGrabbed": { "type": "CSSUIObject", "required": false },
    "_peerHorizontal": { "type": "CSSUIObject", "required": false },
    "_peerHover": { "type": "CSSUIObject", "required": false },
    "_peerIdle": { "type": "CSSUIObject", "required": false },
    "_peerInvalid": { "type": "CSSUIObject", "required": false },
    "_peerLoaded": { "type": "CSSUIObject", "required": false },
    "_peerLoading": { "type": "CSSUIObject", "required": false },
    "_peerOptional": { "type": "CSSUIObject", "required": false },
    "_peerPlaceholderShown": { "type": "CSSUIObject", "required": false },
    "_peerPressed": { "type": "CSSUIObject", "required": false },
    "_peerReadOnly": { "type": "CSSUIObject", "required": false },
    "_peerReadWrite": { "type": "CSSUIObject", "required": false },
    "_peerReject": { "type": "CSSUIObject", "required": false },
    "_peerRequired": { "type": "CSSUIObject", "required": false },
    "_peerSelected": { "type": "CSSUIObject", "required": false },
    "_peerUserInvalid": { "type": "CSSUIObject", "required": false },
    "_peerValid": { "type": "CSSUIObject", "required": false },
    "_peerVertical": { "type": "CSSUIObject", "required": false },
    "_picture": { "type": "CSSUIObject", "required": false },
    "_placeholder": { "type": "CSSUIObject", "required": false },
    "_placeholderShown": { "type": "CSSUIObject", "required": false },
    "_playing": { "type": "CSSUIObject", "required": false },
    "_pressed": { "type": "CSSUIObject", "required": false },
    "_print": { "type": "CSSUIObject", "required": false },
    "_readOnly": { "type": "CSSUIObject", "required": false },
    "_readWrite": { "type": "CSSUIObject", "required": false },
    "_reject": { "type": "CSSUIObject", "required": false },
    "_required": { "type": "CSSUIObject", "required": false },
    "_ripple": { "type": "CSSUIObject", "required": false },
    "_scrollbar": { "type": "CSSUIObject", "required": false },
    "_scrollbarButton": { "type": "CSSUIObject", "required": false },
    "_scrollbarCorner": { "type": "CSSUIObject", "required": false },
    "_scrollbarThumb": { "type": "CSSUIObject", "required": false },
    "_scrollbarTrack": { "type": "CSSUIObject", "required": false },
    "_scrollbarTrackPiece": { "type": "CSSUIObject", "required": false },
    "_selected": { "type": "CSSUIObject", "required": false },
    "_selection": { "type": "CSSUIObject", "required": false },
    "_start": { "type": "CSSUIObject", "required": false },
    "_target": { "type": "CSSUIObject", "required": false },
    "_today": { "type": "CSSUIObject", "required": false },
    "_userInvalid": { "type": "CSSUIObject", "required": false },
    "_valid": { "type": "CSSUIObject", "required": false },
    "_vertical": { "type": "CSSUIObject", "required": false },
    "_visited": { "type": "CSSUIObject", "required": false },
    "_weekend": { "type": "CSSUIObject", "required": false },
    "allowInput": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, allows input."
    },
    "allowInputBeyond": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, allows input of dates beyond the `minDate` and `maxDate` restrictions."
    },
    "animation": {
      "type": "\"bottom\" | \"left\" | \"right\" | \"top\" | \"scale\" | \"none\"",
      "defaultValue": "'scale'",
      "required": false,
      "description": "The animation of the popover."
    },
    "boundary": {
      "type": "HTMLElement | \"clippingParents\" | \"scrollParent\"",
      "defaultValue": "'clippingParents'",
      "required": false,
      "description": "The boundary area for the popper. Used within the `preventOverflow` modifier."
    },
    "calendarColorScheme": {
      "type": "(string & {}) | \"link\" | \"whiteAlpha\" | \"blackAlpha\" | \"gray\" | \"neutral\" | \"red\" | \"rose\" | \"pink\" | \"flashy\" | \"orange\" | \"amber\" | \"yellow\" | \"lime\" | \"green\" | \"emerald\" | \"teal\" | ... 12 more ... | \"danger\"",
      "required": false,
      "description": "ColorScheme for the calendar component."
    },
    "calendarProps": {
      "type": "CalendarBaseProps",
      "required": false,
      "description": "Props for calendar component."
    },
    "calendarSize": {
      "type": "UIValue<(string & {}) | \"sm\" | \"md\" | \"lg\" | \"full\">",
      "required": false,
      "description": "Size for the calendar component."
    },
    "calendarVariant": {
      "type": "UIValue<(string & {}) | \"solid\" | \"subtle\" | \"unstyled\">",
      "required": false,
      "description": "Variant for the calendar component."
    },
    "clearIconProps": {
      "type": "DatePickerIconProps",
      "required": false,
      "description": "Props for month picker clear icon element."
    },
    "closeDelay": {
      "type": "number",
      "defaultValue": "200",
      "required": false,
      "description": "The number of delay time to close."
    },
    "closeOnBlur": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, the popover will close when you blur out it by clicking outside or tabbing out."
    },
    "closeOnEsc": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, the popover will close when you hit the `Esc` key."
    },
    "closeOnSelect": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, the calendar component will be closed when value is selected."
    },
    "colorScheme": {
      "type": "\"whiteAlpha\" | \"blackAlpha\" | \"gray\" | \"neutral\" | \"red\" | \"danger\" | \"rose\" | \"pink\" | \"flashy\" | \"orange\" | \"warning\" | \"amber\" | \"yellow\" | \"lime\" | \"green\" | \"success\" | \"emerald\" | \"teal\" | \"cyan\" | \"sky\" | \"blue\" | \"primary\" | \"info\" | \"link\" | \"indigo\" | \"violet\" | \"secondary\" | \"purple\" | \"fuchsia\"",
      "required": false,
      "description": "The visual color appearance of the component."
    },
    "containerProps": {
      "type": "Omit<HTMLUIProps, \"children\">",
      "required": false,
      "description": "Props for month picker container element."
    },
    "contentProps": {
      "type": "Omit<MotionProps, \"children\">",
      "required": false,
      "description": "Props for month picker container element."
    },
    "defaultIsOpen": {
      "type": "boolean",
      "required": false,
      "description": "If `true`, the popover will be initially opened."
    },
    "defaultMonth": {
      "type": "Date",
      "defaultValue": "'new Date()'",
      "required": false,
      "description": "The initial month of the calendar."
    },
    "defaultType": {
      "type": "\"month\" | \"year\"",
      "defaultValue": "'month'",
      "required": false,
      "description": "The initial type of the month picker."
    },
    "defaultValue": {
      "type": "Date",
      "required": false,
      "description": "The initial value of the calendar."
    },
    "duration": {
      "type": "number | MotionLifecycleProps<number>",
      "required": false,
      "description": "The animation duration."
    },
    "errorBorderColor": {
      "type": "string",
      "required": false,
      "description": "The border color when the input is invalid."
    },
    "eventListeners": {
      "type": "type ONLY_FOR_FORMAT =\n  | boolean\n  | { scroll?: boolean | undefined; resize?: boolean | undefined }",
      "defaultValue": true,
      "required": false,
      "description": "If provided, determines whether the popper will reposition itself on `scroll`  and `resize` of the window."
    },
    "fieldProps": {
      "type": "Omit<DatePickerFieldProps, \"children\" | \"inputProps\">",
      "required": false,
      "description": "Props for month picker field element."
    },
    "flip": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, the popper will change its placement and flip when it's about to overflow its boundary area."
    },
    "focusBorderColor": {
      "type": "string",
      "required": false,
      "description": "The border color when the input is focused."
    },
    "gutter": {
      "type": "UIValue<number>",
      "defaultValue": "8",
      "required": false,
      "description": "The distance or margin between the reference and popper.\nIt is used internally to create an `offset` modifier."
    },
    "iconProps": {
      "type": "DatePickerIconProps",
      "required": false,
      "description": "Props for month picker icon element."
    },
    "inputFormat": {
      "type": "string",
      "defaultValue": "'YYYY/MM/DD'",
      "required": false,
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "inputProps": {
      "type": "HTMLUIProps<\"input\">",
      "required": false,
      "description": "Props for month picker input element."
    },
    "isClearable": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, display the month picker clear icon."
    },
    "isDisabled": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be disabled."
    },
    "isInvalid": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be invalid."
    },
    "isLazy": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the PopoverContent rendering will be deferred until the popover is open."
    },
    "isOpen": {
      "type": "boolean",
      "required": false,
      "description": "If `true`, the popover will be opened."
    },
    "isReadOnly": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be readonly."
    },
    "isRequired": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be required."
    },
    "lazyBehavior": {
      "type": "LazyMode",
      "defaultValue": "'unmount'",
      "required": false,
      "description": "The lazy behavior of popover's content when not visible. Only works when `isLazy={true}`\n\n- `unmount`: The popover's content is always unmounted when not open.\n- `keepMounted`: The popover's content initially unmounted, but stays mounted when popover is open."
    },
    "locale": {
      "type": "string",
      "defaultValue": "'en'",
      "required": false,
      "description": "The locale of the calendar.\nCheck the docs to see the locale of possible modifiers you can pass.",
      "see": "https://day.js.org/docs/en/i18n/instance-locale"
    },
    "matchWidth": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the popper will match the width of the reference at all times.\nIt's useful for `autocomplete`, `date-picker` and `select` patterns."
    },
    "maxDate": {
      "type": "Date",
      "required": false,
      "description": "The maximum possible date."
    },
    "minDate": {
      "type": "Date",
      "required": false,
      "description": "The minimum possible date."
    },
    "modifiers": {
      "type": "Partial<Modifier<string, any>>[]",
      "required": false,
      "description": "Array of popper.js modifiers.\nCheck the docs to see the list of possible modifiers you can pass.",
      "see": "https://popper.js.org/docs/v2/modifiers/"
    },
    "month": {
      "type": "Date",
      "required": false,
      "description": "The month of the calendar."
    },
    "monthFormat": {
      "type": "string",
      "defaultValue": "'MM'",
      "required": false,
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "offset": {
      "type": "[number, number]",
      "required": false,
      "description": "The main and cross-axis offset to displace popper element from its reference element."
    },
    "onChange": {
      "type": "(value: Date | undefined) => void",
      "required": false,
      "description": "The callback invoked when value state changes."
    },
    "onChangeMonth": {
      "type": "(value: Date) => void",
      "required": false,
      "description": "The callback invoked when month state changes."
    },
    "onChangeType": {
      "type": "(type: \"month\" | \"year\") => void",
      "required": false,
      "description": "The callback invoked when type state changes."
    },
    "onClose": {
      "type": "() => void",
      "required": false,
      "description": "Callback fired when the popover closes."
    },
    "onOpen": {
      "type": "() => void",
      "required": false,
      "description": "Callback fired when the popover opens."
    },
    "openDelay": {
      "type": "number",
      "defaultValue": "200",
      "required": false,
      "description": "The number of delay time to open."
    },
    "parseDate": {
      "type": "(value: string) => Date | undefined",
      "required": false,
      "description": "Function that converts the input value to Date type."
    },
    "pattern": {
      "type": "RegExp",
      "defaultValue": "'/[^0-9\\-\\/]/g'",
      "required": false,
      "description": "The pattern used to check the input element."
    },
    "placement": {
      "type": "UIValue<Placement>",
      "defaultValue": "'bottom'",
      "required": false,
      "description": "The placement of the popper relative to its reference."
    },
    "portalProps": {
      "type": "Omit<PortalProps, \"children\">",
      "defaultValue": "'{ isDisabled: true }'",
      "required": false,
      "description": "Props to be forwarded to the portal component."
    },
    "preventOverflow": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, will prevent the popper from being cut off and ensure it's visible within the boundary area."
    },
    "size": {
      "defaultValue": "md",
      "type": "\"xs\" | \"sm\" | \"md\" | \"lg\" | \"sizes\"",
      "required": false,
      "description": "The size of the MonthPicker."
    },
    "strategy": {
      "type": "\"fixed\" | \"absolute\"",
      "defaultValue": "'absolute'",
      "required": false,
      "description": "The CSS positioning strategy to use."
    },
    "type": {
      "type": "\"month\" | \"year\"",
      "required": false,
      "description": "The type of the month picker."
    },
    "value": {
      "type": "Date",
      "required": false,
      "description": "The value of the calendar."
    },
    "variant": {
      "defaultValue": "outline",
      "type": "\"outline\" | \"filled\" | \"flushed\" | \"unstyled\"",
      "required": false,
      "description": "The variant of the MonthPicker."
    },
    "withControls": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, display the calendar control buttons."
    },
    "withHeader": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, display the calendar header."
    },
    "withLabel": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, display the calendar label button."
    },
    "yearFormat": {
      "type": "string",
      "defaultValue": "'YYYY'",
      "required": false,
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    }
  },
  "YearPicker": {
    "_accept": { "type": "CSSUIObject", "required": false },
    "_active": { "type": "CSSUIObject", "required": false },
    "_after": { "type": "CSSUIObject", "required": false },
    "_anyLink": { "type": "CSSUIObject", "required": false },
    "_autofill": { "type": "CSSUIObject", "required": false },
    "_backdrop": { "type": "CSSUIObject", "required": false },
    "_before": { "type": "CSSUIObject", "required": false },
    "_between": { "type": "CSSUIObject", "required": false },
    "_blank": { "type": "CSSUIObject", "required": false },
    "_checked": { "type": "CSSUIObject", "required": false },
    "_cue": { "type": "CSSUIObject", "required": false },
    "_cueRegion": { "type": "CSSUIObject", "required": false },
    "_dark": { "type": "CSSUIObject", "required": false },
    "_default": { "type": "CSSUIObject", "required": false },
    "_disabled": { "type": "CSSUIObject", "required": false },
    "_empty": { "type": "CSSUIObject", "required": false },
    "_enabled": { "type": "CSSUIObject", "required": false },
    "_end": { "type": "CSSUIObject", "required": false },
    "_even": { "type": "CSSUIObject", "required": false },
    "_expanded": { "type": "CSSUIObject", "required": false },
    "_fileSelector": { "type": "CSSUIObject", "required": false },
    "_filled": { "type": "CSSUIObject", "required": false },
    "_first": { "type": "CSSUIObject", "required": false },
    "_firstLetter": { "type": "CSSUIObject", "required": false },
    "_firstLine": { "type": "CSSUIObject", "required": false },
    "_focus": { "type": "CSSUIObject", "required": false },
    "_focusVisible": { "type": "CSSUIObject", "required": false },
    "_focusWithin": { "type": "CSSUIObject", "required": false },
    "_fullScreen": { "type": "CSSUIObject", "required": false },
    "_grabbed": { "type": "CSSUIObject", "required": false },
    "_groupAccept": { "type": "CSSUIObject", "required": false },
    "_groupActive": { "type": "CSSUIObject", "required": false },
    "_groupBlank": { "type": "CSSUIObject", "required": false },
    "_groupChecked": { "type": "CSSUIObject", "required": false },
    "_groupDisabled": { "type": "CSSUIObject", "required": false },
    "_groupEnabled": { "type": "CSSUIObject", "required": false },
    "_groupExpanded": { "type": "CSSUIObject", "required": false },
    "_groupFocus": { "type": "CSSUIObject", "required": false },
    "_groupFocusVisible": { "type": "CSSUIObject", "required": false },
    "_groupFocusWithin": { "type": "CSSUIObject", "required": false },
    "_groupGrabbed": { "type": "CSSUIObject", "required": false },
    "_groupHorizontal": { "type": "CSSUIObject", "required": false },
    "_groupHover": { "type": "CSSUIObject", "required": false },
    "_groupIdle": { "type": "CSSUIObject", "required": false },
    "_groupInvalid": { "type": "CSSUIObject", "required": false },
    "_groupLoaded": { "type": "CSSUIObject", "required": false },
    "_groupLoading": { "type": "CSSUIObject", "required": false },
    "_groupOptional": { "type": "CSSUIObject", "required": false },
    "_groupPlaceholderShown": { "type": "CSSUIObject", "required": false },
    "_groupPressed": { "type": "CSSUIObject", "required": false },
    "_groupReadOnly": { "type": "CSSUIObject", "required": false },
    "_groupReadWrite": { "type": "CSSUIObject", "required": false },
    "_groupReject": { "type": "CSSUIObject", "required": false },
    "_groupRequired": { "type": "CSSUIObject", "required": false },
    "_groupSelected": { "type": "CSSUIObject", "required": false },
    "_groupUserInvalid": { "type": "CSSUIObject", "required": false },
    "_groupValid": { "type": "CSSUIObject", "required": false },
    "_groupVertical": { "type": "CSSUIObject", "required": false },
    "_hidden": { "type": "CSSUIObject", "required": false },
    "_holiday": { "type": "CSSUIObject", "required": false },
    "_horizontal": { "type": "CSSUIObject", "required": false },
    "_hover": { "type": "CSSUIObject", "required": false },
    "_idle": { "type": "CSSUIObject", "required": false },
    "_indeterminate": { "type": "CSSUIObject", "required": false },
    "_inRange": { "type": "CSSUIObject", "required": false },
    "_invalid": { "type": "CSSUIObject", "required": false },
    "_last": { "type": "CSSUIObject", "required": false },
    "_light": { "type": "CSSUIObject", "required": false },
    "_link": { "type": "CSSUIObject", "required": false },
    "_loaded": { "type": "CSSUIObject", "required": false },
    "_loading": { "type": "CSSUIObject", "required": false },
    "_marker": { "type": "CSSUIObject", "required": false },
    "_mediaDark": { "type": "CSSUIObject", "required": false },
    "_mediaLight": { "type": "CSSUIObject", "required": false },
    "_mediaReduceMotion": { "type": "CSSUIObject", "required": false },
    "_modal": { "type": "CSSUIObject", "required": false },
    "_nativeActive": { "type": "CSSUIObject", "required": false },
    "_nativeChecked": { "type": "CSSUIObject", "required": false },
    "_nativeDisabled": { "type": "CSSUIObject", "required": false },
    "_nativeFocus": { "type": "CSSUIObject", "required": false },
    "_nativeFocusVisible": { "type": "CSSUIObject", "required": false },
    "_nativeFocusWithin": { "type": "CSSUIObject", "required": false },
    "_nativeHidden": { "type": "CSSUIObject", "required": false },
    "_nativeHover": { "type": "CSSUIObject", "required": false },
    "_nativeReadOnly": { "type": "CSSUIObject", "required": false },
    "_nativeTarget": { "type": "CSSUIObject", "required": false },
    "_nativeValid": { "type": "CSSUIObject", "required": false },
    "_notFirst": { "type": "CSSUIObject", "required": false },
    "_notLast": { "type": "CSSUIObject", "required": false },
    "_notTarget": { "type": "CSSUIObject", "required": false },
    "_odd": { "type": "CSSUIObject", "required": false },
    "_only": { "type": "CSSUIObject", "required": false },
    "_optional": { "type": "CSSUIObject", "required": false },
    "_outRange": { "type": "CSSUIObject", "required": false },
    "_outside": { "type": "CSSUIObject", "required": false },
    "_paused": { "type": "CSSUIObject", "required": false },
    "_peerAccept": { "type": "CSSUIObject", "required": false },
    "_peerActive": { "type": "CSSUIObject", "required": false },
    "_peerBlank": { "type": "CSSUIObject", "required": false },
    "_peerChecked": { "type": "CSSUIObject", "required": false },
    "_peerDisabled": { "type": "CSSUIObject", "required": false },
    "_peerEnabled": { "type": "CSSUIObject", "required": false },
    "_peerExpanded": { "type": "CSSUIObject", "required": false },
    "_peerFocus": { "type": "CSSUIObject", "required": false },
    "_peerFocusVisible": { "type": "CSSUIObject", "required": false },
    "_peerFocusWithin": { "type": "CSSUIObject", "required": false },
    "_peerGrabbed": { "type": "CSSUIObject", "required": false },
    "_peerHorizontal": { "type": "CSSUIObject", "required": false },
    "_peerHover": { "type": "CSSUIObject", "required": false },
    "_peerIdle": { "type": "CSSUIObject", "required": false },
    "_peerInvalid": { "type": "CSSUIObject", "required": false },
    "_peerLoaded": { "type": "CSSUIObject", "required": false },
    "_peerLoading": { "type": "CSSUIObject", "required": false },
    "_peerOptional": { "type": "CSSUIObject", "required": false },
    "_peerPlaceholderShown": { "type": "CSSUIObject", "required": false },
    "_peerPressed": { "type": "CSSUIObject", "required": false },
    "_peerReadOnly": { "type": "CSSUIObject", "required": false },
    "_peerReadWrite": { "type": "CSSUIObject", "required": false },
    "_peerReject": { "type": "CSSUIObject", "required": false },
    "_peerRequired": { "type": "CSSUIObject", "required": false },
    "_peerSelected": { "type": "CSSUIObject", "required": false },
    "_peerUserInvalid": { "type": "CSSUIObject", "required": false },
    "_peerValid": { "type": "CSSUIObject", "required": false },
    "_peerVertical": { "type": "CSSUIObject", "required": false },
    "_picture": { "type": "CSSUIObject", "required": false },
    "_placeholder": { "type": "CSSUIObject", "required": false },
    "_placeholderShown": { "type": "CSSUIObject", "required": false },
    "_playing": { "type": "CSSUIObject", "required": false },
    "_pressed": { "type": "CSSUIObject", "required": false },
    "_print": { "type": "CSSUIObject", "required": false },
    "_readOnly": { "type": "CSSUIObject", "required": false },
    "_readWrite": { "type": "CSSUIObject", "required": false },
    "_reject": { "type": "CSSUIObject", "required": false },
    "_required": { "type": "CSSUIObject", "required": false },
    "_ripple": { "type": "CSSUIObject", "required": false },
    "_scrollbar": { "type": "CSSUIObject", "required": false },
    "_scrollbarButton": { "type": "CSSUIObject", "required": false },
    "_scrollbarCorner": { "type": "CSSUIObject", "required": false },
    "_scrollbarThumb": { "type": "CSSUIObject", "required": false },
    "_scrollbarTrack": { "type": "CSSUIObject", "required": false },
    "_scrollbarTrackPiece": { "type": "CSSUIObject", "required": false },
    "_selected": { "type": "CSSUIObject", "required": false },
    "_selection": { "type": "CSSUIObject", "required": false },
    "_start": { "type": "CSSUIObject", "required": false },
    "_target": { "type": "CSSUIObject", "required": false },
    "_today": { "type": "CSSUIObject", "required": false },
    "_userInvalid": { "type": "CSSUIObject", "required": false },
    "_valid": { "type": "CSSUIObject", "required": false },
    "_vertical": { "type": "CSSUIObject", "required": false },
    "_visited": { "type": "CSSUIObject", "required": false },
    "_weekend": { "type": "CSSUIObject", "required": false },
    "allowInput": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, allows input."
    },
    "allowInputBeyond": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, allows input of dates beyond the `minDate` and `maxDate` restrictions."
    },
    "animation": {
      "type": "\"bottom\" | \"left\" | \"right\" | \"top\" | \"scale\" | \"none\"",
      "defaultValue": "'scale'",
      "required": false,
      "description": "The animation of the popover."
    },
    "boundary": {
      "type": "HTMLElement | \"clippingParents\" | \"scrollParent\"",
      "defaultValue": "'clippingParents'",
      "required": false,
      "description": "The boundary area for the popper. Used within the `preventOverflow` modifier."
    },
    "calendarColorScheme": {
      "type": "(string & {}) | \"link\" | \"whiteAlpha\" | \"blackAlpha\" | \"gray\" | \"neutral\" | \"red\" | \"rose\" | \"pink\" | \"flashy\" | \"orange\" | \"amber\" | \"yellow\" | \"lime\" | \"green\" | \"emerald\" | \"teal\" | ... 12 more ... | \"danger\"",
      "required": false,
      "description": "ColorScheme for the calendar component."
    },
    "calendarProps": {
      "type": "CalendarBaseProps",
      "required": false,
      "description": "Props for calendar component."
    },
    "calendarSize": {
      "type": "UIValue<(string & {}) | \"sm\" | \"md\" | \"lg\" | \"full\">",
      "required": false,
      "description": "Size for the calendar component."
    },
    "calendarVariant": {
      "type": "UIValue<(string & {}) | \"solid\" | \"subtle\" | \"unstyled\">",
      "required": false,
      "description": "Variant for the calendar component."
    },
    "clearIconProps": {
      "type": "DatePickerIconProps",
      "required": false,
      "description": "Props for year picker clear icon element."
    },
    "closeDelay": {
      "type": "number",
      "defaultValue": "200",
      "required": false,
      "description": "The number of delay time to close."
    },
    "closeOnBlur": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, the popover will close when you blur out it by clicking outside or tabbing out."
    },
    "closeOnEsc": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, the popover will close when you hit the `Esc` key."
    },
    "closeOnSelect": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, the calendar component will be closed when value is selected."
    },
    "colorScheme": {
      "type": "\"whiteAlpha\" | \"blackAlpha\" | \"gray\" | \"neutral\" | \"red\" | \"danger\" | \"rose\" | \"pink\" | \"flashy\" | \"orange\" | \"warning\" | \"amber\" | \"yellow\" | \"lime\" | \"green\" | \"success\" | \"emerald\" | \"teal\" | \"cyan\" | \"sky\" | \"blue\" | \"primary\" | \"info\" | \"link\" | \"indigo\" | \"violet\" | \"secondary\" | \"purple\" | \"fuchsia\"",
      "required": false,
      "description": "The visual color appearance of the component."
    },
    "containerProps": {
      "type": "Omit<HTMLUIProps, \"children\">",
      "required": false,
      "description": "Props for year picker container element."
    },
    "contentProps": {
      "type": "Omit<MotionProps, \"children\">",
      "required": false,
      "description": "Props for year picker container element."
    },
    "defaultIsOpen": {
      "type": "boolean",
      "required": false,
      "description": "If `true`, the popover will be initially opened."
    },
    "defaultValue": {
      "type": "Date",
      "required": false,
      "description": "The initial value of the calendar."
    },
    "duration": {
      "type": "number | MotionLifecycleProps<number>",
      "required": false,
      "description": "The animation duration."
    },
    "errorBorderColor": {
      "type": "string",
      "required": false,
      "description": "The border color when the input is invalid."
    },
    "eventListeners": {
      "type": "type ONLY_FOR_FORMAT =\n  | boolean\n  | { scroll?: boolean | undefined; resize?: boolean | undefined }",
      "defaultValue": true,
      "required": false,
      "description": "If provided, determines whether the popper will reposition itself on `scroll`  and `resize` of the window."
    },
    "fieldProps": {
      "type": "Omit<DatePickerFieldProps, \"children\" | \"inputProps\">",
      "required": false,
      "description": "Props for year picker field element."
    },
    "flip": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, the popper will change its placement and flip when it's about to overflow its boundary area."
    },
    "focusBorderColor": {
      "type": "string",
      "required": false,
      "description": "The border color when the input is focused."
    },
    "gutter": {
      "type": "UIValue<number>",
      "defaultValue": "8",
      "required": false,
      "description": "The distance or margin between the reference and popper.\nIt is used internally to create an `offset` modifier."
    },
    "iconProps": {
      "type": "DatePickerIconProps",
      "required": false,
      "description": "Props for year picker icon element."
    },
    "inputFormat": {
      "type": "string",
      "defaultValue": "'YYYY/MM/DD'",
      "required": false,
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    },
    "inputProps": {
      "type": "HTMLUIProps<\"input\">",
      "required": false,
      "description": "Props for year picker input element."
    },
    "isClearable": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, display the year picker clear icon."
    },
    "isDisabled": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be disabled."
    },
    "isInvalid": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be invalid."
    },
    "isLazy": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the PopoverContent rendering will be deferred until the popover is open."
    },
    "isOpen": {
      "type": "boolean",
      "required": false,
      "description": "If `true`, the popover will be opened."
    },
    "isReadOnly": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be readonly."
    },
    "isRequired": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be required."
    },
    "lazyBehavior": {
      "type": "LazyMode",
      "defaultValue": "'unmount'",
      "required": false,
      "description": "The lazy behavior of popover's content when not visible. Only works when `isLazy={true}`\n\n- `unmount`: The popover's content is always unmounted when not open.\n- `keepMounted`: The popover's content initially unmounted, but stays mounted when popover is open."
    },
    "locale": {
      "type": "string",
      "defaultValue": "'en'",
      "required": false,
      "description": "The locale of the calendar.\nCheck the docs to see the locale of possible modifiers you can pass.",
      "see": "https://day.js.org/docs/en/i18n/instance-locale"
    },
    "matchWidth": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the popper will match the width of the reference at all times.\nIt's useful for `autocomplete`, `date-picker` and `select` patterns."
    },
    "maxDate": {
      "type": "Date",
      "required": false,
      "description": "The maximum possible date."
    },
    "minDate": {
      "type": "Date",
      "required": false,
      "description": "The minimum possible date."
    },
    "modifiers": {
      "type": "Partial<Modifier<string, any>>[]",
      "required": false,
      "description": "Array of popper.js modifiers.\nCheck the docs to see the list of possible modifiers you can pass.",
      "see": "https://popper.js.org/docs/v2/modifiers/"
    },
    "offset": {
      "type": "[number, number]",
      "required": false,
      "description": "The main and cross-axis offset to displace popper element from its reference element."
    },
    "onChange": {
      "type": "(value: Date | undefined) => void",
      "required": false,
      "description": "The callback invoked when value state changes."
    },
    "onClose": {
      "type": "() => void",
      "required": false,
      "description": "Callback fired when the popover closes."
    },
    "onOpen": {
      "type": "() => void",
      "required": false,
      "description": "Callback fired when the popover opens."
    },
    "openDelay": {
      "type": "number",
      "defaultValue": "200",
      "required": false,
      "description": "The number of delay time to open."
    },
    "parseDate": {
      "type": "(value: string) => Date | undefined",
      "required": false,
      "description": "Function that converts the input value to Date type."
    },
    "pattern": {
      "type": "RegExp",
      "defaultValue": "'/[^0-9\\-\\/]/g'",
      "required": false,
      "description": "The pattern used to check the input element."
    },
    "placement": {
      "type": "UIValue<Placement>",
      "defaultValue": "'bottom'",
      "required": false,
      "description": "The placement of the popper relative to its reference."
    },
    "portalProps": {
      "type": "Omit<PortalProps, \"children\">",
      "defaultValue": "'{ isDisabled: true }'",
      "required": false,
      "description": "Props to be forwarded to the portal component."
    },
    "preventOverflow": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, will prevent the popper from being cut off and ensure it's visible within the boundary area."
    },
    "size": {
      "defaultValue": "md",
      "type": "\"xs\" | \"sm\" | \"md\" | \"lg\" | \"sizes\"",
      "required": false,
      "description": "The size of the YearPicker."
    },
    "strategy": {
      "type": "\"fixed\" | \"absolute\"",
      "defaultValue": "'absolute'",
      "required": false,
      "description": "The CSS positioning strategy to use."
    },
    "value": {
      "type": "Date",
      "required": false,
      "description": "The value of the calendar."
    },
    "variant": {
      "defaultValue": "outline",
      "type": "\"outline\" | \"filled\" | \"flushed\" | \"unstyled\"",
      "required": false,
      "description": "The variant of the YearPicker."
    },
    "withControls": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, display the calendar control buttons."
    },
    "withHeader": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, display the calendar header."
    },
    "withLabel": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, display the calendar label button."
    },
    "yearFormat": {
      "type": "string",
      "defaultValue": "'YYYY'",
      "required": false,
      "description": "The format used for conversion.\nCheck the docs to see the format of possible modifiers you can pass.",
      "see": "https://day.js.org/docs/en/display/format#list-of-localized-formats"
    }
  }
}
