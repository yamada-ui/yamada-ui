{
  "Checkbox": {
    "colorScheme": {
      "defaultValue": "primary",
      "type": "\"whiteAlpha\" | \"blackAlpha\" | \"gray\" | \"neutral\" | \"red\" | \"danger\" | \"rose\" | \"pink\" | \"flashy\" | \"orange\" | \"warning\" | \"amber\" | \"yellow\" | \"lime\" | \"green\" | \"success\" | \"emerald\" | \"teal\" | \"cyan\" | \"sky\" | \"blue\" | \"primary\" | \"info\" | \"link\" | \"indigo\" | \"violet\" | \"secondary\" | \"purple\" | \"fuchsia\"",
      "required": false,
      "description": "The visual color appearance of the component."
    },
    "defaultIsChecked": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the checkbox will be initially checked."
    },
    "iconProps": {
      "type": "Omit<HTMLUIProps<\"span\">, \"children\"> & {\n  children: ReactElement<any, string | JSXElementConstructor<any>>\n}",
      "required": false,
      "description": "Props for icon component."
    },
    "id": {
      "type": "string",
      "required": false,
      "description": "id assigned to input."
    },
    "inputProps": {
      "type": "InputHTMLAttributes<HTMLInputElement>",
      "required": false,
      "description": "Props for input element."
    },
    "isChecked": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the checkbox will be checked."
    },
    "isDisabled": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be disabled."
    },
    "isIndeterminate": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the checkbox will be indeterminate."
    },
    "isInvalid": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be invalid."
    },
    "isReadOnly": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be readonly."
    },
    "isRequired": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be required."
    },
    "labelProps": {
      "type": "HTMLUIProps<\"span\">",
      "required": false,
      "description": "Props for label element."
    },
    "name": {
      "type": "string",
      "required": false,
      "description": "The HTML `name` attribute used for forms."
    },
    "onBlur": {
      "type": "FocusEventHandler<HTMLInputElement>",
      "required": false,
      "description": "The callback invoked when the checkbox is blurred."
    },
    "onChange": {
      "type": "ChangeEventHandler<HTMLInputElement>",
      "required": false,
      "description": "The callback invoked when the checked state changes."
    },
    "onFocus": {
      "type": "FocusEventHandler<HTMLInputElement>",
      "required": false,
      "description": "The callback invoked when the checkbox is focused."
    },
    "size": {
      "defaultValue": "md",
      "type": "\"sm\" | \"md\" | \"lg\"",
      "required": false,
      "description": "The size of the Checkbox."
    },
    "tabIndex": {
      "type": "number",
      "required": false,
      "description": "The tab-index property of the underlying input element."
    },
    "value": {
      "type": "Y",
      "required": false,
      "description": "The value to be used in the checkbox input."
    },
    "variant": {
      "type": "string",
      "required": false,
      "description": "The variant of the Checkbox."
    }
  },
  "CheckboxIcon": {
    "as": {
      "type": "\"symbol\" | \"object\" | \"clipPath\" | \"text\" | \"g\" | \"marker\" | \"mask\" | \"p\" | \"filter\" | \"label\" | \"form\" | \"style\" | \"title\" | \"animate\" | \"svg\" | \"a\" | \"abbr\" | \"address\" | \"area\" | ... 149 more ... | \"view\"",
      "required": false,
      "description": "The HTML element to render."
    },
    "isChecked": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the icon will be checked."
    },
    "isDisabled": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be disabled."
    },
    "isIndeterminate": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the icon will be indeterminate."
    },
    "isInvalid": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be invalid."
    },
    "isReadOnly": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be readonly."
    },
    "isRequired": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be required."
    }
  },
  "UseCheckbox": {
    "defaultIsChecked": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the checkbox will be initially checked."
    },
    "id": {
      "type": "string",
      "required": false,
      "description": "id assigned to input."
    },
    "isChecked": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the checkbox will be checked."
    },
    "isDisabled": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be disabled."
    },
    "isIndeterminate": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the checkbox will be indeterminate."
    },
    "isInvalid": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be invalid."
    },
    "isReadOnly": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be readonly."
    },
    "isRequired": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be required."
    },
    "name": {
      "type": "string",
      "required": false,
      "description": "The HTML `name` attribute used for forms."
    },
    "onBlur": {
      "type": "FocusEventHandler<HTMLInputElement>",
      "required": false,
      "description": "The callback invoked when the checkbox is blurred."
    },
    "onChange": {
      "type": "ChangeEventHandler<HTMLInputElement>",
      "required": false,
      "description": "The callback invoked when the checked state changes."
    },
    "onFocus": {
      "type": "FocusEventHandler<HTMLInputElement>",
      "required": false,
      "description": "The callback invoked when the checkbox is focused."
    },
    "tabIndex": {
      "type": "number",
      "required": false,
      "description": "The tab-index property of the underlying input element."
    },
    "value": {
      "type": "Y",
      "required": false,
      "description": "The value to be used in the checkbox input."
    }
  },
  "CheckboxGroup": {
    "align": {
      "type": "UIValue<AlignItems>",
      "required": false,
      "description": "The CSS `align-items` property."
    },
    "basis": {
      "type": "UIValue<number | \"content\" | \"px\" | \"initial\" | \"inherit\" | (string & {}) | \"auto\" | \"max\" | \"min\" | \"1\" | \"2\" | \"3\" | \"-moz-initial\" | \"revert\" | \"revert-layer\" | \"unset\" | \"sm\" | \"md\" | ... 67 more ... | \"9xl\">",
      "required": false,
      "description": "The CSS `flex-basis` property."
    },
    "defaultValue": {
      "type": "Y[]",
      "required": false,
      "description": "The initial value of the checkbox group."
    },
    "direction": {
      "type": "UIValue<FlexDirection>",
      "required": false,
      "description": "The CSS `flex-direction` property."
    },
    "grow": {
      "type": "UIValue<FlexGrow>",
      "required": false,
      "description": "The CSS `flex-grow` property."
    },
    "isDisabled": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be disabled."
    },
    "isInvalid": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be invalid."
    },
    "isNative": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, input elements will receive `checked` attribute instead of `isChecked`.\n\nThis assumes, you're using native radio inputs."
    },
    "isReadOnly": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be readonly."
    },
    "isRequired": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be required."
    },
    "items": {
      "type": "CheckboxItem<Y>[]",
      "defaultValue": "'[]'",
      "required": false,
      "description": "If provided, generate checkboxes based on items."
    },
    "justify": {
      "type": "UIValue<JustifyContent>",
      "required": false,
      "description": "The CSS `justify-content` property."
    },
    "onChange": {
      "type": "(value: Y[]) => void",
      "required": false,
      "description": "The callback fired when any children checkbox is checked or unchecked."
    },
    "shrink": {
      "type": "UIValue<FlexShrink>",
      "required": false,
      "description": "The CSS `flex-shrink` property."
    },
    "value": {
      "type": "Y[]",
      "required": false,
      "description": "The value of the checkbox group."
    },
    "wrap": {
      "type": "UIValue<FlexWrap>",
      "required": false,
      "description": "The CSS `flex-wrap` property."
    }
  },
  "UseCheckboxGroup": {
    "defaultValue": {
      "type": "Y[]",
      "required": false,
      "description": "The initial value of the checkbox group."
    },
    "isNative": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, input elements will receive `checked` attribute instead of `isChecked`.\n\nThis assumes, you're using native radio inputs."
    },
    "onChange": {
      "type": "(value: Y[]) => void",
      "required": false,
      "description": "The callback fired when any children checkbox is checked or unchecked."
    },
    "value": {
      "type": "Y[]",
      "required": false,
      "description": "The value of the checkbox group."
    }
  }
}
