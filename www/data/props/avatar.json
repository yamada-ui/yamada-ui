{
  "Avatar": {
    "as": {
      "type": "As",
      "description": "The HTML element to render.",
      "required": false
    },
    "asChild": {
      "type": "boolean",
      "description": "Merges its props onto its immediate child.",
      "required": false
    },
    "css": {
      "type": "CSSObject | CSSObject[]",
      "description": "The CSS object.",
      "required": false
    },
    "colorScheme": {
      "type": "\"link\" | \"amber\" | \"black\" | \"blue\" | \"cyan\" | \"danger\" | \"emerald\" | \"error\" | \"flashy\" | \"fuchsia\" ...",
      "description": "Set color scheme variables.",
      "required": false
    },
    "size": {
      "type": "\"lg\" | \"md\" | \"sm\" | \"xl\" | \"xs\"",
      "description": "The size of the component.",
      "required": false
    },
    "variant": {
      "type": "\"outline\" | \"solid\" | \"subtle\" | \"surface\"",
      "description": "The variant of the component.",
      "required": false
    },
    "alt": {
      "type": "HTMLProps<\"img\">[\"alt\"]",
      "description": "The `HTMLImageElement` property `alt`.",
      "required": false
    },
    "crossOrigin": {
      "type": "HTMLProps<\"img\">[\"crossOrigin\"]",
      "description": "The `HTMLImageElement` property `crossOrigin`.",
      "required": false
    },
    "fallback": {
      "type": "ReactNode",
      "description": "The fallback text to display if the image is not provided.",
      "required": false
    },
    "fallbackProps": {
      "type": "AvatarFallbackProps",
      "description": "The props to pass to the fallback component.",
      "required": false
    },
    "format": {
      "type": "(name: string) => string",
      "description": "Function to get the initials to display.",
      "required": false
    },
    "icon": {
      "type": "ReactElement",
      "description": "The avatar icon to use.",
      "required": false
    },
    "imageProps": {
      "type": "AvatarImageProps",
      "description": "The props to pass to the image component.",
      "required": false
    },
    "loading": {
      "type": "HTMLProps<\"img\">[\"loading\"]",
      "description": "Defines loading strategy.",
      "required": false
    },
    "name": {
      "type": "string",
      "description": "The name of the person in the avatar.\n\n- If `src` has loaded, the name will be used as the `alt` attribute of the `img`\n- If `src` is not loaded, the name will be used to create the initials",
      "required": false
    },
    "referrerPolicy": {
      "type": "HTMLProps<\"img\">[\"referrerPolicy\"]",
      "defaultValue": "\"no-referrer\"",
      "description": "Defining which referrer is sent when fetching the resource.",
      "required": false
    },
    "shape": {
      "type": "\"circle\" | \"square\" | \"rounded\"",
      "defaultValue": "\"circle\"",
      "description": "The shape of the component",
      "required": false
    },
    "src": {
      "type": "HTMLProps<\"img\">[\"src\"]",
      "description": "The image url of the avatar.",
      "required": false
    },
    "srcSet": {
      "type": "HTMLProps<\"img\">[\"srcSet\"]",
      "description": "List of sources to use for different screen resolutions.",
      "required": false
    }
  },
  "AvatarGroup": {
    "Item": {
      "as": {
        "type": "As",
        "description": "The HTML element to render.",
        "required": false
      },
      "asChild": {
        "type": "boolean",
        "description": "Merges its props onto its immediate child.",
        "required": false
      },
      "css": {
        "type": "CSSObject | CSSObject[]",
        "description": "The CSS object.",
        "required": false
      },
      "colorScheme": {
        "type": "\"link\" | \"amber\" | \"black\" | \"blue\" | \"cyan\" | \"danger\" | \"emerald\" | \"error\" | \"flashy\" | \"fuchsia\" ...",
        "description": "Set color scheme variables.",
        "required": false
      },
      "size": {
        "type": "\"lg\" | \"md\" | \"sm\" | \"xl\" | \"xs\"",
        "description": "The size of the component.",
        "required": false
      },
      "variant": {
        "type": "\"outline\" | \"solid\" | \"subtle\" | \"surface\"",
        "description": "The variant of the component.",
        "required": false
      },
      "alt": {
        "type": "HTMLProps<\"img\">[\"alt\"]",
        "description": "The `HTMLImageElement` property `alt`.",
        "required": false
      },
      "crossOrigin": {
        "type": "HTMLProps<\"img\">[\"crossOrigin\"]",
        "description": "The `HTMLImageElement` property `crossOrigin`.",
        "required": false
      },
      "fallback": {
        "type": "ReactNode",
        "description": "The fallback text to display if the image is not provided.",
        "required": false
      },
      "fallbackProps": {
        "type": "AvatarFallbackProps",
        "description": "The props to pass to the fallback component.",
        "required": false
      },
      "format": {
        "type": "(name: string) => string",
        "description": "Function to get the initials to display.",
        "required": false
      },
      "icon": {
        "type": "ReactElement",
        "description": "The avatar icon to use.",
        "required": false
      },
      "imageProps": {
        "type": "AvatarImageProps",
        "description": "The props to pass to the image component.",
        "required": false
      },
      "loading": {
        "type": "HTMLProps<\"img\">[\"loading\"]",
        "description": "Defines loading strategy.",
        "required": false
      },
      "name": {
        "type": "string",
        "description": "The name of the person in the avatar.\n\n- If `src` has loaded, the name will be used as the `alt` attribute of the `img`\n- If `src` is not loaded, the name will be used to create the initials",
        "required": false
      },
      "referrerPolicy": {
        "type": "HTMLProps<\"img\">[\"referrerPolicy\"]",
        "defaultValue": "\"no-referrer\"",
        "description": "Defining which referrer is sent when fetching the resource.",
        "required": false
      },
      "shape": {
        "type": "\"circle\" | \"square\" | \"rounded\"",
        "defaultValue": "\"circle\"",
        "description": "The shape of the component",
        "required": false
      },
      "src": {
        "type": "HTMLProps<\"img\">[\"src\"]",
        "description": "The image url of the avatar.",
        "required": false
      },
      "srcSet": {
        "type": "HTMLProps<\"img\">[\"srcSet\"]",
        "description": "List of sources to use for different screen resolutions.",
        "required": false
      }
    },
    "Root": {
      "as": {
        "type": "As",
        "description": "The HTML element to render.",
        "required": false
      },
      "asChild": {
        "type": "boolean",
        "description": "Merges its props onto its immediate child.",
        "required": false
      },
      "css": {
        "type": "CSSObject | CSSObject[]",
        "description": "The CSS object.",
        "required": false
      },
      "colorScheme": {
        "type": "\"link\" | \"amber\" | \"black\" | \"blue\" | \"cyan\" | \"danger\" | \"emerald\" | \"error\" | \"flashy\" | \"fuchsia\" ...",
        "description": "Set color scheme variables.",
        "required": false
      },
      "size": {
        "type": "\"lg\" | \"md\" | \"sm\" | \"xl\" | \"xs\"",
        "description": "The size of the component.",
        "required": false
      },
      "variant": {
        "type": "\"outline\" | \"solid\" | \"subtle\" | \"surface\"",
        "description": "The variant of the component.",
        "required": false
      },
      "max": {
        "type": "number",
        "description": "The maximum number of visible avatars.",
        "required": false
      },
      "reverse": {
        "type": "boolean",
        "description": "Whether to reverse the order of the avatars.",
        "required": false
      },
      "shape": {
        "type": "\"circle\" | \"square\" | \"rounded\"",
        "defaultValue": "\"circle\"",
        "description": "The shape of the component",
        "required": false
      }
    }
  },
  "AvatarGroupRoot": {
    "as": {
      "type": "As",
      "description": "The HTML element to render.",
      "required": false
    },
    "asChild": {
      "type": "boolean",
      "description": "Merges its props onto its immediate child.",
      "required": false
    },
    "css": {
      "type": "CSSObject | CSSObject[]",
      "description": "The CSS object.",
      "required": false
    },
    "colorScheme": {
      "type": "\"link\" | \"amber\" | \"black\" | \"blue\" | \"cyan\" | \"danger\" | \"emerald\" | \"error\" | \"flashy\" | \"fuchsia\" ...",
      "description": "Set color scheme variables.",
      "required": false
    },
    "size": {
      "type": "\"lg\" | \"md\" | \"sm\" | \"xl\" | \"xs\"",
      "description": "The size of the component.",
      "required": false
    },
    "variant": {
      "type": "\"outline\" | \"solid\" | \"subtle\" | \"surface\"",
      "description": "The variant of the component.",
      "required": false
    },
    "max": {
      "type": "number",
      "description": "The maximum number of visible avatars.",
      "required": false
    },
    "reverse": {
      "type": "boolean",
      "description": "Whether to reverse the order of the avatars.",
      "required": false
    },
    "shape": {
      "type": "\"circle\" | \"square\" | \"rounded\"",
      "defaultValue": "\"circle\"",
      "description": "The shape of the component",
      "required": false
    }
  }
}
