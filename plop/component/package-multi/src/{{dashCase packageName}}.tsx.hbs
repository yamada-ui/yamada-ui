import type { CSSUIObject, HTMLUIProps, ThemeProps } from "@yamada-ui/core"
import {
  forwardRef,
  ui,
  useComponentMultiStyle,
  omitThemeProps,
} from "@yamada-ui/core"
import { createContext, cx } from "@yamada-ui/utils"

interface {{upperCase packageName}}Context {
  [key: string]: CSSUIObject | undefined
}

const [{{upperCase packageName}}Provider, use{{upperCase packageName}}] = createContext<{{upperCase packageName}}Context>({
  strict: false,
  name: "{{upperCase packageName}}Context",
})

interface {{upperCase packageName}}Options {}

export interface {{upperCase packageName}}Props extends HTMLUIProps, ThemeProps<"{{upperCase packageName}}">, {{upperCase packageName}}Options {}

/**
 * `{{upperCase packageName}}` is component.
 *
 * @see Docs https://yamada-ui.com/components/{{dashCase categoryName}}/{{dashCase packageName}}
 */
export const {{upperCase packageName}} = forwardRef<{{upperCase packageName}}Props, "div">((props, ref) => {
  const [styles, mergedProps] = useComponentMultiStyle("{{upperCase packageName}}", props)
  const { className, ...rest } = omitThemeProps(mergedProps)

  const css: CSSUIObject = {
    ...styles.unknown,
  }

  return (
    <{{upperCase packageName}}Provider value={styles}>
      <ui.div ref={ref} className={cx("ui-{{dashCase packageName}}", className)} __css={css} {...rest} />
    </{{upperCase packageName}}Provider>
  )
})

{{upperCase packageName}}.displayName = "{{upperCase packageName}}"
{{upperCase packageName}}.__ui__ = "{{upperCase packageName}}"
